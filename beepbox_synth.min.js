var beepbox=function(e){"use strict";
/*!
    Copyright (c) 2012-2022 John Nesky and contributing authors

    Permission is hereby granted, free of charge, to any person obtaining a copy of
    this software and associated documentation files (the "Software"), to deal in
    the Software without restriction, including without limitation the rights to
    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
    of the Software, and to permit persons to whom the Software is furnished to do
    so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
    */var t=e&&e.t||function(e,t,i,s){return new(i||(i=Promise))((function(n,a){function o(e){try{l(s.next(e))}catch(e){a(e)}}function r(e){try{l(s.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,r)}l((s=s.apply(e,t||[])).next())}))};const i=["chip","FM","noise","spectrum","drumset","harmonics","pulse width","picked string","supersaw","chip (custom)","mod","FM (6-op)","additive"];const s=new class{constructor(){this.statusTable={},this.urlTable={},this.totalSamples=0,this.samplesLoaded=0}};class n extends Event{constructor(e,t){super("sampleloaded"),this.totalSamples=e,this.samplesLoaded=t}}class a extends EventTarget{constructor(){super()}}const o=new a;function r(e,i,a,r,l){return t(this,void 0,void 0,(function*(){const t=new AudioContext({sampleRate:l});let h=!1;const c=p.chipWaves[i],m=p.rawChipWaves[i],d=p.rawRawChipWaves[i];fetch(e).then((e=>e.ok?e.arrayBuffer():(s.statusTable[i]=2,Promise.reject(new Error("Couldn't load sample"))))).then((e=>t.decodeAudioData(e))).then((e=>{const l=u(Array.from(e.getChannelData(0))),p=f(l);c.samples=p,m.samples=l,d.samples=l,r.isUsingAdvancedLoopControls&&(a.chipWaveLoopStart=null!=r.chipWaveLoopStart?r.chipWaveLoopStart:0,a.chipWaveLoopEnd=null!=r.chipWaveLoopEnd?r.chipWaveLoopEnd:l.length-1,a.chipWaveLoopMode=null!=r.chipWaveLoopMode?r.chipWaveLoopMode:0,a.chipWavePlayBackwards=r.chipWavePlayBackwards,a.chipWaveStartOffset=null!=r.chipWaveStartOffset?r.chipWaveStartOffset:0),s.samplesLoaded++,s.statusTable[i]=1,o.dispatchEvent(new n(s.totalSamples,s.samplesLoaded)),h||(h=!0,t.close())})).catch((n=>{s.statusTable[i]=2,alert("Failed to load "+e+":\n"+n),h||(h=!0,t.close())}))}))}function l(e){return new Promise(((t,i)=>{if(!p.willReloadForCustomSamples){const i=document.createElement("script");i.src=e,document.head.appendChild(i),i.addEventListener("load",(e=>{t()}))}}))}function h(e){const t=p.chipWaves[0].samples,i=p.rawRawChipWaves[0].samples;if(0==e){const e=[{name:"paandorasbox kick",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox snare",expression:3,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox piano1",expression:3,isSampled:!0,isPercussion:!1,extraSampleDetune:2},{name:"paandorasbox WOW",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"paandorasbox overdrive",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-2},{name:"paandorasbox trumpet",expression:3,isSampled:!0,isPercussion:!1,extraSampleDetune:1.2},{name:"paandorasbox saxophone",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-5},{name:"paandorasbox orchestrahit",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:4.2},{name:"paandorasbox detatched violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:4.2},{name:"paandorasbox synth",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-.8},{name:"paandorasbox sonic3snare",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox come on",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"paandorasbox choir",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-3},{name:"paandorasbox overdriveguitar",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-6.2},{name:"paandorasbox flute",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-6},{name:"paandorasbox legato violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-28},{name:"paandorasbox tremolo violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-33},{name:"paandorasbox amen break",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-55},{name:"paandorasbox pizzicato violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-11},{name:"paandorasbox tim allen grunt",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-20},{name:"paandorasbox tuba",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:44},{name:"paandorasbox loopingcymbal",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-17},{name:"paandorasbox standardkick",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-7},{name:"paandorasbox standardsnare",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox closedhihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:5},{name:"paandorasbox foothihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:4},{name:"paandorasbox openhihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-31},{name:"paandorasbox crashcymbal",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-43},{name:"paandorasbox pianoC4",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-42.5},{name:"paandorasbox liver pad",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-22.5},{name:"paandorasbox marimba",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-15.5},{name:"paandorasbox susdotwav",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-24.5},{name:"paandorasbox wackyboxtts",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-17.5},{name:"paandorasbox peppersteak_1",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-42.2},{name:"paandorasbox peppersteak_2",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-47},{name:"paandorasbox vinyl_noise",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-50},{name:"paandorasbeta slap bass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-56},{name:"paandorasbeta HD EB overdrive guitar",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-60},{name:"paandorasbeta sunsoft bass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-18.5},{name:"paandorasbeta masculine choir",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-50},{name:"paandorasbeta feminine choir",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-60.5},{name:"paandorasbeta tololoche",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-29.5},{name:"paandorasbeta harp",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-54},{name:"paandorasbeta pan flute",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-58},{name:"paandorasbeta krumhorn",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-46},{name:"paandorasbeta timpani",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-50},{name:"paandorasbeta crowd hey",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-29},{name:"paandorasbeta wario land 4 brass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-68},{name:"paandorasbeta wario land 4 rock organ",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-63},{name:"paandorasbeta wario land 4 DAOW",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-35},{name:"paandorasbeta wario land 4 hour chime",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-47.5},{name:"paandorasbeta wario land 4 tick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-12.5},{name:"paandorasbeta kirby kick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby snare",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby bongo",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby click",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta sonor kick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28.5},{name:"paandorasbeta sonor snare",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28.5},{name:"paandorasbeta sonor snare (left hand)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-22.5},{name:"paandorasbeta sonor snare (right hand)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-22.5},{name:"paandorasbeta sonor high tom",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-41.5},{name:"paandorasbeta sonor low tom",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-41.5},{name:"paandorasbeta sonor hihat (closed)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-17},{name:"paandorasbeta sonor hihat (half opened)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-21},{name:"paandorasbeta sonor hihat (open)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-54.5},{name:"paandorasbeta sonor hihat (open tip)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-43.5},{name:"paandorasbeta sonor hihat (pedal)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28},{name:"paandorasbeta sonor crash",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-51},{name:"paandorasbeta sonor crash (tip)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-50.5},{name:"paandorasbeta sonor ride",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46}];s.totalSamples+=e.length;const a=p.rawRawChipWaves.length;for(const n of e){const e=p.rawRawChipWaves.length,a={index:e,name:n.name,expression:n.expression,isSampled:n.isSampled,isPercussion:n.isPercussion,extraSampleDetune:n.extraSampleDetune,samples:i},o={index:e,name:n.name,expression:n.expression,isSampled:n.isSampled,isPercussion:n.isPercussion,extraSampleDetune:n.extraSampleDetune,samples:i},r={index:e,name:n.name,expression:n.expression,isSampled:n.isSampled,isPercussion:n.isPercussion,extraSampleDetune:n.extraSampleDetune,samples:t};p.rawRawChipWaves[e]=o,p.rawRawChipWaves.dictionary[n.name]=o,p.rawChipWaves[e]=a,p.rawChipWaves.dictionary[n.name]=a,p.chipWaves[e]=r,p.chipWaves.dictionary[n.name]=a,s.statusTable[e]=0,s.urlTable[e]="legacySamples"}l("samples.js").then((()=>l("samples2.js"))).then((()=>l("samples3.js"))).then((()=>l("drumsamples.js"))).then((()=>l("wario_samples.js"))).then((()=>l("kirby_samples.js"))).then((()=>{const e=[u(kicksample),u(snaresample),u(pianosample),u(WOWsample),u(overdrivesample),u(trumpetsample),u(saxophonesample),u(orchhitsample),u(detatchedviolinsample),u(synthsample),u(sonic3snaresample),u(comeonsample),u(choirsample),u(overdrivensample),u(flutesample),u(legatoviolinsample),u(tremoloviolinsample),u(amenbreaksample),u(pizzicatoviolinsample),u(timallengruntsample),u(tubasample),u(loopingcymbalsample),u(kickdrumsample),u(snaredrumsample),u(closedhihatsample),u(foothihatsample),u(openhihatsample),u(crashsample),u(pianoC4sample),u(liverpadsample),u(marimbasample),u(susdotwavsample),u(wackyboxttssample),u(peppersteak1),u(peppersteak2),u(vinyl),u(slapbass),u(hdeboverdrive),u(sunsoftbass),u(masculinechoir),u(femininechoir),u(southtololoche),u(harp),u(panflute),u(krumhorn),u(timpani),u(crowdhey),u(warioland4brass),u(warioland4organ),u(warioland4daow),u(warioland4hourchime),u(warioland4tick),u(kirbykick),u(kirbysnare),u(kirbybongo),u(kirbyclick),u(funkkick),u(funksnare),u(funksnareleft),u(funksnareright),u(funktomhigh),u(funktomlow),u(funkhihatclosed),u(funkhihathalfopen),u(funkhihatopen),u(funkhihatopentip),u(funkhihatfoot),u(funkcrash),u(funkcrashtip),u(funkride)];let t=0;for(const i of e){const e=a+t;p.rawChipWaves[e].samples=i,p.rawRawChipWaves[e].samples=i,p.chipWaves[e].samples=f(i),s.statusTable[e]=1,s.samplesLoaded++,o.dispatchEvent(new n(s.totalSamples,s.samplesLoaded)),t++}}))}else if(1==e){const e=[{name:"chronoperc1final",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"synthkickfm",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"mcwoodclick1",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"acoustic snare",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0}];s.totalSamples+=e.length;const a=p.rawRawChipWaves.length;for(const n of e){const e=p.rawRawChipWaves.length,a={index:e,name:n.name,expression:n.expression,isSampled:n.isSampled,isPercussion:n.isPercussion,extraSampleDetune:n.extraSampleDetune,samples:i},o={index:e,name:n.name,expression:n.expression,isSampled:n.isSampled,isPercussion:n.isPercussion,extraSampleDetune:n.extraSampleDetune,samples:i},r={index:e,name:n.name,expression:n.expression,isSampled:n.isSampled,isPercussion:n.isPercussion,extraSampleDetune:n.extraSampleDetune,samples:t};p.rawRawChipWaves[e]=o,p.rawRawChipWaves.dictionary[n.name]=o,p.rawChipWaves[e]=a,p.rawChipWaves.dictionary[n.name]=a,p.chipWaves[e]=r,p.chipWaves.dictionary[n.name]=a,s.statusTable[e]=0,s.urlTable[e]="nintariboxSamples"}l("nintaribox_samples.js").then((()=>{const e=[u(chronoperc1finalsample),u(synthkickfmsample),u(woodclicksample),u(acousticsnaresample)];let t=0;for(const i of e){const e=a+t;p.rawChipWaves[e].samples=i,p.rawRawChipWaves[e].samples=i,p.chipWaves[e].samples=f(i),s.statusTable[e]=1,s.samplesLoaded++,o.dispatchEvent(new n(s.totalSamples,s.samplesLoaded)),t++}}))}else if(2==e){const e=[{name:"cat",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-3},{name:"gameboy",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:7},{name:"mario",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"drum",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:4},{name:"yoshi",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-16},{name:"star",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-16},{name:"fire flower",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-1},{name:"dog",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-1},{name:"oink",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:3},{name:"swan",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:1},{name:"face",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-12}];s.totalSamples+=e.length;const a=p.rawRawChipWaves.length;for(const n of e){const e=p.rawRawChipWaves.length,a={index:e,name:n.name,expression:n.expression,isSampled:n.isSampled,isPercussion:n.isPercussion,extraSampleDetune:n.extraSampleDetune,samples:i},o={index:e,name:n.name,expression:n.expression,isSampled:n.isSampled,isPercussion:n.isPercussion,extraSampleDetune:n.extraSampleDetune,samples:i},r={index:e,name:n.name,expression:n.expression,isSampled:n.isSampled,isPercussion:n.isPercussion,extraSampleDetune:n.extraSampleDetune,samples:t};p.rawRawChipWaves[e]=o,p.rawRawChipWaves.dictionary[n.name]=o,p.rawChipWaves[e]=a,p.rawChipWaves.dictionary[n.name]=a,p.chipWaves[e]=r,p.chipWaves.dictionary[n.name]=a,s.statusTable[e]=0,s.urlTable[e]="marioPaintboxSamples"}l("mario_paintbox_samples.js").then((()=>{const e=[u(catpaintboxsample),u(gameboypaintboxsample),u(mariopaintboxsample),u(drumpaintboxsample),u(yoshipaintboxsample),u(starpaintboxsample),u(fireflowerpaintboxsample),u(dogpaintbox),u(oinkpaintbox),u(swanpaintboxsample),u(facepaintboxsample)];let t=0;for(const i of e){const e=a+t;p.rawChipWaves[e].samples=i,p.rawRawChipWaves[e].samples=i,p.chipWaves[e].samples=f(i),s.statusTable[e]=1,s.samplesLoaded++,o.dispatchEvent(new n(s.totalSamples,s.samplesLoaded)),t++}}))}else console.log("invalid set of built-in samples")}class p{}function u(e){let t=0;for(let i=0;i<e.length;i++)t+=e[i];const i=t/e.length;for(let t=0;t<e.length;t++)e[t]-=i;return f(e),e.push(0),new Float32Array(e)}function c(e){let t=0;u(e);for(let i=0;i<e.length-1;i++)t+=Math.abs(e[i]);const i=t/(e.length-1);for(let t=0;t<e.length-1;t++)e[t]=e[t]/i;return new Float32Array(e)}function f(e){let t=0,i=new Float32Array(e.length);for(let s=0;s<e.length;s++)i[s]=t,t+=e[s];return i}function m(e){let t=0;for(let i=0;i<e.length;i++){const s=e[i];e[i]=t,t+=s}}function d(e){return e/(2*p.pulseWidthRange)}function y(e,t,i){let s=p.chipNoises[e].samples;if(null==s){if(s=new Float32Array(p.chipNoiseLength+1),p.chipNoises[e].samples=s,0==e){let e=1;for(let t=0;t<p.chipNoiseLength;t++){s[t]=2*(1&e)-1;let i=e>>1;1==(e+i&1)&&(i+=16384),e=i}}else if(1==e)for(let e=0;e<p.chipNoiseLength;e++)s[e]=2*Math.random()-1;else if(2==e){let e=1;for(let t=0;t<p.chipNoiseLength;t++){s[t]=2*(1&e)-1;let i=e>>1;1==(e+i&1)&&(i+=32768),e=i}}else if(3==e){let e=1;for(let t=0;t<p.chipNoiseLength;t++){s[t]=2*(1&e)-1;let i=e>>1;1==(e+i&1)&&(i+=40),e=i}}else if(4==e)v(s,p.chipNoiseLength,10,11,1,1,0),v(s,p.chipNoiseLength,11,14,.6578,.6578,0),t(s,p.chipNoiseLength),i(s,1/Math.sqrt(p.chipNoiseLength));else if(5==e)for(var n=1,a=0;a<p.chipNoiseLength;a++){s[a]=2*(1&n)-1,1==(n+(o=n>>1)&1)&&(o+=40),n=o}else if(6==e)v(s,p.chipNoiseLength,1,10,1,1,0),v(s,p.chipNoiseLength,20,14,-2,-2,0),t(s,p.chipNoiseLength),i(s,1/Math.sqrt(p.chipNoiseLength));else if(7==e)for(n=1,a=0;a<p.chipNoiseLength;a++){s[a]=4*(1&n)*(14*Math.random()+1)-8,1==(n+(o=n>>1)&1)&&(o+=60),n=o}else if(8==e)for(n=1,a=0;a<p.chipNoiseLength;a++){s[a]=(1&n)/2-.5,1==(n+(o=n>>1)&1)&&(o-=40),n=o}else if(9==e){let e=1;for(let t=0;t<p.chipNoiseLength;t++){s[t]=2*(1&e)-1.1;let i=e>>1;1==(e+i&1)&&(i+=131080),e=i}}else if(10==e)for(let e=0;e<p.chipNoiseLength;e++)s[e]=Math.round(Math.random());else if(11==e)for(n=1,a=0;a<p.chipNoiseLength;a++){var o;s[a]=Math.round(1&n),1==(n+(o=n>>1)&1)&&(o-=40),n=o}else if(12==e)for(let e=0;e<p.chipNoiseLength;e++){var r=Math.random();s[e]=Math.pow(r,Math.clz32(r))}else if(13==e){var l,h,u,c,f=0,m=0,d=0;f=m=d=l=h=u=c=0;for(let e=0;e<p.chipNoiseLength;e++){f=.99886*f+.0555179*(b=2*Math.random()-1),m=.99332*m+.0750759*b,d=.969*d+.153852*b,l=.8665*l+.3104856*b,h=.55*h+.5329522*b,u=-.7616*u-.016898*b,s[e]=f+m+d+l+h+u+c+.5362*b,s[e]*=.44,c=.115926*b}}else{if(14!=e)throw new Error("Unrecognized drum index: "+e);var y=0;for(let e=0;e<p.chipNoiseLength;e++){var b=2*Math.random()-1;s[e]=(y+.02*b)/1.02,y=s[e],s[e]*=14}}s[p.chipNoiseLength]=s[0]}return s}function v(e,t,i,s,n,a,o){const r=0|Math.pow(2,i),l=Math.min(t>>1,0|Math.pow(2,s)),h=y(0,null,null);let p=0;for(let u=r;u<l;u++){let r=n+(a-n)*(Math.log2(u)-i)/(s-i),l=Math.pow(2,7*(r-1)+1)*r;l*=Math.pow(u/2048,o),p+=l,l*=h[u];const c=.61803398875*u*u*Math.PI*2;e[u]=Math.cos(c)*l,e[t-u]=Math.sin(c)*l}return p}function b(e=0){const t=new Float32Array(p.sineWaveLength+1),i=p.sineWaveLength/4;for(let s=0;s<p.sineWaveLength+1;s++)t[s]=2*+(Math.abs(s-i)<e*p.sineWaveLength/2||Math.abs(s-p.sineWaveLength-i)<e*p.sineWaveLength/2)-1;return t}function g(e=!1){const t=new Float32Array(p.sineWaveLength+1);for(let i=0;i<p.sineWaveLength+1;i++)t[i]=2*(i+p.sineWaveLength/4)/p.sineWaveLength%2-1,t[i]=e?-t[i]:t[i];return t}function S(e,t,i){let s=p.arpeggioPatterns[e-1];return null!=s?(2==e&&0==t&&(s=[0,0,1,1]),s[i%s.length]):i%e}function w(e){const t={};for(let i=0;i<e.length;i++){const s=e[i];s.index=i,t[s.name]=s}const i=e;return i.dictionary=t,i}function M(e){return 0!=(1024&e)}function k(e){return 0!=(2048&e)}function x(e){return 0!=(128&e)}function F(e){return 0!=(256&e)}function q(e){return 0!=(512&e)}function P(e){return 0!=(32&e)}function I(e){return 0!=(8&e)}function T(e){return 0!=(16&e)}function D(e){return 0!=(4&e)}function z(e){return 0!=(2&e)}function H(e){return 0!=(64&e)}function O(e){return 0!=(1&e)}p.thresholdVal=-10,p.kneeVal=40,p.ratioVal=12,p.attackVal=0,p.releaseVal=.25,p.willReloadForCustomSamples=!1,p.jsonFormat="slarmoosbox",p.scales=w([{name:"Free",realName:"chromatic",flags:[!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0]},{name:"Major",realName:"ionian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0]},{name:"Minor",realName:"aeolian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Mixolydian",realName:"mixolydian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!0,!1]},{name:"Lydian",realName:"lydian",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0]},{name:"Dorian",realName:"dorian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!0,!1]},{name:"Phrygian",realName:"phrygian",flags:[!0,!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Locrian",realName:"locrian",flags:[!0,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1]},{name:"Lydian Dominant",realName:"lydian dominant",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!0,!1]},{name:"Phrygian Dominant",realName:"phrygian dominant",flags:[!0,!0,!1,!1,!0,!0,!1,!0,!0,!1,!0,!1]},{name:"Harmonic Major",realName:"harmonic major",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!0,!1,!1,!0]},{name:"Harmonic Minor",realName:"harmonic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0]},{name:"Melodic Minor",realName:"melodic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1,!0]},{name:"Blues",realName:"blues",flags:[!0,!1,!1,!0,!1,!0,!0,!0,!1,!1,!0,!1]},{name:"Altered",realName:"altered",flags:[!0,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Major Pentatonic",realName:"major pentatonic",flags:[!0,!1,!0,!1,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Minor Pentatonic",realName:"minor pentatonic",flags:[!0,!1,!1,!0,!1,!0,!1,!0,!1,!1,!0,!1]},{name:"Whole Tone",realName:"whole tone",flags:[!0,!1,!0,!1,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Octatonic",realName:"octatonic",flags:[!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0]},{name:"Hexatonic",realName:"hexatonic",flags:[!0,!1,!1,!0,!0,!1,!1,!0,!0,!1,!1,!0]},{name:"No Dabbing",realName:"no dabbing",flags:[!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!1]},{name:"Jacked Toad",realName:"jacked toad",flags:[!0,!1,!0,!0,!1,!0,!0,!0,!0,!1,!0,!0]},{name:"Dumb",realName:"Originally named, currently named, and will always be named 'dumb.'",flags:[!0,!1,!1,!1,!1,!0,!0,!0,!0,!1,!1,!0]},{name:"Test Scale",realName:"**t",flags:[!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!1]},{name:"die",realName:"death",flags:[!0,!1,!1,!1,!1,!1,!1,!1,!0,!1,!1,!1]},{name:"Custom",realName:"custom",flags:[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0]}]),p.keys=w([{name:"C",isWhiteKey:!0,basePitch:12},{name:"C♯",isWhiteKey:!1,basePitch:13},{name:"D",isWhiteKey:!0,basePitch:14},{name:"D♯",isWhiteKey:!1,basePitch:15},{name:"E",isWhiteKey:!0,basePitch:16},{name:"F",isWhiteKey:!0,basePitch:17},{name:"F♯",isWhiteKey:!1,basePitch:18},{name:"G",isWhiteKey:!0,basePitch:19},{name:"G♯",isWhiteKey:!1,basePitch:20},{name:"A",isWhiteKey:!0,basePitch:21},{name:"A♯",isWhiteKey:!1,basePitch:22},{name:"B",isWhiteKey:!0,basePitch:23}]),p.blackKeyNameParents=[-1,1,-1,1,-1,1,-1,-1,1,-1,1,-1],p.tempoMin=1,p.tempoMax=500,p.octaveMin=-2,p.octaveMax=2,p.echoDelayRange=24,p.echoDelayStepTicks=4,p.echoSustainRange=8,p.echoShelfHz=4e3,p.echoShelfGain=Math.pow(2,-.5),p.reverbShelfHz=8e3,p.reverbShelfGain=Math.pow(2,-1.5),p.reverbRange=32,p.reverbDelayBufferSize=16384,p.reverbDelayBufferMask=p.reverbDelayBufferSize-1,p.beatsPerBarMin=1,p.beatsPerBarMax=64,p.barCountMin=1,p.barCountMax=1024,p.instrumentCountMin=1,p.layeredInstrumentCountMax=10,p.patternInstrumentCountMax=10,p.partsPerBeat=24,p.ticksPerPart=2,p.ticksPerArpeggio=3,p.arpeggioPatterns=[[0],[0,1],[0,1,2,1],[0,1,2,3],[0,1,2,3,4],[0,1,2,3,4,5],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6,7]],p.rhythms=w([{name:"÷1 (whole notes)",stepsPerBeat:1,roundUpThresholds:[3]},{name:"÷2 (half notes)",stepsPerBeat:2,roundUpThresholds:[3,9]},{name:"÷3 (triplets)",stepsPerBeat:3,roundUpThresholds:[5,12,18]},{name:"÷4 (standard)",stepsPerBeat:4,roundUpThresholds:[3,9,17,21]},{name:"÷6 (sextuplets)",stepsPerBeat:6,roundUpThresholds:null},{name:"÷8 (32nd notes)",stepsPerBeat:8,roundUpThresholds:null},{name:"÷12 (doudectuplets)",stepsPerBeat:12,roundUpThresholds:null},{name:"freehand",stepsPerBeat:24,roundUpThresholds:null}]),p.instrumentTypeNames=["chip","FM","noise","spectrum","drumset","harmonics","PWM","Picked String","supersaw","custom chip","mod","FM6op","additive"],p.instrumentTypeHasSpecialInterval=[!0,!0,!1,!1,!1,!0,!1,!1,!1,!1,!1],p.chipBaseExpression=.03375,p.fmBaseExpression=.03,p.noiseBaseExpression=.19,p.spectrumBaseExpression=.3,p.drumsetBaseExpression=.45,p.harmonicsBaseExpression=.025,p.pwmBaseExpression=.04725,p.supersawBaseExpression=.061425,p.pickedStringBaseExpression=.025,p.additiveBaseExpression=.012,p.distortionBaseVolume=.011,p.bitcrusherBaseVolume=.01,p.rawChipWaves=w([{name:"rounded",expression:.94,samples:u([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0,-.2,-.4,-.5,-.6,-.7,-.8,-.85,-.9,-.95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-.95,-.9,-.85,-.8,-.7,-.6,-.5,-.4,-.2])},{name:"triangle",expression:1,samples:u([1/15,.2,5/15,7/15,.6,11/15,13/15,1,1,13/15,11/15,.6,7/15,5/15,.2,1/15,-1/15,-.2,-5/15,-7/15,-.6,-11/15,-13/15,-1,-1,-13/15,-11/15,-.6,-7/15,-5/15,-.2,-1/15])},{name:"square",expression:.5,samples:u([1,-1])},{name:"1/4 pulse",expression:.5,samples:u([1,-1,-1,-1])},{name:"1/8 pulse",expression:.5,samples:u([1,-1,-1,-1,-1,-1,-1,-1])},{name:"sawtooth",expression:.65,samples:u([1/31,3/31,5/31,7/31,9/31,11/31,13/31,15/31,17/31,19/31,21/31,23/31,25/31,27/31,29/31,1,-1,-29/31,-27/31,-25/31,-23/31,-21/31,-19/31,-17/31,-15/31,-13/31,-11/31,-9/31,-7/31,-5/31,-3/31,-1/31])},{name:"double saw",expression:.5,samples:u([0,-.2,-.4,-.6,-.8,-1,1,-.8,-.6,-.4,-.2,1,.8,.6,.4,.2])},{name:"double pulse",expression:.4,samples:u([1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,-1])},{name:"spiky",expression:.4,samples:u([1,-1,1,-1,1,0])},{name:"sine",expression:.88,samples:c([8,9,11,12,13,14,15,15,15,15,14,14,13,11,10,9,7,6,4,3,2,1,0,0,0,0,1,1,2,4,5,6])},{name:"flute",expression:.8,samples:c([3,4,6,8,10,11,13,14,15,15,14,13,11,8,5,3])},{name:"harp",expression:.8,samples:c([0,3,3,3,4,5,5,6,7,8,9,11,11,13,13,15,15,14,12,11,10,9,8,7,7,5,4,3,2,1,0,0])},{name:"sharp clarinet",expression:.38,samples:c([0,0,0,1,1,8,8,9,9,9,8,8,8,8,8,9,9,7,9,9,10,4,0,0,0,0,0,0,0,0,0,0])},{name:"soft clarinet",expression:.45,samples:c([0,1,5,8,9,9,9,9,9,9,9,11,11,12,13,12,10,9,7,6,4,3,3,3,1,1,1,1,1,1,1,1])},{name:"alto sax",expression:.3,samples:c([5,5,6,4,3,6,8,7,2,1,5,6,5,4,5,7,9,11,13,14,14,14,14,13,10,8,7,7,4,3,4,2])},{name:"bassoon",expression:.35,samples:c([9,9,7,6,5,4,4,4,4,5,7,8,9,10,11,13,13,11,10,9,7,6,4,2,1,1,1,2,2,5,11,14])},{name:"trumpet",expression:.22,samples:c([10,11,8,6,5,5,5,6,7,7,7,7,6,6,7,7,7,7,7,6,6,6,6,6,6,6,6,7,8,9,11,14])},{name:"electric guitar",expression:.2,samples:c([11,12,12,10,6,6,8,0,2,4,8,10,9,10,1,7,11,3,6,6,8,13,14,2,0,12,8,4,13,11,10,13])},{name:"organ",expression:.2,samples:c([11,10,12,11,14,7,5,5,12,10,10,9,12,6,4,5,13,12,12,10,12,5,2,2,8,6,6,5,8,3,2,1])},{name:"pan flute",expression:.35,samples:c([1,4,7,6,7,9,7,7,11,12,13,15,13,11,11,12,13,10,7,5,3,6,10,7,3,3,1,0,1,0,1,0])},{name:"glitch",expression:.5,samples:u},{name:"trapezoid",expression:1,samples:u([1/15,.4,10/15,14/15,1,1,1,1,1,1,1,1,14/15,10/15,.4,1/15,-1/15,-.4,-10/15,-14/15,-1,-1,-1,-1,-1,-1,-1,-1,-14/15,-10/15,-.4,-1/15])},{name:"modbox 10% pulse",expression:.5,samples:c([1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"modbox sunsoft bass",expression:1,samples:c([0,.1875,.3125,.5625,.5,.75,.875,1,1,.6875,.5,.625,.625,.5,.375,.5625,.4375,.5625,.4375,.4375,.3125,.1875,.1875,.375,.5625,.5625,.5625,.5625,.5625,.4375,.25,0])},{name:"modbox loud pulse",expression:.5,samples:c([1,.7,.1,.1,0,0,0,0,0,.1,.2,.15,.25,.125,.215,.345,4])},{name:"modbox sax",expression:.5,samples:c([1/15,.2,5/15,9,.06])},{name:"modbox guitar",expression:.5,samples:c([-.5,3.5,3,-.5,-.25,-1])},{name:"modbox sine",expression:.5,samples:c([0,.05,.125,.2,.25,.3,.425,.475,.525,.625,.675,.725,.775,.8,.825,.875,.9,.925,.95,.975,.98,.99,.995,1,.995,.99,.98,.975,.95,.925,.9,.875,.825,.8,.775,.725,.675,.625,.525,.475,.425,.3,.25,.2,.125,.05,0,-.05,-.125,-.2,-.25,-.3,-.425,-.475,-.525,-.625,-.675,-.725,-.775,-.8,-.825,-.875,-.9,-.925,-.95,-.975,-.98,-.99,-.995,-1,-.995,-.99,-.98,-.975,-.95,-.925,-.9,-.875,-.825,-.8,-.775,-.725,-.675,-.625,-.525,-.475,-.425,-.3,-.25,-.2,-.125,-.05])},{name:"modbox atari bass",expression:.5,samples:c([1,1,1,1,0,1,0,1,1,0,0,1,0,0,0])},{name:"modbox atari pulse",expression:.5,samples:c([1,0,1,1,1,1,1,1,1,1,1,1,1,1,1])},{name:"modbox 1% pulse",expression:.5,samples:c([1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"modbox curved sawtooth",expression:.5,samples:c([1,.5,1/3,1/4])},{name:"modbox viola",expression:.45,samples:c([-.9,-1,-.85,-.775,-.7,-.6,-.5,-.4,-.325,-.225,-.2,-.125,-.1,-.11,-.125,-.15,-.175,-.18,-.2,-.21,-.22,-.21,-.2,-.175,-.15,-.1,-.5,.75,.11,.175,.2,.25,.26,.275,.26,.25,.225,.2,.19,.18,.19,.2,.21,.22,.23,.24,.25,.26,.275,.28,.29,.3,.29,.28,.27,.26,.25,.225,.2,.175,.15,.1,.075,0,-.01,-.025,.025,.075,.2,.3,.475,.6,.75,.85,.85,1,.99,.95,.8,.675,.475,.275,.01,-.15,-.3,-.475,-.5,-.6,-.71,-.81,-.9,-1,-.9])},{name:"modbox brass",expression:.45,samples:c([-1,-.95,-.975,-.9,-.85,-.8,-.775,-.65,-.6,-.5,-.475,-.35,-.275,-.2,-.125,-.05,0,.075,.125,.15,.2,.21,.225,.25,.225,.21,.2,.19,.175,.125,.1,.075,.06,.05,.04,.025,.04,.05,.1,.15,.225,.325,.425,.575,.7,.85,.95,1,.9,.675,.375,.2,.275,.4,.5,.55,.6,.625,.65,.65,.65,.65,.64,.6,.55,.5,.4,.325,.25,.15,.05,-.05,-.15,-.275,-.35,-.45,-.55,-.65,-.7,-.78,-.825,-.9,-.925,-.95,-.975])},{name:"modbox acoustic bass",expression:.5,samples:c([1,0,.1,-.1,-.2,-.4,-.3,-1])},{name:"modbox lyre",expression:.45,samples:c([1,-1,4,2.15,4.13,5.15,0,-.05,1])},{name:"modbox ramp pulse",expression:.5,samples:c([6.1,-2.9,1.4,-2.9])},{name:"modbox piccolo",expression:.5,samples:c([1,4,2,1,-.1,-1,-.12])},{name:"modbox squaretooth",expression:.5,samples:c([.2,1,2.6,1,0,-2.4])},{name:"modbox flatline",expression:1,samples:c([1,.9,.8,.7,.6,.5,.4,.3,.2,.1,0,.1,.2,.3,.4,.5,.6,.7,.8,.9])},{name:"modbox pnryshk a (u5)",expression:.4,samples:c([1,.9,.8,.7,.6,.5,.4,.3,.2,.1,0])},{name:"modbox pnryshk b (riff)",expression:.5,samples:c([1,-.9,.8,-.7,.6,-.5,.4,-.3,.2,-.1,0,-.1,.2,-.3,.4,-.5,.6,-.7,.8,-.9,1])},{name:"sandbox shrill lute",expression:.94,samples:c([1,1.5,1.25,1.2,1.3,1.5])},{name:"sandbox bassoon",expression:.5,samples:c([1,-1,1,1,1,1,1,1,1,1,1,1,0])},{name:"sandbox shrill bass",expression:.5,samples:c([0,1,0,0,1,0,1,0,0,0])},{name:"sandbox nes pulse",expression:.4,samples:c([2.1,-2.2,1.2,3])},{name:"sandbox saw bass",expression:.25,samples:c([1,1,1,1,0,2,1,2,3,1,-2,1,4,1,4,2,1,6,-3,4,2,1,5,1,4,1,5,6,7,1,6,1,4,1,9])},{name:"sandbox euphonium",expression:.3,samples:c([0,1,2,1,2,1,4,2,5,0,-2,1,5,1,2,1,2,4,5,1,5,-2,5,10,1])},{name:"sandbox shrill pulse",expression:.3,samples:c([2,0,4,1,4,6,7,3])},{name:"sandbox r-sawtooth",expression:.2,samples:c([6.1,-2.9,1.4,-2.9])},{name:"sandbox recorder",expression:.2,samples:c([5,-5.1,4,-4.1,3,-3.1,2,-2.1,1,-1.1,6])},{name:"sandbox narrow saw",expression:1.2,samples:c([.1,-1.3,.13/-.3,-.26,.13/-.7,.13/-.9,.13/-.11,.13/-.31,.13/-.51,.13/-.71,.13/-.91,.13/-.12,-.40625,-.25,.13/-.72,.13/-.92,-1,1,.13/.92,.13/.72,.25,.40625,.13/.12,.13/.91,.13/.71,.13/.51,.13/.31,.13/.11,.13/.9,.13/.7,.26,.13/.3,.13])},{name:"sandbox deep square",expression:1,samples:c([1,2.25,1,-1,-2.25,-1])},{name:"sandbox ring pulse",expression:1,samples:c([1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1])},{name:"sandbox double sine",expression:1,samples:c([1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,1.8,1.7,1.6,1.5,1.4,1.3,1.2,1.1,1,0,-1,-1.1,-1.2,-1.3,-1.4,-1.5,-1.6,-1.7,-1.8,-1.9,-1.8,-1.7,-1.6,-1.5,-1.4,-1.3,-1.2,-1.1,-1])},{name:"sandbox contrabass",expression:.5,samples:c([4.2,6.9,1.337,6.66])},{name:"sandbox double bass",expression:.4,samples:c([0,.1875,.3125,.5625,.5,.75,.875,1,-1,-.6875,-.5,-.625,-.625,-.5,-.375,-.5625,-.4375,-.5625,-.4375,-.4375,-.3125,-.1875,.1875,.375,.5625,-.5625,.5625,.5625,.5625,.4375,.25,0])},{name:"haileybox test1",expression:.5,samples:c([1,.5,-1])},{name:"brucebox pokey 4bit lfsr",expression:.5,samples:c([1,-1,-1,-1,1,1,1,1,-1,1,-1,1,1,-1,-1])},{name:"brucebox pokey 5step bass",expression:.5,samples:c([1,-1,1,-1,1])},{name:"brucebox isolated spiky",expression:.5,samples:c([1,-1,1,-1,1,-1])},{name:"nerdbox unnamed 1",expression:.5,samples:c([.2,4,.7,-.4,-1,.5,-.5/.6])},{name:"nerdbox unnamed 2",expression:.5,samples:c([2,5/55,-9,1,-55,18.5/-26])},{name:"zefbox semi-square",expression:1,samples:c([1,1.5,2,2.5,2.5,2.5,2,1.5,1])},{name:"zefbox deep square",expression:1,samples:c([1,2.25,1,-1,-2.25,-1])},{name:"zefbox squaretal",expression:.7,samples:c([1.5,1,1.5,-1.5,-1,-1.5])},{name:"zefbox saw wide",expression:.65,samples:c([0,-.4,-.8,-1.2,-1.6,-2,0,-.4,-.8,-1.2,-1.6])},{name:"zefbox saw narrow",expression:.65,samples:c([1,.5,1,.5,1,.5,1,2,1,2,1])},{name:"zefbox deep sawtooth",expression:.5,samples:c([0,2,3,4,4.5,5,5.5,6,6.25,6.5,6.75,7,6.75,6.5,6.25,6,5.5,5,4.5,4,3,2,1])},{name:"zefbox sawtal",expression:.3,samples:c([1.5,1,1.25,-.5,1.5,-.5,0,-1.5,1.5,0,.5,-1.5,.5,1.25,-1,-1.5])},{name:"zefbox deep sawtal",expression:.7,samples:c([.75,.25,.5,-.5,.5,-.5,-.25,-.75])},{name:"zefbox pulse",expression:.5,samples:c([1,-2,-2,-1.5,-1.5,-1.25,-1.25,-1,-1])},{name:"zefbox triple pulse",expression:.4,samples:c([1,1,1,1,1,-1,-1,1.5,1,1,1,1,-1,-1,-1,1.5])},{name:"zefbox high pulse",expression:.2,samples:c([1,-2,2,-3,3,-4,5,-4,3,-3,2,-2,1])},{name:"zefbox deep pulse",expression:.2,samples:c([1,2,2,-2,-2,-3,-4,-4,-5,-5,-5,-5,0,-1,-2])},{name:"wackybox guitar string",expression:.6,samples:c([0,63,63,63,63,19,63,63,63,63,63,63,63,63,63,63,11,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,27,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,34,63,63,63,63])},{name:"wackybox intense",expression:.6,samples:c([36,25,33,35,18,51,22,40,27,37,31,33,25,29,41,23,31,31,45,20,37,23,29,26,42,29,33,26,31,27,40,25,40,26,37,24,41,32,0,32,33,29,32,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31])},{name:"wackybox buzz wave",expression:.6,samples:c([0,1,1,2,4,4,4,4,5,5,6,6,6,7,8,8,8,9,9,9,9,9,9,8,8,8,11,15,23,62,61,60,58,56,56,54,53,52,50,49,48,47,47,45,45,45,44,44,43,43,42,42,42,42,42,42,42,42,42,42,42,43,43,53])},{name:"todbox 1/3 pulse",expression:.5,samples:u([1,-1,-1])},{name:"todbox 1/5 pulse",expression:.5,samples:u([1,-1,-1,-1,-1])},{name:"todbox slap bass",expression:.5,samples:c([1,.5,0,.5,1.25,.5,-.25,.1,-.1,.1,1.1,2.1,3,3.5,2.9,3.3,2.7,2.9,2.3,2,1.9,1.8,1,.7,.9,.8,.4,.1,0,.2,.4,.6,.5,.8])},{name:"todbox harsh wave",expression:.45,samples:c([1,-1,-1,-1,.5,.5,.5,.7,.39,1.3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"todbox accordian",expression:.5,samples:c([0,1,1,2,2,1.5,1.5,.8,0,-2,-3.25,-4,-4.5,-5.5,-6,-5.75,-5.5,-5,-5,-5,-6,-6,-6,-5,-4,-3,-2,-1,.75,1,2,3,4,5,6,6.5,7.5,8,7.75,6,5.25,5,5,5,5,5,4.25,3.75,3.25,2.75,1.25,-.75,-2,-.75,1.25,1.25,2,2,2,2,1.5,-1,-2,-1,1.5,2,2.75,2.75,2.75,3,2.75,-1,-2,-2.5,-2,-1,-2.25,-2.75,-2,-3,-1.75,1,2,3.5,4,5.25,6,8,9.75,10,9.5,9,8.5,7.5,6.5,5.25,5,4.5,4,4,4,3.25,2.5,2,1,-.5,-2,-3.5,-4,-4,-4,-3.75,-3,-2,-1])},{name:"todbox beta banana wave",expression:.8,samples:c([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0])},{name:"todbox beta test wave",expression:.5,samples:c([56,0,-52,16,3,3,2,-35,20,147,-53,0,0,5,-6])},{name:"todbox beta real snare",expression:1,samples:c([0,-.01208,-.02997,-.04382,-.06042,-.07529,-.09116,-.10654,-.12189,-.13751,-.15289,-.16849,-.18387,-.19974,-.21484,-.23071,-.24557,-.26144,-.27731,-.29141,-.3035,-.32416,-.34406,-.32947,-.31158,-.33725,-.37579,-.39746,-.40201,-.40906,-.4418,-.47229,-.47379,-.47733,-.45239,-.33954,-.22894,-.22443,-.32138,-.46371,-.57178,-.61081,-.59998,-.61459,-.62189,-.43979,-.19217,-.12643,-.17252,-.20956,-.20981,-.19217,-.22845,-.34332,-.50629,-.64307,-.72922,-.81384,-.87857,-.90149,-.88687,-.86169,-.87781,-.80478,-.52493,-.31308,-.33249,-.39395,-.39017,-.30301,-.19949,-.13071,-.02493,.14307,.34961,.52542,.63223,.68613,.7471,.87305,.98184,.98889,.97052,.99066,.99747,.99344,.99469,.99393,.9957,.99393,.99521,.99469,.9942,.99521,.9942,.99521,.99469,.99469,.99521,.9942,.99545,.99445,.99469,.99493,.9942,.99521,.99393,.99493,.99469,.99445,.9957,.99445,.99521,.99469,.99469,.99521,.9942,.99545,.99445,.99445,.99493,.9942,.99545,.9942,.99493,.99493,.9942,.99545,.99445,.99521,.99469,.99445,.99545,.99368,.99393,.99445,.99268,.97983,.97229,.95944,.88486,.76773,.64481,.53098,.39847,.19318,-.03827,-.20325,-.39319,-.68765,-.88461,-.93448,-.96069,-.97681,-.98715,-.99042,-.99142,-.99091,-.99142,-.99219,-.99091,-.99219,-.99066,-.99142,-.99142,-.99118,-.99191,-.99066,-.99191,-.99142,-.99142,-.99191,-.99091,-.99219,-.99118,-.99142,-.99167,-.99091,-.99219,-.99091,-.99167,-.99142,-.99091,-.99191,-.99091,-.99191,-.99142,-.99118,-.99191,-.99066,-.99191,-.99118,-.99142,-.99191,-.99066,-.99191,-.99091,-.99167,-.99191,-.99118,-.99219,-.99091,-.99191,-.99142,-.99142,-.99243,-.98865,-.98764,-.99219,-.98083,-.92517,-.9277,-.91486,-.59042,-.15189,.02945,.05667,.06195,.00629,-.18008,-.56497,-.8801,-.9277,-.92871,-.97705,-.99167,-.98663,-.99118,-.99042,-.99219,-.99142,-.99118,-.98941,-.99219,-1,-.9758,-.95993,-.99948,-.98236,-.84659,-.7486,-.70679,-.59747,-.48035,-.41687,-.36826,-.29745,-.18185,-.06219,.02164,.07907,.13123,.18033,.1962,.15692,.14053,.20251,.2753,.30905,.29092,.27252,.30402,.32416,.32214,.35239,.3967,.43198,.4942,.58487,.64154,.65967,.6705,.67026,.66522,.6554,.66119,.70627,.75842,.78738,.7894,.78763,.80402,.85944,.94559,.9899,.9816,.98007,.99368,.99393,.98538,.9758,.97101,.93802,.81812,.64633,.46649,.28613,.14685,.08966,.12543,.20325,.24557,.18866,.02795,-.20175,-.44205,-.58713,-.57629,-.41385,-.14255,.18033,.47882,.68311,.72314,.62064,.48309,.43073,.53577,.72794,.9025,.97354,.97,.98083,.99191,.99319,.99493,.99393,.99521,.99393,.99545,.9942,.99493,.99493,.99445,.99545,.9942,.99545,.99243,.98917,.98386,.97781,.95844,.89066,.81561,.78134,.77277,.75995,.73022,.67126,.57178,.47,.38361,.29419,.20703,.14734,.15866,.25162,.35818,.45062,.5675,.69748,.81232,.89697,.95062,.97656,.98615,.99191,.99219,.99243,.99368,.99368,.97028,.95566,.94559,.82617,.59973,.38361,.23901,.15338,.12921,.11206,.04382,-.12946,-.43552,-.72644,-.89847,-.95465,-.95541,-.97229,-.99268,-.99319,-.9884,-.99142,-.99167,-.99091,-.9884,-.98965,-.99368,-.97455,-.9501,-.94684,-.96219,-.98514,-.99243,-.98889,-.98917,-.99142,-.99219,-.99091,-.99191,-.99142,-.99142,-.99191,-.99066,-.99167,-.99091,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99167,-.99091,-.99219,-.99091,-.99191,-.99142,-.99118,-.99191,-.99066,-.99191,-.99091,-.99118,-.99243,-.98941,-.98462,-.96976,-.9632,-.96194,-.87305,-.66196,-.44809,-.29495,-.18085,-.11813,-.11334,-.18564,-.34885,-.58237,-.8045,-.93726,-.97806,-.97354,-.97531,-.9899,-.99368,-.98941,-.99219,-.99091,-.99142,-.99167,-.99091,-.99191,-.99118,-.99219,-.98236,-.97781,-.97656,-.95135,-.87204,-.71335,-.52139,-.34232,-.17783,-.00906,.14886,.3045,.48889,.67404,.8403,.94128,.97681,.98462,.98337,.99142,.99521,.99493,.9942,.99445,.99521,.99393,.99545,.99445,.99521,.99521,.99445,.9957,.99445,.99521,.99469,.99445,.99521,.9942,.99521,.99445,.99445,.99521,.99445,.99545,.99445,.99469,.99493,.99393,.99493,.99445,.99393,.98285,.97781,.97479,.92844,.82114,.66095,.52417,.46826,.46722,.47934,.47379,.47076,.48209,.42014,.25439,.10074,-.00302,-.08966,-.16068,-.21436,-.2204,-.15137,-.00476,.18536,.37631,.52292,.62164,.70425,.74835,.72366,.63928,.52567,.40805,.35666,.42896,.60175,.802,.92743,.96548,.97632,.98337,.99066,.99521,.9942,.99368,.99292,.9884,.98083,.96774,.93323,.8544,.6947,.47202,.20425,-.0889,-.36423,-.60025,-.77481,-.90173,-.96017,-.97028,-.98108,-.9884,-.99219,-.9899,-.99219,-.99142,-.99142,-.99219,-.99091,-.99243,-.99066,-.99142,-.99142,-.99118,-.99191,-.99066,-.99167,-.99142,-.99142,-.99219,-.99091,-.99191,-.99118,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99191,-.99118,-.99219,-.99091,-.99167,-.99142,-.99142,-.99219,-.99091,-.99191,-.99142,-.99118,-.98917,-.99042,-.99445,-.9733,-.9559,-.96219,-.8967,-.72241,-.55112,-.44809,-.39319,-.37833,-.35641,-.2627,-.1423,-.11282,-.13525,-.11536,-.09671,-.11511,-.1806,-.26874,-.33374,-.42215,-.51358,-.44785,-.3045,-.28613,-.30527,-.25037,-.1539,-.08286,-.11157,-.12592,-.00327,.13803,.19141,.1282,.01788,-.03952,-.12592,-.26773,-.34634,-.31384,-.1806,-.0108,.13574,.2612,.36975,.46573,.55087,.63626,.73022,.83072,.92014,.97177,.98587,.98413,.99167,.99445,.99292,.99219,.9874,.98007,.96472,.92239,.82166,.69067,.57959,.54962,.59695,.64255,.64633,.60629,.55942,.5491,.58966,.61887,.56952,.54181,.59518,.63248,.63876,.65463,.73398,.88312,.96927,.97101,.97958,.99344,.9942,.99268,.99493,.99469,.99445,.99521,.99445,.99545,.9942,.99493,.99493,.9942,.99545,.9942,.99493,.9942,.99393,.9942,.9884,.98309,.98309,.96069,.88461,.7937,.72064,.65765,.59998,.53247,.49268,.48615,.44205,.38034,.36447,.38715,.39294,.32645,.19595,.07782,-.05893,-.27832,-.48309,-.62619,-.72995,-.79999,-.84583,-.82166,-.73575,-.67227,-.65491,-.6496,-.66397,-.70175,-.72894,-.74658,-.76724,-.7952,-.82846,-.86523,-.90527,-.94382,-.89948,-.69849,-.47479,-.31662,-.15414,-.00729,.07077,.08237,.04431,-.02292,-.11761,-.24307,-.36926,-.45087,-.4617,-.4025,-.30679,-.17529,0,.14331,.24179,.36774,.49545,.56522,.57907,.56775,.53851,.51132,.48688,.41913,.26044,.00955,-.26297,-.46396,-.62341,-.82214,-.94684,-.96774,-.97531,-.98413,-.99017,-.9899,-.99219,-.99066,-.99142,-.99167,-.99118,-.99219,-.9899,-.99118,-.99368,-.99142,-.97757,-.97403,-.98007,-.9617,-.86826,-.67783,-.52719,-.48788,-.4549,-.43146,-.47681,-.54105,-.57983,-.60904,-.62317,-.59949,-.55566,-.52063,-.52115,-.55112,-.56244,-.58337,-.6554,-.73373,-.77228,-.74759,-.6889,-.64609,-.61887,-.5806,-.50351,-.40729,-.33929,-.3511,-.42944,-.47028,-.42267,-.32718,-.20224,-.0564,.04556,.10529,.1763,.26169,.33197,.32138,.23776,.20956,.23148,.20352,.23325,.39267,.52719,.58438,.62289,.66345,.70023,.66296,.5433,.42618,.33475,.24533,.14105,.03851,.01358,.09143,.22845,.34961,.41711,.4874,.58914,.69519,.78186,.84357,.89822,.95389,.98135,.98615,.99167,.99243,.99445,.9942,.99469,.99493,.99393,.99545,.99445,.99521,.99469,.99445,.99521,.9942,.99469,.98965,.98715,.98563,.96295,.91736,.86624,.82367,.77554,.68411,.53549,.38916,.2612,.11435,-.04053,-.18161,-.23172,-.19394,-.15237,-.1073,-.02997,.08588,.2262,.34305,.44104,.5574,.65765,.71259,.69217,.65363,.69748,.79572,.89368,.95514,.97733,.98413,.98816,.99243,.99445,.99243,.97302,.96674,.97983,.90378,.71005,.51056,.40451,.40982,.41559,.32996,.24356,.18866,.11411,.05365,.01157,-.03247,-.09216,-.16095,-.23248,-.31662,-.39771,-.48663,-.59647,-.71536,-.82013,-.85287,-.82947,-.84937,-.92215,-.97177,-.98663,-.98816,-.98438,-.99091,-.99219,-.99091,-.99191,-.99042,-.99191,-.99091,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99142])},{name:"ultrabox shortened od guitar",expression:.5,samples:c([-.82785,-.67621,-.40268,-.43817,-.45468,-.22531,-.18329,.2475,.71246,.52155,.56082,.48395,.3399,.46957,.27744,.42313,.47104,.18796,.1293,-.13901,-.07431,-.16348,-.74857,-.73206,-.35181,-.26227,-.41882,-.27786,-.19806,-.19867,.18643,.24808,.08847,-.06964,.06912,.20474,-.05304,.29416,.31967,.14243,.27521,-.23932,-.14752,.1236,-.26123,-.26111,.06616,.2652,.0809,.1524,.16254,-.12061,.04562,.00131,.0405,.08182,-.21729,-.17041,-.16312,-.08563,.0639,.05099,.05627,.02728,.00726,-.13028,-.05673,-.14969,-.17645,.35492,.16766,-.00897,.24326,-.00461,-.04456,.01776,-.0495,-.01221,.02039,.07684,.13397,.3985,.35962,.13754,.4231,.27161,-.17609,.03659,.10635,-.21909,-.22046,-.20258,-.40973,-.4028,-.40521,-.66284])}]),p.chipWaves=function(e){const t=new Array(e.length),i={};for(let s=0;s<t.length;s++){t[s]=Object.assign([],e[s]);const n=t[s];n.index=s,i[n.name]=n}for(let e in i)i[e].samples=f(i[e].samples);const s=t;return s.dictionary=i,s}(p.rawChipWaves),p.rawRawChipWaves=p.rawChipWaves,p.firstIndexForSamplesInChipWaveList=p.chipWaves.length,p.chipNoises=w([{name:"retro",expression:.25,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"white",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"clang",expression:.4,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"buzz",expression:.3,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"hollow",expression:1.5,basePitch:96,pitchFilterMult:1,isSoft:!0,samples:null},{name:"shine",expression:1,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"deep",expression:1.5,basePitch:120,pitchFilterMult:1024,isSoft:!0,samples:null},{name:"cutter",expression:.005,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"metallic",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"static",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"1-bit white",expression:.5,basePitch:74.41,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"1-bit metallic",expression:.5,basePitch:86.41,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"crackling",expression:.9,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"pink",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"brownian",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null}]),p.filterFreqStep=1/4,p.filterFreqRange=34,p.filterFreqReferenceSetting=28,p.filterFreqReferenceHz=8e3,p.filterFreqMaxHz=p.filterFreqReferenceHz*Math.pow(2,p.filterFreqStep*(p.filterFreqRange-1-p.filterFreqReferenceSetting)),p.filterFreqMinHz=8,p.filterGainRange=15,p.filterGainCenter=7,p.filterGainStep=.5,p.filterMaxPoints=8,p.filterTypeNames=["low-pass","high-pass","peak"],p.filterMorphCount=10,p.filterSimpleCutRange=11,p.filterSimplePeakRange=8,p.fadeInRange=10,p.fadeOutTicks=[-24,-12,-6,-3,-1,6,12,24,48,72,96],p.fadeOutNeutral=4,p.drumsetFadeOutTicks=48,p.transitions=w([{name:"normal",isSeamless:!1,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!1},{name:"interrupt",isSeamless:!0,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"continue",isSeamless:!0,continues:!0,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide in pattern",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!1}]),p.vibratos=w([{name:"none",amplitude:0,type:0,delayTicks:0},{name:"light",amplitude:.15,type:0,delayTicks:0},{name:"delayed",amplitude:.3,type:0,delayTicks:37},{name:"heavy",amplitude:.45,type:0,delayTicks:0},{name:"shaky",amplitude:.1,type:1,delayTicks:0}]),p.vibratoTypes=w([{name:"normal",periodsSeconds:[.14],period:.14},{name:"shaky",periodsSeconds:[.11,.17798,.33],period:266.97}]),p.arpSpeedScale=[0,.0625,.125,.2,.25,1/3,.4,.5,2/3,.75,.8,.9,1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4,4.15,4.3,4.5,4.8,5,5.5,6,8],p.unisons=w([{name:"none",voices:1,spread:0,offset:0,expression:1.4,sign:1},{name:"shimmer",voices:2,spread:.018,offset:0,expression:.8,sign:1},{name:"hum",voices:2,spread:.045,offset:0,expression:1,sign:1},{name:"honky tonk",voices:2,spread:.09,offset:0,expression:1,sign:1},{name:"dissonant",voices:2,spread:.25,offset:0,expression:.9,sign:1},{name:"fifth",voices:2,spread:3.5,offset:3.5,expression:.9,sign:1},{name:"octave",voices:2,spread:6,offset:6,expression:.8,sign:1},{name:"bowed",voices:2,spread:.02,offset:0,expression:1,sign:-1},{name:"piano",voices:2,spread:.01,offset:0,expression:1,sign:.7},{name:"warbled",voices:2,spread:.25,offset:.05,expression:.9,sign:-.8},{name:"hecking gosh",voices:2,spread:6.25,offset:-6,expression:.8,sign:-.7},{name:"spinner",voices:2,spread:.02,offset:0,expression:1,sign:1},{name:"detune",voices:1,spread:0,offset:.25,expression:1,sign:1},{name:"rising",voices:2,spread:1,offset:.7,expression:.95,sign:1},{name:"vibrate",voices:2,spread:3.5,offset:7,expression:.975,sign:1},{name:"fourths",voices:2,spread:4,offset:4,expression:.95,sign:1},{name:"bass",voices:1,spread:0,offset:-7,expression:1,sign:1},{name:"dirty",voices:2,spread:0,offset:.1,expression:.975,sign:1},{name:"stationary",voices:2,spread:3.5,offset:0,expression:.9,sign:1},{name:"recurve",voices:2,spread:.005,offset:0,expression:1,sign:1},{name:"voiced",voices:2,spread:9.5,offset:0,expression:1,sign:1},{name:"fluctuate",voices:2,spread:12,offset:0,expression:1,sign:1},{name:"thin",voices:1,spread:0,offset:50,expression:1,sign:1},{name:"inject",voices:2,spread:6,offset:.4,expression:1,sign:1},{name:"askewed",voices:2,spread:0,offset:.42,expression:.7,sign:1},{name:"resonance",voices:2,spread:.0025,offset:.1,expression:.8,sign:-1.5},{name:"FART",voices:2,spread:13,offset:-5,expression:1,sign:-3}]),p.effectNames=["reverb","chorus","panning","distortion","bitcrusher","note filter","echo","pitch shift","detune","vibrato","transition type","chord type"],p.effectOrder=[2,10,11,7,8,9,5,3,4,1,6,0],p.noteSizeMax=6,p.volumeRange=50,p.volumeLogScale=.1428,p.panCenter=50,p.panMax=2*p.panCenter,p.panDelaySecondsMax=.001,p.chorusRange=8,p.chorusPeriodSeconds=2,p.chorusDelayRange=.0034,p.chorusDelayOffsets=[[1.51,2.1,3.35],[1.47,2.15,3.25]],p.chorusPhaseOffsets=[[0,2.1,4.2],[3.2,5.3,1]],p.chorusMaxDelay=p.chorusDelayRange*(1+p.chorusDelayOffsets[0].concat(p.chorusDelayOffsets[1]).reduce(((e,t)=>Math.max(e,t)))),p.chords=w([{name:"simultaneous",customInterval:!1,arpeggiates:!1,strumParts:0,singleTone:!1},{name:"strum",customInterval:!1,arpeggiates:!1,strumParts:1,singleTone:!1},{name:"arpeggio",customInterval:!1,arpeggiates:!0,strumParts:0,singleTone:!0},{name:"custom interval",customInterval:!0,arpeggiates:!1,strumParts:0,singleTone:!0}]),p.maxChordSize=9,p.operatorCount=4,p.maxPitchOrOperatorCount=Math.max(p.maxChordSize,p.operatorCount+2),p.algorithms=w([{name:"1←(2 3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3,4],[],[],[]]},{name:"1←(2 3←4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[],[4],[]]},{name:"1←2←(3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3,4],[],[]]},{name:"1←(2 3)←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[4],[4],[]]},{name:"1←2←3←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3],[4],[]]},{name:"1←3 2←4",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[3],[4],[],[]]},{name:"1 2←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3,4],[],[]]},{name:"1 2←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3],[4],[]]},{name:"(1 2)←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3],[3],[4],[]]},{name:"(1 2)←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3,4],[3,4],[],[]]},{name:"1 2 3←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[],[],[4],[]]},{name:"(1 2 3)←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[4],[4],[4],[]]},{name:"1 2 3 4",carrierCount:4,associatedCarrier:[1,2,3,4],modulatedBy:[[],[],[],[]]},{name:"1←(2 3) 2←4",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[2,3],[4],[],[]]},{name:"1←(2 (3 (4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[2,3,4],[3,4],[4],[]]}]),p.algorithms6Op=w([{name:"Custom",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1←2←3←4←5←6",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2],[3],[4],[5],[6],[]]},{name:"1←3 2←4←5←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5],[6],[]]},{name:"1←3←4 2←5←6",carrierCount:2,associatedCarrier:[1,1,1,2,2,2],modulatedBy:[[3],[5],[4],[],[6],[]]},{name:"1←4 2←5 3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[5],[6],[],[],[]]},{name:"1←3 2←(4 5←6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[],[6],[]]},{name:"1←(3 4) 2←5←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[5],[],[],[6],[]]},{name:"1←3 2←(4 5 6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5,6],[],[],[],[]]},{name:"1←3 2←(4 5)←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[6],[6],[]]},{name:"1←3 2←4←(5 6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5,6],[],[]]},{name:"1←(2 3 4 5 6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1←(2 3←5 4←6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[5],[6],[],[]]},{name:"1←(2 3 4←5←6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[],[5],[6],[]]},{name:"1←4←5 (2 3)←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[6],[6],[5],[],[]]},{name:"1←(3 4)←5 2←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[6],[5],[5],[],[]]},{name:"(1 2)←4 3←(5 6)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[4],[5,6],[],[],[]]},{name:"(1 2)←5 (3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[5],[6],[6],[],[]]},{name:"(1 2 3)←(4 5 6)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4,5,6],[4,5,6],[4,5,6],[],[],[]]},{name:"1←5 (2 3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[6],[6],[6],[],[]]},{name:"1 2←5 (3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[6],[6],[],[]]},{name:"1 2 (3 4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[6],[6],[6],[]]},{name:"1 2 3 (4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[6],[6],[]]},{name:"1 2←4 3←(5 6)",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[],[4],[5,6],[],[],[]]},{name:"1←4 2←(5 6) 3",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[4],[5,6],[],[],[],[]]},{name:"1 2 3←5 4←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5],[6],[],[]]},{name:"1 (2 3)←5←6 4",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[5],[],[6],[]]},{name:"1 2 3←5←6 4",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5,6],[],[],[]]},{name:"(1 2 3 4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[6],[6],[6],[6],[6],[]]},{name:"1 2 3 4 5←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[],[6],[]]},{name:"1 2 3 4 5 6",carrierCount:6,associatedCarrier:[1,2,3,4,5,6],modulatedBy:[[],[],[],[],[],[]]},{name:"1←(2 (3 (4 (5 (6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1←(2(3(4(5(6",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1←4(2←5(3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[3,5],[6],[],[],[]]},{name:"1←4(2←5 3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[5],[6],[],[],[]]}]),p.operatorCarrierInterval=[0,.04,-.073,.091,.061,.024],p.operatorAmplitudeMax=15,p.operatorFrequencies=w([{name:"0.12×",mult:.125,hzOffset:0,amplitudeSign:1},{name:"0.25×",mult:.25,hzOffset:0,amplitudeSign:1},{name:"0.5×",mult:.5,hzOffset:0,amplitudeSign:1},{name:"0.75×",mult:.75,hzOffset:0,amplitudeSign:1},{name:"1×",mult:1,hzOffset:0,amplitudeSign:1},{name:"~1×",mult:1,hzOffset:1.5,amplitudeSign:-1},{name:"2×",mult:2,hzOffset:0,amplitudeSign:1},{name:"~2×",mult:2,hzOffset:-1.3,amplitudeSign:-1},{name:"3×",mult:3,hzOffset:0,amplitudeSign:1},{name:"3.5×",mult:3.5,hzOffset:-.05,amplitudeSign:1},{name:"4×",mult:4,hzOffset:0,amplitudeSign:1},{name:"~4×",mult:4,hzOffset:-2.4,amplitudeSign:-1},{name:"5×",mult:5,hzOffset:0,amplitudeSign:1},{name:"6×",mult:6,hzOffset:0,amplitudeSign:1},{name:"7×",mult:7,hzOffset:0,amplitudeSign:1},{name:"8×",mult:8,hzOffset:0,amplitudeSign:1},{name:"9×",mult:9,hzOffset:0,amplitudeSign:1},{name:"10×",mult:10,hzOffset:0,amplitudeSign:1},{name:"11×",mult:11,hzOffset:0,amplitudeSign:1},{name:"12×",mult:12,hzOffset:0,amplitudeSign:1},{name:"13×",mult:13,hzOffset:0,amplitudeSign:1},{name:"14×",mult:14,hzOffset:0,amplitudeSign:1},{name:"15×",mult:15,hzOffset:0,amplitudeSign:1},{name:"16×",mult:16,hzOffset:0,amplitudeSign:1},{name:"17×",mult:17,hzOffset:0,amplitudeSign:1},{name:"18×",mult:18,hzOffset:0,amplitudeSign:1},{name:"19×",mult:19,hzOffset:0,amplitudeSign:1},{name:"20×",mult:20,hzOffset:0,amplitudeSign:1},{name:"~20×",mult:20,hzOffset:-5,amplitudeSign:-1},{name:"25×",mult:25,hzOffset:0,amplitudeSign:1},{name:"50×",mult:50,hzOffset:0,amplitudeSign:1},{name:"75×",mult:75,hzOffset:0,amplitudeSign:1},{name:"100×",mult:100,hzOffset:0,amplitudeSign:1}]),p.envelopes=w([{name:"none",type:0,speed:0},{name:"note size",type:1,speed:0},{name:"pitch",type:2,speed:0},{name:"punch",type:4,speed:0},{name:"flare -1",type:5,speed:128},{name:"flare 1",type:5,speed:32},{name:"flare 2",type:5,speed:8},{name:"flare 3",type:5,speed:2},{name:"twang -1",type:6,speed:128},{name:"twang 1",type:6,speed:32},{name:"twang 2",type:6,speed:8},{name:"twang 3",type:6,speed:2},{name:"swell -1",type:7,speed:128},{name:"swell 1",type:7,speed:32},{name:"swell 2",type:7,speed:8},{name:"swell 3",type:7,speed:2},{name:"tremolo0",type:8,speed:8},{name:"tremolo1",type:8,speed:4},{name:"tremolo2",type:8,speed:2},{name:"tremolo3",type:8,speed:1},{name:"tremolo4",type:9,speed:4},{name:"tremolo5",type:9,speed:2},{name:"tremolo6",type:9,speed:1},{name:"decay -1",type:10,speed:40},{name:"decay 1",type:10,speed:10},{name:"decay 2",type:10,speed:7},{name:"decay 3",type:10,speed:4},{name:"wibble-1",type:11,speed:96},{name:"wibble 1",type:11,speed:24},{name:"wibble 2",type:11,speed:12},{name:"wibble 3",type:11,speed:4},{name:"linear-2",type:12,speed:256},{name:"linear-1",type:12,speed:128},{name:"linear 1",type:12,speed:32},{name:"linear 2",type:12,speed:8},{name:"linear 3",type:12,speed:2},{name:"rise -2",type:13,speed:256},{name:"rise -1",type:13,speed:128},{name:"rise 1",type:13,speed:32},{name:"rise 2",type:13,speed:8},{name:"rise 3",type:13,speed:2},{name:"flute 1",type:11,speed:16},{name:"flute 2",type:11,speed:8},{name:"flute 3",type:11,speed:4},{name:"tripolo1",type:8,speed:9},{name:"tripolo2",type:8,speed:6},{name:"tripolo3",type:8,speed:3},{name:"tripolo4",type:9,speed:9},{name:"tripolo5",type:9,speed:6},{name:"tripolo6",type:9,speed:3},{name:"pentolo1",type:8,speed:10},{name:"pentolo2",type:8,speed:5},{name:"pentolo3",type:8,speed:2.5},{name:"pentolo4",type:9,speed:10},{name:"pentolo5",type:9,speed:5},{name:"pentolo6",type:9,speed:2.5},{name:"flutter 1",type:8,speed:14},{name:"flutter 2",type:9,speed:11},{name:"water-y flutter",type:8,speed:9},{name:"blip 1",type:14,speed:6},{name:"blip 2",type:14,speed:16},{name:"blip 3",type:14,speed:32},{name:"fall 1",type:15,speed:8},{name:"fall 2",type:15,speed:4},{name:"fall 3",type:15,speed:2}]),p.newEnvelopes=w([{name:"none",type:0,speed:0},{name:"note size",type:1,speed:0},{name:"pitch",type:2,speed:0},{name:"random",type:3,speed:4},{name:"punch",type:4,speed:0},{name:"flare",type:5,speed:32},{name:"twang",type:6,speed:32},{name:"swell",type:7,speed:32},{name:"tremolo",type:8,speed:4},{name:"tremolo2",type:9,speed:4},{name:"decay",type:10,speed:10},{name:"wibble",type:11,speed:24},{name:"linear",type:12,speed:32},{name:"rise",type:13,speed:32},{name:"blip",type:14,speed:6},{name:"fall",type:15,speed:2}]),p.feedbacks=w([{name:"1⟲",indices:[[1],[],[],[]]},{name:"2⟲",indices:[[],[2],[],[]]},{name:"3⟲",indices:[[],[],[3],[]]},{name:"4⟲",indices:[[],[],[],[4]]},{name:"1⟲ 2⟲",indices:[[1],[2],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4]]},{name:"1⟲ 2⟲ 3⟲",indices:[[1],[2],[3],[]]},{name:"2⟲ 3⟲ 4⟲",indices:[[],[2],[3],[4]]},{name:"1⟲ 2⟲ 3⟲ 4⟲",indices:[[1],[2],[3],[4]]},{name:"1→2",indices:[[],[1],[],[]]},{name:"1→3",indices:[[],[],[1],[]]},{name:"1→4",indices:[[],[],[],[1]]},{name:"2→3",indices:[[],[],[2],[]]},{name:"2→4",indices:[[],[],[],[2]]},{name:"3→4",indices:[[],[],[],[3]]},{name:"1→3 2→4",indices:[[],[],[1],[2]]},{name:"1→4 2→3",indices:[[],[],[2],[1]]},{name:"1→2→3→4",indices:[[],[1],[2],[3]]},{name:"1↔2 3↔4",indices:[[2],[1],[4],[3]]},{name:"1↔4 2↔3",indices:[[4],[3],[2],[1]]},{name:"2→1→4→3→2",indices:[[2],[3],[4],[1]]},{name:"1→2→3→4→1",indices:[[4],[1],[2],[3]]},{name:"(1 2 3)→4",indices:[[],[],[],[1,2,3]]},{name:"ALL",indices:[[1,2,3,4],[1,2,3,4],[1,2,3,4],[1,2,3,4]]}]),p.feedbacks6Op=w([{name:"Custom",indices:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1⟲",indices:[[1],[],[],[],[],[]]},{name:"2⟲",indices:[[],[2],[],[],[],[]]},{name:"3⟲",indices:[[],[],[3],[],[],[]]},{name:"4⟲",indices:[[],[],[],[4],[],[]]},{name:"5⟲",indices:[[],[],[],[],[5],[]]},{name:"6⟲",indices:[[],[],[],[],[],[6]]},{name:"1⟲ 2⟲",indices:[[1],[2],[],[],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲",indices:[[1],[2],[3],[],[],[]]},{name:"2⟲ 3⟲ 4⟲",indices:[[],[2],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲",indices:[[1],[2],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲ 5⟲",indices:[[1],[2],[3],[4],[5],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲",indices:[[1],[2],[3],[4],[5],[6]]},{name:"1→2",indices:[[],[1],[],[],[],[]]},{name:"1→3",indices:[[],[],[1],[],[],[]]},{name:"1→4",indices:[[],[],[],[1],[],[]]},{name:"1→5",indices:[[],[],[],[],[1],[]]},{name:"1→6",indices:[[],[],[],[],[],[1]]},{name:"2→3",indices:[[],[],[2],[],[],[]]},{name:"2→4",indices:[[],[],[],[2],[],[]]},{name:"3→4",indices:[[],[],[],[3],[],[]]},{name:"4→5",indices:[[],[],[],[],[4],[]]},{name:"1→4 2→5 3→6",indices:[[],[],[],[1],[2],[3]]},{name:"1→5 2→6 3→4",indices:[[],[],[],[3],[1],[2]]},{name:"1→2→3→4→5→6",indices:[[],[1],[2],[3],[4],[5]]},{name:"2→1→6→5→4→3→2",indices:[[2],[3],[4],[5],[6],[1]]},{name:"1→2→3→4→5→6→1",indices:[[6],[1],[2],[3],[4],[5]]},{name:"1↔2 3↔4 5↔6",indices:[[2],[1],[4],[3],[6],[5]]},{name:"1↔4 2↔5 3↔6",indices:[[4],[5],[6],[1],[2],[3]]},{name:"(1,2,3,4,5)→6",indices:[[],[],[],[],[],[1,2,3,4,5]]},{name:"ALL",indices:[[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6]]}]),p.chipNoiseLength=32768,p.spectrumNoiseLength=32768,p.spectrumBasePitch=24,p.spectrumControlPoints=30,p.spectrumControlPointsPerOctave=7,p.spectrumControlPointBits=3,p.spectrumMax=(1<<p.spectrumControlPointBits)-1,p.harmonicsControlPoints=28,p.harmonicsRendered=64,p.harmonicsRenderedForPickedString=256,p.harmonicsControlPointBits=3,p.harmonicsMax=(1<<p.harmonicsControlPointBits)-1,p.harmonicsWavelength=2048,p.additiveControlPoints=28,p.additiveRendered=64,p.additiveControlPointBits=3,p.additiveMax=(1<<p.additiveControlPointBits)-1,p.additiveWavelength=2048,p.pulseWidthRange=50,p.pulseWidthStepPower=.5,p.supersawVoiceCount=7,p.supersawDynamismMax=6,p.supersawSpreadMax=12,p.supersawShapeMax=6,p.pitchChannelCountMin=1,p.pitchChannelCountMax=60,p.noiseChannelCountMin=0,p.noiseChannelCountMax=32,p.modChannelCountMin=0,p.modChannelCountMax=24,p.noiseInterval=6,p.pitchesPerOctave=12,p.drumCount=12,p.pitchOctaves=8,p.modCount=6,p.maxPitch=p.pitchOctaves*p.pitchesPerOctave,p.maximumTonesPerChannel=2*p.maxChordSize,p.justIntonationSemitones=[.5,8/15,9/16,.6,5/8,2/3,32/45,3/4,.8,5/6,8/9,15/16,1,16/15,9/8,1.2,5/4,4/3,45/32,1.5,1.6,5/3,16/9,15/8,2].map((e=>Math.log2(e)*p.pitchesPerOctave)),p.pitchShiftRange=p.justIntonationSemitones.length,p.pitchShiftCenter=p.pitchShiftRange>>1,p.detuneCenter=200,p.detuneMax=400,p.detuneMin=0,p.songDetuneMin=0,p.songDetuneMax=500,p.unisonVoicesMin=1,p.unisonVoicesMax=2,p.unisonSpreadMin=-96,p.unisonSpreadMax=96,p.unisonOffsetMin=-96,p.unisonOffsetMax=96,p.unisonExpressionMin=-2,p.unisonExpressionMax=2,p.unisonSignMin=-2,p.unisonSignMax=2,p.sineWaveLength=256,p.sineWaveMask=p.sineWaveLength-1,p.sineWave=function(){const e=new Float32Array(p.sineWaveLength+1);for(let t=0;t<p.sineWaveLength+1;t++)e[t]=Math.sin(t*Math.PI*2/p.sineWaveLength);return e}(),p.perEnvelopeSpeedIndices=[0,.01,.02,.03,.04,.05,.06,.07,.08,.09,.1,.2,.25,.3,.3333,.4,.5,.6,.6667,.7,.75,.8,.9,1,1.25,1.3333,1.5,1.6667,1.75,2,2.25,2.5,2.75,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,11,12,13,14,15,16,17,18,19,20,24,32,40,64,128,256],p.perEnvelopeSpeedToIndices={0:0,.01:1,.02:2,.03:3,.04:4,.05:5,.06:6,.07:7,.08:8,.09:9,.1:10,.2:11,.25:12,.3:13,.3333:14,.4:15,.5:16,.6:17,.6667:18,.7:19,.75:20,.8:21,.9:22,1:23,1.25:24,1.3333:25,1.5:26,1.6667:27,1.75:28,2:29,2.25:30,2.5:31,2.75:32,3:33,3.5:34,4:35,4.5:36,5:37,5.5:38,6:39,6.5:40,7:41,7.5:42,8:43,8.5:44,9:45,9.5:46,10:47,11:48,12:49,13:50,14:51,15:52,16:53,17:54,18:55,19:56,20:57,24:58,32:59,40:60,64:61,128:62,256:63},p.perEnvelopeBoundMin=0,p.perEnvelopeBoundMax=2,p.pickedStringDispersionCenterFreq=6e3,p.pickedStringDispersionFreqScale=.3,p.pickedStringDispersionFreqMult=4,p.pickedStringShelfHz=4e3,p.distortionRange=8,p.stringSustainRange=15,p.stringDecayRate=.12,p.enableAcousticSustain=!1,p.sustainTypeNames=["bright","acoustic"],p.bitcrusherFreqRange=14,p.bitcrusherOctaveStep=.5,p.bitcrusherQuantizationRange=8,p.maxEnvelopeCount=16,p.defaultAutomationRange=13,p.instrumentAutomationTargets=w([{name:"none",computeIndex:null,displayName:"none",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:null},{name:"noteVolume",computeIndex:0,displayName:"note volume",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:null},{name:"pulseWidth",computeIndex:2,displayName:"pulse width",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[6,8]},{name:"stringSustain",computeIndex:3,displayName:"sustain",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[7]},{name:"unison",computeIndex:4,displayName:"unison",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[0,5,7,9,6,2,3]},{name:"operatorFrequency",computeIndex:5,displayName:"fm# freq",interleave:!0,isFilter:!1,maxCount:p.operatorCount+2,effect:null,compatibleInstruments:[1,11]},{name:"operatorAmplitude",computeIndex:11,displayName:"fm# volume",interleave:!1,isFilter:!1,maxCount:p.operatorCount+2,effect:null,compatibleInstruments:[1,11]},{name:"feedbackAmplitude",computeIndex:17,displayName:"fm feedback",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[1,11]},{name:"pitchShift",computeIndex:18,displayName:"pitch shift",interleave:!1,isFilter:!1,maxCount:1,effect:7,compatibleInstruments:null},{name:"detune",computeIndex:19,displayName:"detune",interleave:!1,isFilter:!1,maxCount:1,effect:8,compatibleInstruments:null},{name:"vibratoDepth",computeIndex:20,displayName:"vibrato depth",interleave:!1,isFilter:!1,maxCount:1,effect:9,compatibleInstruments:null},{name:"noteFilterAllFreqs",computeIndex:1,displayName:"n. filter freqs",interleave:!1,isFilter:!0,maxCount:1,effect:5,compatibleInstruments:null},{name:"noteFilterFreq",computeIndex:21,displayName:"n. filter # freq",interleave:!1,isFilter:!0,maxCount:p.filterMaxPoints,effect:5,compatibleInstruments:null},{name:"decimalOffset",computeIndex:37,displayName:"decimal offset",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[6,8]},{name:"supersawDynamism",computeIndex:38,displayName:"dynamism",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[8]},{name:"supersawSpread",computeIndex:39,displayName:"spread",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[8]},{name:"supersawShape",computeIndex:40,displayName:"saw↔pulse",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[8]},{name:"panning",computeIndex:41,displayName:"panning",interleave:!1,isFilter:!1,maxCount:1,effect:2,compatibleInstruments:null},{name:"distortion",computeIndex:42,displayName:"distortion",interleave:!1,isFilter:!1,maxCount:1,effect:3,compatibleInstruments:null},{name:"bitcrusherQuantization",computeIndex:43,displayName:"bitcrush",interleave:!1,isFilter:!1,maxCount:1,effect:4,compatibleInstruments:null},{name:"bitcrusherFrequency",computeIndex:44,displayName:"freq crush",interleave:!1,isFilter:!1,maxCount:1,effect:4,compatibleInstruments:null},{name:"chorus",computeIndex:45,displayName:"chorus",interleave:!1,isFilter:!1,maxCount:1,effect:1,compatibleInstruments:null},{name:"echoSustain",computeIndex:46,displayName:"echo",interleave:!1,isFilter:!1,maxCount:1,effect:6,compatibleInstruments:null},{name:"reverb",computeIndex:47,displayName:"reverb",interleave:!1,isFilter:!1,maxCount:1,effect:0,compatibleInstruments:null},{name:"arpeggioSpeed",computeIndex:48,displayName:"arpeggio speed",interleave:!1,isFilter:!1,maxCount:1,effect:11,compatibleInstruments:null}]),p.operatorWaves=w([{name:"sine",samples:p.sineWave},{name:"triangle",samples:function(){const e=new Float32Array(p.sineWaveLength+1);for(let t=0;t<p.sineWaveLength+1;t++)e[t]=Math.asin(Math.sin(t*Math.PI*2/p.sineWaveLength))/(Math.PI/2);return e}()},{name:"pulse width",samples:b()},{name:"sawtooth",samples:g()},{name:"ramp",samples:g(!0)},{name:"trapezoid",samples:function(e=2){const t=new Float32Array(p.sineWaveLength+1);for(let i=0;i<p.sineWaveLength+1;i++)t[i]=Math.max(-1,Math.min(1,Math.asin(Math.sin(i*Math.PI*2/p.sineWaveLength))*e));return t}(2)},{name:"rounded",samples:function(){const e=new Float32Array(p.sineWaveLength+1);for(let t=0;t<p.sineWaveLength+1;t++)e[t]=Math.round(Math.sin(t*Math.PI*2/p.sineWaveLength));return e}()}]),p.pwmOperatorWaves=w([{name:"1%",samples:b(.01)},{name:"5%",samples:b(.05)},{name:"12.5%",samples:b(.125)},{name:"25%",samples:b(.25)},{name:"33%",samples:b(1/3)},{name:"50%",samples:b(.5)},{name:"66%",samples:b(2/3)},{name:"75%",samples:b(.75)},{name:"87.5%",samples:b(.875)},{name:"95%",samples:b(.95)},{name:"99%",samples:b(.99)}]),p.barEditorHeight=10,p.modulators=w([{name:"none",pianoName:"None",maxRawVol:6,newNoteVol:6,forSong:!0,convertRealFactor:0,associatedEffect:12,promptName:"No Mod Setting",promptDesc:["No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.","[$LO - $HI]"]},{name:"song volume",pianoName:"Volume",maxRawVol:100,newNoteVol:100,forSong:!0,convertRealFactor:0,associatedEffect:12,promptName:"Song Volume",promptDesc:["This setting affects the overall volume of the song, just like the main volume slider.","At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"tempo",pianoName:"Tempo",maxRawVol:p.tempoMax-p.tempoMin,newNoteVol:Math.ceil((p.tempoMax-p.tempoMin)/2),forSong:!0,convertRealFactor:p.tempoMin,associatedEffect:12,promptName:"Song Tempo",promptDesc:["This setting controls the speed your song plays at, just like the tempo slider.","When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.","Note that you can make a 'swing' effect by rapidly changing between two tempo values.","[OVERWRITING] [$LO - $HI] [BPM]"]},{name:"song reverb",pianoName:"Reverb",maxRawVol:2*p.reverbRange,newNoteVol:p.reverbRange,forSong:!0,convertRealFactor:-p.reverbRange,associatedEffect:12,promptName:"Song Reverb",promptDesc:["This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.","At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"next bar",pianoName:"Next Bar",maxRawVol:1,newNoteVol:1,forSong:!0,convertRealFactor:0,associatedEffect:12,promptName:"Go To Next Bar",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.","This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.","You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.","[$LO - $HI]"]},{name:"note volume",pianoName:"Note Vol.",maxRawVol:p.volumeRange,newNoteVol:Math.ceil(p.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-p.volumeRange/2),associatedEffect:12,promptName:"Note Volume",promptDesc:["This setting affects the volume of your instrument as if its note size had been scaled.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.","This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.","For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"pan",pianoName:"Pan",maxRawVol:p.panMax,newNoteVol:Math.ceil(p.panMax/2),forSong:!1,convertRealFactor:0,associatedEffect:2,promptName:"Instrument Panning",promptDesc:["This setting controls the panning of your instrument, just like the panning slider.","At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.","[OVERWRITING] [$LO - $HI] [L-R]"]},{name:"reverb",pianoName:"Reverb",maxRawVol:p.reverbRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:0,promptName:"Instrument Reverb",promptDesc:["This setting controls the reverb of your insturment, just like the reverb slider.","At $LO, your instrument will have no reverb. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"distortion",pianoName:"Distortion",maxRawVol:p.distortionRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:3,promptName:"Instrument Distortion",promptDesc:["This setting controls the amount of distortion for your instrument, just like the distortion slider.","At $LO, your instrument will have no distortion. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"fm slider 1",pianoName:"FM 1",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 1",promptDesc:["This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 2",pianoName:"FM 2",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 2",promptDesc:["This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 3",pianoName:"FM 3",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 3",promptDesc:["This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 4",pianoName:"FM 4",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 4",promptDesc:["This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm feedback",pianoName:"FM Feedbck",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Feedback",promptDesc:["This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"pulse width",pianoName:"Pulse Width",maxRawVol:p.pulseWidthRange,newNoteVol:p.pulseWidthRange,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Pulse Width",promptDesc:["This setting controls the width of this instrument's pulse wave, just like the pulse width slider.","At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).","Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.","[OVERWRITING] [$LO - $HI] [%Duty]"]},{name:"detune",pianoName:"Detune",maxRawVol:p.detuneMax-p.detuneMin,newNoteVol:p.detuneCenter,forSong:!1,convertRealFactor:-p.detuneCenter,associatedEffect:8,promptName:"Instrument Detune",promptDesc:["This setting controls the detune for this instrument, just like the detune slider.","At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.","[OVERWRITING] [$LO - $HI] [cents]"]},{name:"vibrato depth",pianoName:"Vibrato Depth",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,promptName:"Vibrato Depth",promptDesc:["This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.","At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.","[OVERWRITING] [$LO - $HI] [pitch ÷25]"]},{name:"song detune",pianoName:"Detune",maxRawVol:p.songDetuneMax-p.songDetuneMin,newNoteVol:Math.ceil((p.songDetuneMax-p.songDetuneMin)/2),forSong:!0,convertRealFactor:-250,associatedEffect:12,promptName:"Song Detune",promptDesc:["This setting controls the overall detune of the entire song. There is no associated slider.","At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.","[MULTIPLICATIVE] [$LO - $HI] [cents x4]"]},{name:"vibrato speed",pianoName:"Vibrato Speed",maxRawVol:30,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,promptName:"Vibrato Speed",promptDesc:["This setting controls the speed your instrument will vibrato at, just like the slider.","A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"vibrato delay",pianoName:"Vibrato Delay",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,promptName:"Vibrato Delay",promptDesc:["This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.","A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).","[OVERWRITING] [$LO - $HI] [beats ÷24]"]},{name:"arp speed",pianoName:"Arp Speed",maxRawVol:50,newNoteVol:12,forSong:!1,convertRealFactor:0,associatedEffect:11,promptName:"Arpeggio Speed",promptDesc:["This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.","Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.","[0-4]: x0, x1/16, x⅛, x⅕, x¼,","[5-9]: x⅓, x⅖, x½, x⅔, x¾,","[10-14]: x⅘, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"pan delay",pianoName:"Pan Delay",maxRawVol:20,newNoteVol:10,forSong:!1,convertRealFactor:0,associatedEffect:2,promptName:"Panning Delay",promptDesc:["This setting controls the delay applied to panning for your instrument, just like the pan delay slider.","With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.","[OVERWRITING] [$LO - $HI]"]},{name:"reset arp",pianoName:"Reset Arp",maxRawVol:1,newNoteVol:1,forSong:!1,convertRealFactor:0,associatedEffect:11,promptName:"Reset Arpeggio",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.","This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.","[$LO - $HI]"]},{name:"eq filter",pianoName:"EQFlt",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"EQ Filter",promptDesc:["This setting controls a few separate things for your instrument's EQ filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"note filter",pianoName:"N.Flt",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,promptName:"Note Filter",promptDesc:["This setting controls a few separate things for your instrument's note filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"bit crush",pianoName:"Bitcrush",maxRawVol:p.bitcrusherQuantizationRange-1,newNoteVol:Math.round(p.bitcrusherQuantizationRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,promptName:"Instrument Bit Crush",promptDesc:["This setting controls the bit crush of your instrument, just like the bit crush slider.","At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"freq crush",pianoName:"Freq Crush",maxRawVol:p.bitcrusherFreqRange-1,newNoteVol:Math.round(p.bitcrusherFreqRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,promptName:"Instrument Frequency Crush",promptDesc:["This setting controls the frequency crush of your instrument, just like the freq crush slider.","At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo",pianoName:"Echo",maxRawVol:p.echoSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,promptName:"Instrument Echo Sustain",promptDesc:["This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.","At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo delay",pianoName:"Echo Delay",maxRawVol:p.echoDelayRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Instrument Echo Delay",promptDesc:["This setting controls the echo delay of your instrument, just like the echo delay slider.","At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.","[OVERWRITING] [$LO - $HI] [~beats ÷12]"]},{name:"chorus",pianoName:"Chorus",maxRawVol:p.chorusRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:1,promptName:"Instrument Chorus",promptDesc:["This setting controls the chorus strength of your instrument, just like the chorus slider.","At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"eq filt cut",pianoName:"EQFlt Cut",maxRawVol:p.filterSimpleCutRange-1,newNoteVol:p.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"EQ Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"eq filt peak",pianoName:"EQFlt Peak",maxRawVol:p.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"EQ Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"note filt cut",pianoName:"N.Flt Cut",maxRawVol:p.filterSimpleCutRange-1,newNoteVol:p.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:5,promptName:"Note Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"note filt peak",pianoName:"N.Flt Peak",maxRawVol:p.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,promptName:"Note Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"pitch shift",pianoName:"Pitch Shift",maxRawVol:p.pitchShiftRange-1,newNoteVol:p.pitchShiftCenter,forSong:!1,convertRealFactor:-p.pitchShiftCenter,associatedEffect:7,promptName:"Pitch Shift",promptDesc:["This setting controls the pitch offset of your instrument, just like the pitch shift slider.","At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.","[OVERWRITING] [$LO - $HI] [pitch]"]},{name:"sustain",pianoName:"Sustain",maxRawVol:p.stringSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Picked String Sustain",promptDesc:["This setting controls the sustain of your picked string instrument, just like the sustain slider.","At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"mix volume",pianoName:"Mix Vol.",maxRawVol:p.volumeRange,newNoteVol:Math.ceil(p.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-p.volumeRange/2),associatedEffect:12,promptName:"Mix Volume",promptDesc:["This setting affects the volume of your instrument as if its volume slider had been moved.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.","Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"fm slider 5",pianoName:"FM 5",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 5",promptDesc:["This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 6",pianoName:"FM 6",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 6",promptDesc:["This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"decimal offset",pianoName:"Decimal Offset",maxRawVol:99,newNoteVol:0,forSong:!1,convertRealFactor:0,invertSliderIndicator:!0,associatedEffect:12,promptName:"Decimal Offset",promptDesc:["This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.","[$LO - $HI]"]},{name:"envelope speed",pianoName:"EnvelopeSpd",maxRawVol:50,newNoteVol:12,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Envelope Speed",promptDesc:["This setting controls how fast all of the envelopes for the instrument play.","At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:","[0-4]: x0, x1/16, x⅛, x⅕, x¼,","[5-9]: x⅓, x⅖, x½, x⅔, x¾,","[10-14]: x⅘, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"dynamism",pianoName:"Dynamism",maxRawVol:p.supersawDynamismMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Supersaw Dynamism",promptDesc:["This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.","At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"spread",pianoName:"Spread",maxRawVol:p.supersawSpreadMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Supersaw Spread",promptDesc:["This setting controls the supersaw spread of your instrument, just like the spread slider.","At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"saw shape",pianoName:"Saw Shape",maxRawVol:p.supersawShapeMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Supersaw Shape",promptDesc:["This setting controls the supersaw shape of your instrument, just like the Saw↔Pulse slider.","As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.","[OVERWRITING] [$LO - $HI] [%]"]},{name:"individual envelope speed",pianoName:"IndvEnvSpd",maxRawVol:63,newNoteVol:23,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Individual Envelope Speed",promptDesc:["This setting controls how fast the specified envelope of the instrument will play.","At $LO, your the envelope will be frozen, and at values near there they will change very slowly. At 23, the envelope will work as usual, performing at normal speed. This increases up to $HI, where the envelope will change very quickly. The speeds are given below:","[0-4]: x0, x0.01, x0.02, x0.03, x0.04,","[5-9]: x0.05, x0.06, x0.07, x0.08, x0.09,","[10-14]: x0.1, x0.2, x0.25, x0.3, x0.33,","[15-19]: x0.4, x0.5, x0.6, x0.6667, x0.7,","[20-24]: x0.75, x0.8, x0.9, x1, x1.25,","[25-29]: x1.3333, x1.5, x1.6667, x1.75, x2,","[30-34]: x2.25, x2.5, x2.75, x3, x3.5,","[35-39]: x4, x4.5, x5, x5.5, x6,","[40-44]: x6.5, x7, x7.5, x8, x8.5,","[45-49]: x9, x9.5, x10, x11, x12","[50-54]: x13, x14, x15, x16, x17","[55-59]: x18, x19, x20, x24, x32","[60-63]: x40, x64, x128, x256","[OVERWRITING] [$LO - $HI]"]},{name:"individual envelope lower bound",pianoName:"IndvEnvLow",maxRawVol:20,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Individual Envelope Lower Bound",promptDesc:["This setting controlsthe envelope lower bound","At $LO, your the envelope will output an upper envelope bound to 0, and at $HI your envelope will output an upper envelope bound to 2.","This settings will not work if your lower envelope bound is higher than your upper envelope bound"]},{name:"individual envelope upper bound",pianoName:"IndvEnvUp",maxRawVol:20,newNoteVol:10,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Individual Envelope Upper Bound",promptDesc:["This setting controlsthe envelope lower bound","At $LO, your the envelope will output a 0 to lower envelope bound, and at $HI your envelope will output a 2 to lower envelope bound.","This settings will not work if your lower envelope bound is higher than your upper envelope bound"]},{name:"song eq",pianoName:"Song EQ",maxRawVol:10,newNoteVol:0,forSong:!0,convertRealFactor:0,associatedEffect:12,promptName:"Song EQ Filter",promptDesc:["This setting overwrites every instrument's eq filter. You can do this in a few separate ways, similar to the per instrument eq filter modulator.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]}]),/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);class E{static valueToPreset(e){var t;const i=e>>6,s=63&e;return null===(t=E.presetCategories[i])||void 0===t?void 0:t.presets[s]}static midiProgramToPresetValue(e){for(let t=0;t<E.presetCategories.length;t++){const i=E.presetCategories[t];for(let s=0;s<i.presets.length;s++){const n=i.presets[s];if(n.generalMidi&&n.midiProgram==e)return(t<<6)+s}}return null}static nameToPresetValue(e){for(let t=0;t<E.presetCategories.length;t++){const i=E.presetCategories[t];for(let s=0;s<i.presets.length;s++){if(i.presets[s].name==e)return(t<<6)+s}}return null}static instrumentToPreset(e){var t;return null===(t=E.presetCategories[0].presets.dictionary)||void 0===t?void 0:t[null==i?void 0:i[e]]}}function C(e,t){for(let i=0;i<e.length;i++)e[i]*=t}function R(e){if(!function(e){return!(!e||e&e-1)}(e))throw new Error("FFT array length must be a power of 2.");return Math.round(Math.log(e)/Math.log(2))}function A(e,t){const i=R(t);if(t<4)throw new Error("FFT array length must be at least 4.");for(let s=i-1;s>=2;s--){const i=1<<s,n=i>>1,a=i<<1,o=2*Math.PI/a,r=Math.cos(o),l=Math.sin(o),h=2*r;for(let s=0;s<t;s+=a){const t=s,a=t+n,o=t+i,p=o+n,u=o+i,c=e[t],f=e[o];e[t]=c+f,e[a]*=2,e[o]=c-f,e[p]*=2;let m=r,d=-l,y=1,v=0;for(let i=1;i<n;i++){const s=t+i,n=o-i,a=o+i,r=u-i,l=e[s],p=e[n],c=e[a],f=e[r],b=l-p,g=c+f;e[s]=l+p,e[n]=f-c,e[a]=b*m-g*d,e[r]=g*m+b*d;const S=h*m-y,w=h*d-v;y=m,v=d,m=S,d=w}}}for(let i=0;i<t;i+=4){const t=i+1,s=i+2,n=i+3,a=e[i],o=2*e[t],r=e[s],l=2*e[n],h=a+r,p=a-r;e[i]=h+o,e[t]=h-o,e[s]=p+l,e[n]=p-l}!function(e,t){const i=R(t);if(i>16)throw new Error("FFT array length must not be greater than 2^16.");const s=16-i;for(let i=0;i<t;i++){let t;if(t=(43690&i)>>1|(21845&i)<<1,t=(52428&t)>>2|(13107&t)<<2,t=(61680&t)>>4|(3855&t)<<4,t=(t>>8|(255&t)<<8)>>s,t>i){let s=e[i];e[i]=e[t],e[t]=s}}}(e,t)}E.version="1.2.3",E.versionDisplayName="Slarmoo's Box "+E.version,E.releaseNotesURL="./patch_notes.html",E.isOnMac=/^Mac/i.test(navigator.platform)||/Mac OS X/i.test(navigator.userAgent)||/^(iPhone|iPad|iPod)/i.test(navigator.platform)||/(iPhone|iPad|iPod)/i.test(navigator.userAgent),E.ctrlSymbol=E.isOnMac?"⌘":"Ctrl+",E.ctrlName=E.isOnMac?"command":"control",E.presetCategories=w([{name:"Custom Instruments",presets:w([{name:i[0],customType:0},{name:i[1],customType:1},{name:i[2],customType:2},{name:i[3],customType:3},{name:i[4],customType:4},{name:i[5],customType:5},{name:i[6],customType:6},{name:i[7],customType:7},{name:i[8],customType:8},{name:i[9],customType:9},{name:i[11],customType:11}])},{name:"Retro Presets",presets:w([{name:"square wave",midiProgram:80,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"square",unison:"none",envelopes:[]}},{name:"triangle wave",midiProgram:71,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"triangle",unison:"none",envelopes:[]}},{name:"square lead",midiProgram:80,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"square",unison:"hum",envelopes:[]}},{name:"sawtooth lead 1",midiProgram:81,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"sawtooth",unison:"shimmer",envelopes:[]}},{name:"sawtooth lead 2",midiProgram:81,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1}],effects:["vibrato","aliasing"],vibrato:"light",transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[]}},{name:"chip noise",midiProgram:116,isNoise:!0,settings:{type:"noise",transition:"hard",effects:["aliasing"],chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",wave:"retro"}},{name:"supersaw lead",midiProgram:81,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:2}],effects:["reverb"],reverb:67,fadeInSeconds:0,fadeOutTicks:-6,pulseWidth:50,dynamism:100,spread:58,shape:0,envelopes:[]}},{name:"FM twang",midiProgram:32,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM bass",midiProgram:36,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:11},{frequency:"1×",amplitude:7},{frequency:"1×",amplitude:9},{frequency:"20×",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM flute",midiProgram:73,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM organ",midiProgram:16,settings:{type:"FM",eqFilter:[],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:14},{frequency:"2×",amplitude:14},{frequency:"1×",amplitude:11},{frequency:"2×",amplitude:11}],envelopes:[]}},{name:"FM sine",midiProgram:55,settings:{type:"FM",transition:"seemless",effects:"none",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"NES Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",vibrato:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-23,-23,-23,-23,-22,-22,-22,-22,-21,-21,-21,-21,-20,-20,-20,-20,-19,-19,-19,-19,-18,-18,-18,-18,-17,-17,-17,-17,24,24,24,24,23,23,23,23,22,22,22,22,21,21,21,21,20,20,20,20,19,19,19,19,18,18,18,18,17,17,17,17]}},{name:"Gameboy Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-17,-15,-13,-13,-11,-11,-11,-9,-9,-9,-9,-7,-7,-7,-7,-7,-5,-5,-5,-5,-5,-5,-3,-3,-3,-3,-3,-3,-3,-3,24,20,17,15,13,13,11,11,11,9,9,9,9,7,7,7,7,7,5,5,5,5,5,5,3,3,3,3,3,3,3,3]}},{name:"VRC6 Sawtooth",midiProgram:81,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-16,-13,-10,-8,-6,-5,-4,-4,0,0,0,0,4,4,4,4,4,4,8,8,8,8,8,8,8,8,12,12,12,12,12,12,12,12,16,16,16,16,16,16,16,16,20,20,20,20,20,20,20,20,24,24,24,24,24,24,24,24,24,24,24,24]}},{name:"Atari Square",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-23,-23,-23,-22,-22,-22,-21,-21,-21,-20,-20,-20,-19,-19,-19,-18,-18,-18,-17,-17,-17,-16,-16,-16,-15,-15,-15,-14,-14,-14,-13,-13,-13,24,24,24,23,23,23,22,22,22,21,21,21,20,20,20,19,19,19,18,18,18,17,17,17,16,16,15,15]}},{name:"Atari Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,24,24,24,24,24,-24,-24,-24,-24,24,24,-24,-24,24,24]}},{name:"Sunsoft Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[24,24,15,15,9,9,-4,-4,0,0,-13,-13,-19,-19,-24,-24,-24,-24,-10,-10,0,0,-7,-7,-7,-7,0,0,6,6,-4,-4,3,3,-4,-4,3,3,3,3,9,9,15,15,15,15,6,6,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,3,3,12,12,24,24]}}])},{name:"Keyboard Presets",presets:w([{name:"grand piano 1",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,86,86,71,71,71,0,86,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"bright piano",midiProgram:1,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.7071},{type:"high-pass",cutoffHz:148.65,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:1.4142}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,86,86,71,71,0,71,71,71,71,71,71,14,57,57,57,57,57,57,29,57,57,57,57,57,57,57],unison:"piano",stringSustain:86,envelopes:[]}},{name:"electric grand",midiProgram:2,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"1/8 pulse",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"honky-tonk piano",midiProgram:3,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,71,86,71,43,71,43,43,57,57,57,29,57,57,57,57,57,57,43,57,57,57,43,43,43,43],unison:"honky tonk",stringSustain:71,envelopes:[]}},{name:"electric piano 1",midiProgram:4,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",harmonics:[86,100,100,71,71,57,57,43,43,43,29,29,29,14,14,14,0,0,0,0,0,57,0,0,0,0,0,0],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"electric piano 2",midiProgram:5,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:12},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:9},{frequency:"16×",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"harpsichord",midiProgram:6,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:.3536},{type:"peak",cutoffHz:11313.71,linearGain:2.8284}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,100,86,57,86,86,86,86,57,57,71,71,86,86,71,71,86,86,71,71,71,71,71,71,71,71,71],unison:"none",stringSustain:79,envelopes:[]}},{name:"clavinet",midiProgram:7,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.3536}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"3⟲",feedbackAmplitude:6,operators:[{frequency:"3×",amplitude:15},{frequency:"~1×",amplitude:6},{frequency:"8×",amplitude:4},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"feedbackAmplitude",envelope:"twang 2"}]}},{name:"dulcimer",midiProgram:15,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,100,86,100,86,57,100,100,86,100,86,100,86,100,71,57,71,71,100,86,71,86,86,100,86,86,86],unison:"piano",stringSustain:79,envelopes:[]}},{name:"grand piano 2",midiProgram:0,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,86,86,86,86,71,71,57,0,57,29,43,57,57,57,43,43,0,29,43,43,43,43,43,43,29,0,29],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"grand piano 3",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:1681.79,linearGain:4},{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"peak",cutoffHz:3363.59,linearGain:4},{type:"peak",cutoffHz:2378.41,linearGain:.25}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:125,linearGain:.0884}],reverb:67,fadeInSeconds:0,fadeOutTicks:48,harmonics:[100,100,86,86,86,71,71,71,0,71,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:86,stringSustainType:"acoustic",envelopes:[{target:"noteFilterFreq",envelope:"note size",index:0},{target:"noteFilterFreq",envelope:"twang 1",index:1},{target:"noteFilterFreq",envelope:"twang 1",index:1}]}}])},{name:"Idiophone Presets",presets:w([{name:"celesta",midiProgram:8,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~1×",amplitude:11,envelope:"custom"},{frequency:"8×",amplitude:6,envelope:"custom"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"3×",amplitude:1,envelope:"twang 2"}]}},{name:"glockenspiel",midiProgram:9,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,feedbackEnvelope:"decay 1",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"5×",amplitude:11,envelope:"custom"},{frequency:"8×",amplitude:7,envelope:"custom"},{frequency:"20×",amplitude:2,envelope:"twang 1"}]}},{name:"music box 1",midiProgram:10,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,0,0,100,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,71,0],unison:"none",stringSustain:64,envelopes:[]}},{name:"music box 2",midiProgram:10,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.7071}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,57,57,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0],unison:"none",stringSustain:29,envelopes:[]}},{name:"vibraphone",midiProgram:11,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:3,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"~1×",amplitude:9,envelope:"custom"},{frequency:"9×",amplitude:3,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"}]}},{name:"marimba",midiProgram:12,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"4×",amplitude:6,envelope:"custom"},{frequency:"13×",amplitude:6,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"kalimba",midiProgram:108,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:11,envelope:"custom"},{frequency:"5×",amplitude:3,envelope:"twang 2"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"xylophone",midiProgram:13,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"11×",amplitude:9,envelope:"custom"},{frequency:"20×",amplitude:6,envelope:"twang 1"}]}},{name:"tubular bell",midiProgram:14,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:96,chord:"strum",harmonics:[43,71,0,100,0,100,0,86,0,0,86,0,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],unison:"shimmer",stringSustain:86,envelopes:[]}},{name:"bell synth",midiProgram:14,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~2×",amplitude:10,envelope:"custom"},{frequency:"7×",amplitude:6,envelope:"twang 3"},{frequency:"20×",amplitude:1,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"rain drop",midiProgram:96,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"6×",amplitude:4,envelope:"custom"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"1×",amplitude:6,envelope:"tremolo1"}]}},{name:"crystal",midiProgram:98,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"delayed",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"3×",amplitude:7,envelope:"custom"},{frequency:"6×",amplitude:4,envelope:"custom"},{frequency:"13×",amplitude:4,envelope:"custom"}]}},{name:"tinkle bell",midiProgram:112,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"~2×",amplitude:7,envelope:"custom"},{frequency:"5×",amplitude:7,envelope:"custom"},{frequency:"7×",amplitude:7,envelope:"custom"},{frequency:"16×",amplitude:7,envelope:"custom"}]}},{name:"agogo",midiProgram:113,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→4",feedbackAmplitude:15,feedbackEnvelope:"decay 1",operators:[{frequency:"2×",amplitude:9,envelope:"custom"},{frequency:"5×",amplitude:6,envelope:"custom"},{frequency:"8×",amplitude:9,envelope:"custom"},{frequency:"13×",amplitude:11,envelope:"custom"}]}}])},{name:"Guitar Presets",presets:w([{name:"nylon guitar",midiProgram:24,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"3⟲",feedbackAmplitude:6,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"5×",amplitude:2,envelope:"steady"},{frequency:"7×",amplitude:4,envelope:"steady"}]}},{name:"steel guitar",midiProgram:25,generalMidi:!0,settings:{type:"Picked String",eqFilter:[],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,86,71,71,71,86,86,71,57,43,43,43,57,57,57,57,57,43,43,43,43,43,43,43,43,43,43],unison:"none",stringSustain:71,envelopes:[]}},{name:"jazz guitar",midiProgram:26,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,57,71,71,43,57,71,57,43,29,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"clean guitar",midiProgram:27,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,57,57,57,57,57,43]}},{name:"muted guitar",midiProgram:28,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:4,envelope:"twang 3"},{frequency:"4×",amplitude:4,envelope:"twang 2"},{frequency:"16×",amplitude:4,envelope:"twang 1"}]}}])},{name:"Picked Bass Presets",presets:w([{name:"acoustic bass",midiProgram:32,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,71,71,71,57,57,57,57,43,43,43,43,43,29,29,29,29,29,29,14,14,14,14,14,14,14]}},{name:"fingered bass",midiProgram:33,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,57,71,43,57,29,29,29,29,29,29,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0]}},{name:"picked bass",midiProgram:34,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:5,envelope:"steady"},{frequency:"11×",amplitude:1,envelope:"twang 3"},{frequency:"1×",amplitude:9,envelope:"steady"}]}},{name:"fretless bass",midiProgram:35,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"flare 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,71,57,57,71,71,71,57,57,57,57,57,57,57,43,43,43,43,43,43,43,43,29,29,14]}},{name:"slap bass 1",midiProgram:36,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,100,100,100,86,71,57,29,29,43,43,57,71,57,29,29,43,57,57,57,43,43,43,57,71,71,71,71]}},{name:"slap bass 2",midiProgram:37,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"3⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"3×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:7,envelope:"steady"},{frequency:"13×",amplitude:3,envelope:"steady"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"bass synth 1",midiProgram:38,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"3⟲ 4⟲",feedbackAmplitude:9,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"twang 1"},{frequency:"~1×",amplitude:13,envelope:"twang 2"}]}},{name:"bass synth 2",midiProgram:39,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1e3,filterResonance:57,filterEnvelope:"punch",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1→2",feedbackAmplitude:4,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"1×",amplitude:9,envelope:"steady"},{frequency:"3×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"bass & lead",midiProgram:87,generalMidi:!0,settings:{type:"chip",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:86,filterEnvelope:"twang 2",wave:"sawtooth",interval:"shimmer",vibrato:"none"}},{name:"dubstep yoi yoi",midiProgram:87,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["note filter","bitcrusher"],noteFilter:[{type:"low-pass",cutoffHz:594.6,linearGain:11.3137}],bitcrusherOctave:1.5,bitcrusherQuantization:0,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"arpeggio",wave:"sawtooth",unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"flare 2",index:0}]}}])},{name:"Picked String Presets",presets:w([{name:"pizzicato strings",midiProgram:45,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"3×",amplitude:11,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"~1×",amplitude:10,envelope:"steady"}]}},{name:"harp",midiProgram:46,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"3⟲",feedbackAmplitude:6,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"4×",amplitude:6,envelope:"custom"},{frequency:"~2×",amplitude:3,envelope:"steady"},{frequency:"1×",amplitude:6,envelope:"steady"}]}},{name:"sitar",midiProgram:104,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:8e3,filterResonance:57,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"twang 3"},{frequency:"9×",amplitude:3,envelope:"twang 3"},{frequency:"16×",amplitude:9,envelope:"swell 3"}]}},{name:"banjo",midiProgram:105,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"2⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"steady"},{frequency:"11×",amplitude:3,envelope:"twang 3"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"ukulele",midiProgram:105,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"9×",amplitude:4,envelope:"twang 2"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"shamisen",midiProgram:106,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:9,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"steady"},{frequency:"16×",amplitude:4,envelope:"twang 3"},{frequency:"1×",amplitude:7,envelope:"steady"}]}},{name:"koto",midiProgram:107,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 2",operators:[{frequency:"~1×",amplitude:12,envelope:"custom"},{frequency:"6×",amplitude:10,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"twang 3"},{frequency:"~2×",amplitude:8,envelope:"twang 3"}]}}])},{name:"Distortion Presets",presets:w([{name:"overdrive guitar",midiProgram:29,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:840.9,linearGain:.5}],effects:["note filter","distortion"],noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],distortion:71,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"distortion guitar",midiProgram:30,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"peak",cutoffHz:1e3,linearGain:.25}],effects:["note filter","distortion","reverb"],noteFilter:[{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"low-pass",cutoffHz:2e3,linearGain:1}],distortion:86,reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"charango synth",midiProgram:84,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:1}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2→3→4",feedbackAmplitude:8,operators:[{frequency:"3×",amplitude:13},{frequency:"~1×",amplitude:5},{frequency:"4×",amplitude:6},{frequency:"3×",amplitude:7}],envelopes:[{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"guitar harmonics",midiProgram:31,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3)←4",feedbackType:"1⟲",feedbackAmplitude:2,operators:[{frequency:"4×",amplitude:12},{frequency:"16×",amplitude:5},{frequency:"1×",amplitude:2},{frequency:"~1×",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:3}]}},{name:"PWM overdrive",midiProgram:29,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:17.67767,envelopes:[{target:"pulseWidth",envelope:"punch"}]}},{name:"PWM distortion",midiProgram:30,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:2}],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:50,envelopes:[{target:"pulseWidth",envelope:"swell 1"}]}},{name:"FM overdrive",midiProgram:29,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2",feedbackAmplitude:2,operators:[{frequency:"~1×",amplitude:15},{frequency:"1×",amplitude:12},{frequency:"~2×",amplitude:6},{frequency:"1×",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"twang 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3},{target:"feedbackAmplitude",envelope:"punch"}]}},{name:"FM distortion",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2",feedbackAmplitude:4,operators:[{frequency:"~1×",amplitude:15},{frequency:"1×",amplitude:11},{frequency:"1×",amplitude:9},{frequency:"~2×",amplitude:4}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3}]}}])},{name:"Bellows Presets",presets:w([{name:"drawbar organ 1",midiProgram:16,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,86,0,86,0,0,0,86,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"drawbar organ 2",midiProgram:16,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,29,71,86,71,14,0,100,0,0,0,86,0,0,0,71,0,0,0,57,0,0,0,29,0,0,0,0]}},{name:"percussive organ",midiProgram:17,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"punch",vibrato:"light",algorithm:"1 2 3 4",feedbackType:"1→3 2→4",feedbackAmplitude:7,feedbackEnvelope:"decay 1",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"custom"},{frequency:"3×",amplitude:8,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"custom"}]}},{name:"rock organ",midiProgram:18,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"punch",vibrato:"delayed",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,feedbackEnvelope:"flare 1",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"2×",amplitude:5,envelope:"steady"}]}},{name:"pipe organ",midiProgram:19,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"2×",amplitude:9,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"8×",amplitude:8,envelope:"custom"}]}},{name:"reed organ",midiProgram:20,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[71,86,100,86,71,100,57,71,71,71,43,43,43,71,43,71,57,57,57,57,57,57,57,29,43,29,29,14]}},{name:"accordion",midiProgram:21,generalMidi:!0,settings:{type:"chip",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"swell 1",wave:"double saw",interval:"honky tonk",vibrato:"none"}},{name:"bandoneon",midiProgram:23,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",interval:"hum",vibrato:"none",harmonics:[86,86,86,57,71,86,57,71,71,71,57,43,57,43,71,43,71,57,57,43,43,43,57,43,43,29,29,29]}},{name:"bagpipe",midiProgram:109,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"punch",interval:"hum",vibrato:"none",harmonics:[71,86,86,100,100,86,57,100,86,71,71,71,57,57,57,71,57,71,57,71,43,57,57,43,43,43,43,43]}}])},{name:"String Presets",presets:w([{name:"violin 1",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"delayed",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"1→2",feedbackAmplitude:5,operators:[{frequency:"4×",amplitude:9},{frequency:"3×",amplitude:9},{frequency:"2×",amplitude:7},{frequency:"7×",amplitude:5}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"viola",midiProgram:41,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"2×",amplitude:11,envelope:"custom"},{frequency:"7×",amplitude:7,envelope:"custom"},{frequency:"13×",amplitude:4,envelope:"custom"},{frequency:"1×",amplitude:5,envelope:"steady"}]}},{name:"cello",midiProgram:42,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.1768},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.0884}],reverb:67,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:12,chord:"simultaneous",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"16×",amplitude:5},{frequency:"~1×",amplitude:10},{frequency:"1×",amplitude:9},{frequency:"6×",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3}]}},{name:"contrabass",midiProgram:43,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"16×",amplitude:5,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"steady"},{frequency:"6×",amplitude:3,envelope:"swell 1"}]}},{name:"fiddle",midiProgram:110,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2)←(3 4)",feedbackType:"3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"8×",amplitude:8,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"16×",amplitude:3,envelope:"steady"}]}},{name:"tremolo strings",midiProgram:44,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"tremolo4",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:12,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"~2×",amplitude:8,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"custom"},{frequency:"7×",amplitude:8,envelope:"custom"}]}},{name:"strings",midiProgram:48,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"3×",amplitude:9,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:3,envelope:"swell 1"}]}},{name:"slow strings",midiProgram:49,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:1414,filterResonance:0,filterEnvelope:"swell 2",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:6,feedbackEnvelope:"flare 3",operators:[{frequency:"4×",amplitude:10,envelope:"custom"},{frequency:"3×",amplitude:10,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:4,envelope:"swell 1"}]}},{name:"strings synth 1",midiProgram:50,generalMidi:!0,settings:{type:"chip",transition:"soft fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:1414,filterResonance:43,filterEnvelope:"steady",wave:"sawtooth",interval:"hum",vibrato:"delayed"}},{name:"strings synth 2",midiProgram:51,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:12,feedbackEnvelope:"swell 1",operators:[{frequency:"3×",amplitude:6,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"1×",amplitude:9,envelope:"custom"}]}},{name:"orchestra hit 1",midiProgram:55,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"custom",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:14,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:15,envelope:"twang 3"},{frequency:"2×",amplitude:15,envelope:"flare 3"},{frequency:"4×",amplitude:15,envelope:"flare 2"},{frequency:"8×",amplitude:15,envelope:"flare 1"}]}},{name:"violin 2",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2828,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"light",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"3×",amplitude:13,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:8,envelope:"swell 1"}]}},{name:"orchestra hit 2",midiProgram:55,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"decay 1",vibrato:"delayed",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:14,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"3×",amplitude:12,envelope:"custom"},{frequency:"4×",amplitude:14,envelope:"custom"}]}},{name:"supersaw string",midiProgram:41,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142},{type:"low-pass",cutoffHz:3363.59,linearGain:.1768}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:500,linearGain:.1768}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:6,pulseWidth:35.35534,dynamism:83,spread:8,shape:50,envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0}]}},{name:"supersaw string 2",midiProgram:41,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5},{type:"high-pass",cutoffHz:594.6,linearGain:.25},{type:"peak",cutoffHz:2e3,linearGain:2.8284},{type:"peak",cutoffHz:4756.83,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5},{type:"high-pass",cutoffHz:594.6,linearGain:.25},{type:"peak",cutoffHz:2e3,linearGain:2.8284},{type:"peak",cutoffHz:4756.83,linearGain:2}],effects:["note filter","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],chorus:57,reverb:42,fadeInSeconds:.0575,fadeOutTicks:-6,pulseWidth:50,dynamism:67,spread:58,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"pulseWidth",envelope:"flare 2"}]}}])},{name:"Vocal Presets",presets:w([{name:"choir soprano",midiProgram:94,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25},{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:33,fadeInSeconds:.0413,fadeOutTicks:24,harmonics:[100,100,86,57,29,29,57,71,57,29,14,14,14,29,43,57,43,29,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"choir tenor",midiProgram:52,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"choir bass",midiProgram:52,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:11.3137},{type:"peak",cutoffHz:594.6,linearGain:5.6569},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo soprano",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,86,43,14,14,57,71,57,14,14,14,14,14,43,57,43,14,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"solo tenor",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo bass",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:5.6569},{type:"peak",cutoffHz:594.6,linearGain:8},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:8},{type:"high-pass",cutoffHz:210.22,linearGain:1.4142}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,transition:"normal",fadeInSeconds:.0263,fadeOutTicks:12,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"voice ooh",midiProgram:53,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:57,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[100,57,43,43,14,14,0,0,0,14,29,29,14,0,14,29,29,14,0,0,0,0,0,0,0,0,0,0]}},{name:"voice synth",midiProgram:54,generalMidi:!0,settings:{type:"chip",transition:"medium fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:57,filterEnvelope:"steady",wave:"rounded",interval:"union",vibrato:"light"}},{name:"vox synth lead",midiProgram:85,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",vibrato:"light",algorithm:"(1 2 3)←4",feedbackType:"1→2→3→4",feedbackAmplitude:2,feedbackEnvelope:"punch",operators:[{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"9×",amplitude:5,envelope:"custom"},{frequency:"20×",amplitude:1,envelope:"custom"},{frequency:"~1×",amplitude:4,envelope:"steady"}]}},{name:"tiny robot",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"delayed",reverb:33,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:2,operators:[{frequency:"2×",amplitude:15},{frequency:"1×",amplitude:7},{frequency:"~1×",amplitude:7},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:1},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"yowie",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:86,filterEnvelope:"tremolo5",vibrato:"none",algorithm:"1←2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:12,feedbackEnvelope:"tremolo3",operators:[{frequency:"2×",amplitude:12,envelope:"custom"},{frequency:"16×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"mouse",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"light",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:5,operators:[{frequency:"2×",amplitude:13},{frequency:"5×",amplitude:12},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"gumdrop",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"2×",amplitude:15,envelope:"punch"},{frequency:"4×",amplitude:15,envelope:"punch"},{frequency:"7×",amplitude:15,envelope:"punch"},{frequency:"1×",amplitude:10,envelope:"twang 1"}]}},{name:"echo drop",midiProgram:102,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"~2×",amplitude:11,envelope:"custom"},{frequency:"~1×",amplitude:5,envelope:"steady"},{frequency:"11×",amplitude:2,envelope:"steady"},{frequency:"16×",amplitude:5,envelope:"swell 3"}]}},{name:"dark choir",midiProgram:85,settings:{type:"spectrum",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",spectrum:[43,14,14,14,14,14,14,100,14,14,14,57,14,14,100,14,43,14,43,14,14,43,14,29,14,29,14,14,29,0]}}])},{name:"Brass Presets",presets:w([{name:"trumpet",midiProgram:56,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:5,envelope:"flare 2"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"trombone",midiProgram:57,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"2⟲",feedbackAmplitude:7,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"tuba",midiProgram:58,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"2⟲",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"muted trumpet",midiProgram:59,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284},{type:"peak",cutoffHz:4e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:5,operators:[{frequency:"1×",amplitude:13},{frequency:"1×",amplitude:5},{frequency:"9×",amplitude:5},{frequency:"13×",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"french horn",midiProgram:60,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1},{type:"peak",cutoffHz:2378.41,linearGain:2.8284}],effects:["reverb"],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:12},{frequency:"1×",amplitude:10},{frequency:"~1×",amplitude:8}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"swell 1"}]}},{name:"brass section",midiProgram:61,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"swell 1"},{frequency:"~1×",amplitude:10,envelope:"swell 1"}]}},{name:"brass synth 1",midiProgram:62,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:11,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"flare 1"},{frequency:"~1×",amplitude:8,envelope:"flare 2"}]}},{name:"brass synth 2",midiProgram:63,generalMidi:!0,settings:{type:"FM",transition:"soft",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"flare 1"},{frequency:"~1×",amplitude:7,envelope:"flare 1"}]}},{name:"pulse brass",midiProgram:62,settings:{type:"PWM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",pulseWidth:50,pulseEnvelope:"flare 3",vibrato:"none"}}])},{name:"Reed Presets",presets:w([{name:"soprano sax",midiProgram:64,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"4×",amplitude:4,envelope:"swell 1"},{frequency:"1×",amplitude:7,envelope:"steady"},{frequency:"5×",amplitude:4,envelope:"punch"}]}},{name:"alto sax",midiProgram:65,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:4,feedbackEnvelope:"punch",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"4×",amplitude:6,envelope:"swell 1"},{frequency:"1×",amplitude:12,envelope:"steady"}]}},{name:"tenor sax",midiProgram:66,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"2×",amplitude:12,envelope:"custom"},{frequency:"3×",amplitude:7,envelope:"steady"},{frequency:"1×",amplitude:3,envelope:"steady"},{frequency:"8×",amplitude:3,envelope:"steady"}]}},{name:"baritone sax",midiProgram:67,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"swell 2",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"8×",amplitude:4,envelope:"steady"},{frequency:"4×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:4,envelope:"punch"}]}},{name:"sax synth",midiProgram:64,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1←(2 3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"shehnai",midiProgram:111,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:3,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"oboe",midiProgram:68,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"2⟲",feedbackAmplitude:2,feedbackEnvelope:"tremolo5",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"4×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"6×",amplitude:2,envelope:"steady"}]}},{name:"english horn",midiProgram:69,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"2⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:12,envelope:"custom"},{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"punch"},{frequency:"8×",amplitude:4,envelope:"steady"}]}},{name:"bassoon",midiProgram:70,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:707,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"2×",amplitude:11,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"6×",amplitude:6,envelope:"swell 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"clarinet",midiProgram:71,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}},{name:"harmonica",midiProgram:22,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:29,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:9,feedbackEnvelope:"tremolo5",operators:[{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"steady"},{frequency:"~2×",amplitude:2,envelope:"twang 3"},{frequency:"1×",amplitude:0,envelope:"steady"}]}}])},{name:"Flute Presets",presets:w([{name:"flute 1",midiProgram:73,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"4⟲",feedbackAmplitude:7,feedbackEnvelope:"decay 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:4,envelope:"steady"},{frequency:"1×",amplitude:3,envelope:"steady"},{frequency:"~1×",amplitude:1,envelope:"punch"}]}},{name:"recorder",midiProgram:74,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 2",interval:"union",vibrato:"none",harmonics:[100,43,57,43,57,43,43,43,43,43,43,43,43,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"whistle",midiProgram:78,generalMidi:!0,settings:{type:"harmonics",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"ocarina",midiProgram:79,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,14,57,14,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"piccolo",midiProgram:72,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"4⟲",feedbackAmplitude:15,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"~2×",amplitude:3,envelope:"punch"},{frequency:"~1×",amplitude:5,envelope:"punch"}]}},{name:"shakuhachi",midiProgram:77,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"steady",vibrato:"delayed",algorithm:"1←(2 3←4)",feedbackType:"3→4",feedbackAmplitude:15,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:3,envelope:"punch"},{frequency:"~1×",amplitude:4,envelope:"twang 1"},{frequency:"20×",amplitude:15,envelope:"steady"}]}},{name:"pan flute",midiProgram:75,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,fadeInSeconds:.0125,fadeOutTicks:-3,spectrum:[100,0,0,0,0,0,0,14,0,0,0,71,0,0,14,0,57,0,29,14,29,14,14,29,14,29,14,14,29,14],envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"punch"}]}},{name:"blown bottle",midiProgram:76,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"3×",amplitude:4,envelope:"custom"},{frequency:"6×",amplitude:2,envelope:"custom"},{frequency:"11×",amplitude:2,envelope:"custom"}]}},{name:"calliope",midiProgram:82,generalMidi:!0,settings:{type:"spectrum",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"steady",spectrum:[100,0,0,0,0,0,0,86,0,0,0,71,0,0,57,0,43,0,29,14,14,29,14,14,14,14,14,14,14,14]}},{name:"chiffer",midiProgram:83,generalMidi:!0,settings:{type:"spectrum",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"punch",spectrum:[86,0,0,0,0,0,0,71,0,0,0,71,0,0,57,0,57,0,43,14,14,43,14,29,14,29,29,29,29,14]}},{name:"breath noise",midiProgram:121,generalMidi:!0,settings:{type:"spectrum",eqFilter:[],effects:["chord type","note filter","reverb"],chord:"strum",noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:.3536},{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,spectrum:[71,0,0,0,0,0,0,29,0,0,0,71,0,0,29,0,100,29,14,29,100,29,100,14,14,71,0,29,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"}]}},{name:"flute 2",midiProgram:73,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"seamless",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}}])},{name:"Pad Presets",presets:w([{name:"new age pad",midiProgram:88,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1←(2 3←4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"2×",amplitude:14},{frequency:"~1×",amplitude:4},{frequency:"6×",amplitude:3},{frequency:"13×",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"feedbackAmplitude",envelope:"swell 3"}]}},{name:"warm pad",midiProgram:89,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:7,operators:[{frequency:"1×",amplitude:14},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"},{target:"operatorAmplitude",envelope:"swell 1",index:1}]}},{name:"polysynth pad",midiProgram:90,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"honky tonk",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"space voice pad",midiProgram:91,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:5.6569},{type:"peak",cutoffHz:1414.21,linearGain:.1768}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,operators:[{frequency:"1×",amplitude:10},{frequency:"2×",amplitude:8},{frequency:"3×",amplitude:7},{frequency:"11×",amplitude:2}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:3},{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"bowed glass pad",midiProgram:92,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:10},{frequency:"2×",amplitude:12},{frequency:"3×",amplitude:7},{frequency:"7×",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3}]}},{name:"metallic pad",midiProgram:93,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:13,operators:[{frequency:"1×",amplitude:15},{frequency:"~1×",amplitude:9},{frequency:"1×",amplitude:7},{frequency:"11×",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"swell 2",index:2},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"sweep pad",midiProgram:95,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"atmosphere",midiProgram:99,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["chorus","reverb"],chorus:100,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",algorithm:"1←(2 3 4)",feedbackType:"3⟲ 4⟲",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:14},{frequency:"~1×",amplitude:10},{frequency:"3×",amplitude:7},{frequency:"1×",amplitude:7}],envelopes:[{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"twang 2",index:2},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"brightness",midiProgram:100,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:2}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",harmonics:[100,86,86,86,43,57,43,71,43,43,43,57,43,43,57,71,57,43,29,43,57,57,43,29,29,29,29,14],unison:"octave",stringSustain:86,envelopes:[]}},{name:"goblins",midiProgram:101,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:11.3137}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:10,operators:[{frequency:"1×",amplitude:15},{frequency:"4×",amplitude:5},{frequency:"1×",amplitude:10},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 2"},{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"feedbackAmplitude",envelope:"flare 3"}]}},{name:"sci-fi",midiProgram:103,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:9513.66,linearGain:2.8284}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:8,operators:[{frequency:"~1×",amplitude:13},{frequency:"2×",amplitude:10},{frequency:"5×",amplitude:5},{frequency:"11×",amplitude:8}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"tremolo5",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"flutter pad",midiProgram:90,settings:{type:"FM",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:9,operators:[{frequency:"1×",amplitude:13},{frequency:"5×",amplitude:7},{frequency:"7×",amplitude:5},{frequency:"~1×",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"operatorAmplitude",envelope:"punch",index:3}]}},{name:"feedback pad",midiProgram:89,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2378.41,linearGain:8}],effects:[],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"custom interval",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:8,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"~1×",amplitude:15}],envelopes:[{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"supersaw pad",midiProgram:93,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768}],effects:["reverb"],reverb:100,fadeInSeconds:.0263,fadeOutTicks:24,pulseWidth:50,dynamism:100,spread:58,shape:0,envelopes:[]}}])},{name:"Drum Presets",presets:w([{name:"standard drumset",midiProgram:116,isNoise:!0,settings:{type:"drumset",effects:"reverb",drums:[{filterEnvelope:"twang 1",spectrum:[57,71,71,86,86,86,71,71,71,71,57,57,57,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29,29]},{filterEnvelope:"twang 1",spectrum:[0,0,0,100,71,71,57,86,57,57,57,71,43,43,57,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,100,57,43,43,29,57,43,29,71,43,43,43,43,57,43,43,43,43,43,43,43,43,29,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,0,71,57,43,43,43,57,57,43,29,57,43,43,43,29,43,57,43,43,43,43,43,43,29,43,43]},{filterEnvelope:"decay 2",spectrum:[0,14,29,43,86,71,29,43,43,43,43,29,71,29,71,29,43,43,43,43,57,43,43,57,43,43,43,57,57,57]},{filterEnvelope:"decay 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,57,71,71,71,71,71,71,71,71,57,57,57,57,43,43,43]},{filterEnvelope:"twang 3",spectrum:[43,43,43,71,29,29,43,43,43,29,43,43,43,29,29,43,43,29,29,29,57,14,57,43,43,57,43,43,57,57]},{filterEnvelope:"decay 3",spectrum:[29,43,43,43,43,29,29,43,29,29,43,29,14,29,43,29,43,29,57,29,43,57,43,71,43,71,57,57,71,71]},{filterEnvelope:"twang 3",spectrum:[43,29,29,43,29,29,29,57,29,29,29,57,43,43,29,29,57,43,43,43,71,43,43,71,57,71,71,71,71,71]},{filterEnvelope:"decay 3",spectrum:[57,57,57,43,57,57,43,43,57,43,43,43,71,57,43,57,86,71,57,86,71,57,86,100,71,86,86,86,86,86]},{filterEnvelope:"flare 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,71,71,86,86,100,100,100,100,100,100,100,100,86,57,29,0]},{filterEnvelope:"decay 2",spectrum:[14,14,14,14,29,14,14,29,14,43,14,43,57,86,57,57,100,57,43,43,57,100,57,43,29,14,0,0,0,0]}]}},{name:"steel pan",midiProgram:114,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:.1768}],effects:["note filter","chorus","reverb"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],chorus:67,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"~1×",amplitude:14},{frequency:"7×",amplitude:3},{frequency:"3×",amplitude:5},{frequency:"4×",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay 2"},{target:"operatorAmplitude",envelope:"flare 1",index:1},{target:"operatorAmplitude",envelope:"flare 2",index:2},{target:"operatorAmplitude",envelope:"swell 2",index:3}]}},{name:"steel pan synth",midiProgram:114,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1 2 3←4",feedbackType:"1⟲",feedbackAmplitude:5,operators:[{frequency:"~1×",amplitude:12},{frequency:"2×",amplitude:15},{frequency:"4×",amplitude:14},{frequency:"~1×",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"operatorAmplitude",envelope:"note size",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"flare 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"timpani",midiProgram:47,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"peak",cutoffHz:6727.17,linearGain:5.6569}],effects:["pitch shift","note filter","reverb"],pitchShiftSemitones:15,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[100,0,0,0,86,0,0,71,0,14,43,14,43,43,0,29,43,29,29,29,43,29,43,29,43,43,43,43,43,43],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"}]}},{name:"dark strike",midiProgram:47,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[0,0,14,14,14,29,29,43,43,86,43,43,43,29,86,29,29,29,86,29,14,14,14,14,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"woodblock",midiProgram:115,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",spectrum:[0,14,29,43,43,57,86,86,71,57,57,43,43,57,86,86,43,43,71,57,57,57,57,57,86,86,71,71,71,71]}},{name:"taiko drum",midiProgram:116,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"twang 1",spectrum:[71,100,100,43,43,71,71,43,43,43,43,43,43,57,29,57,43,57,43,43,57,43,43,43,43,43,43,43,43,43]}},{name:"melodic drum",midiProgram:117,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"twang 1",spectrum:[100,71,71,57,57,43,43,71,43,43,43,57,43,43,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29]}},{name:"drum synth",midiProgram:118,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"decay 1",spectrum:[100,86,71,57,43,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29]}},{name:"tom-tom",midiProgram:116,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",spectrum:[100,29,14,0,0,86,14,43,29,86,29,14,29,57,43,43,43,43,57,43,43,43,29,57,43,43,43,43,43,43]}},{name:"metal pipe",midiProgram:117,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 2",spectrum:[29,43,86,43,43,43,43,43,100,29,14,14,100,14,14,0,0,0,0,0,14,29,29,14,0,0,14,29,0,0]}},{name:"synth kick",midiProgram:47,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-6,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"8×",amplitude:15},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 2"}]}}])},{name:"Novelty Presets",presets:w([{name:"guitar fret noise",midiProgram:120,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",spectrum:[0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,29,14,0,0,43,0,43,0,71,43,0,57,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"},{target:"noteVolume",envelope:"twang 2"}]}},{name:"fifth saw lead",midiProgram:86,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142}],chorus:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"fifth swell",midiProgram:86,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:2}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"}]}},{name:"soundtrack",midiProgram:97,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],chorus:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"reverse cymbal",midiProgram:119,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"none",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[29,57,57,29,57,57,29,29,43,29,29,43,29,29,57,57,14,57,14,57,71,71,57,86,57,100,86,86,86,86]}},{name:"seashore",midiProgram:122,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",transition:"soft fade",effects:"reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"swell 3",spectrum:[14,14,29,29,43,43,43,57,57,57,57,57,57,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,57]}},{name:"bird tweet",midiProgram:123,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["chord type","vibrato","reverb"],chord:"strum",vibrato:"heavy",reverb:67,fadeInSeconds:.0575,fadeOutTicks:-6,harmonics:[0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"hum",envelopes:[{target:"noteVolume",envelope:"decay 1"}]}},{name:"telephone ring",midiProgram:124,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"arpeggio",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:12},{frequency:"1×",amplitude:4},{frequency:"20×",amplitude:1},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo4"},{target:"operatorAmplitude",envelope:"tremolo1",index:1}]}},{name:"helicopter",midiProgram:125,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"seamless",chord:"arpeggio",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"tremolo4",spectrum:[14,43,43,57,57,57,71,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,71,71,71,57,57]}},{name:"applause",midiProgram:126,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[14,14,29,29,29,43,43,57,71,71,86,86,86,71,71,57,57,57,71,86,86,86,86,86,71,71,57,57,57,57]}},{name:"gunshot",midiProgram:127,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1414,filterResonance:29,filterEnvelope:"twang 1",spectrum:[14,29,43,43,57,57,57,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,57,57,57,57,43]}},{name:"scoot",midiProgram:92,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:707.11,linearGain:4}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",wave:"double saw",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"}]}},{name:"buzz saw",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:4,operators:[{frequency:"5×",amplitude:13},{frequency:"1×",amplitude:10},{frequency:"~1×",amplitude:6},{frequency:"11×",amplitude:12}],envelopes:[]}},{name:"mosquito",midiProgram:93,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2}],effects:["vibrato"],vibrato:"shaky",transition:"normal",fadeInSeconds:.0575,fadeOutTicks:-6,chord:"simultaneous",pulseWidth:4.41942,envelopes:[{target:"pulseWidth",envelope:"tremolo6"}]}},{name:"breathing",midiProgram:126,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 2",spectrum:[14,14,14,29,29,29,29,29,43,29,29,43,43,43,29,29,71,43,86,86,57,100,86,86,86,86,71,86,71,57]}},{name:"klaxon synth",midiProgram:125,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"noise",effects:"reverb",transition:"slide",chord:"harmony",filterCutoffHz:2e3,filterResonance:86,filterEnvelope:"steady",wave:"buzz"}},{name:"theremin",midiProgram:40,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.7071}],effects:["vibrato","reverb"],vibrato:"heavy",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-6,chord:"simultaneous",harmonics:[100,71,57,43,29,29,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",envelopes:[]}},{name:"sonar ping",midiProgram:121,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",spectrum:[100,43,29,29,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}}])},{name:"UltraBox Presets",presets:w([{name:"nes white",midiProgram:116,generalMidi:!0,isNoise:!0,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,eqSubFilters1:[],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:0,wave:"1-bit white",envelopes:[]}},{name:"nes ping",midiProgram:116,generalMidi:!0,isNoise:!0,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,eqSubFilters1:[],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:0,wave:"1-bit metallic",envelopes:[]}},{name:"distorted pulse vocal",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884}],effects:["panning","transition type","pitch shift","vibrato","note filter","bitcrusher","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:11.3137},{type:"low-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:500,linearGain:11.3137},{type:"high-pass",cutoffHz:62.5,linearGain:1.4142},{type:"peak",cutoffHz:176.78,linearGain:11.3137},{type:"high-pass",cutoffHz:250,linearGain:11.3137}],noteSubFilters0:[{type:"high-pass",cutoffHz:840.9,linearGain:11.3137},{type:"low-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:500,linearGain:11.3137},{type:"high-pass",cutoffHz:62.5,linearGain:1.4142},{type:"peak",cutoffHz:176.78,linearGain:11.3137},{type:"high-pass",cutoffHz:250,linearGain:11.3137}],bitcrusherOctave:6.5,bitcrusherQuantization:71,pan:0,panDelay:10,echoSustain:14,echoDelayBeats:.167,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,wave:"1/8 pulse",unison:"none",envelopes:[]}},{name:"dubsteb bwah",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","chord type"],transition:"interrupt",clicklessTransition:!1,chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:10,operators:[{frequency:"2×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"note size",index:3}]}},{name:"FM cool bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:.7071}],effects:["panning","transition type","note filter","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"13×",amplitude:11,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM funky bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768}],eqFilterType:!0,eqSimpleCut:5,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","reverb"],transition:"normal",clicklessTransition:!1,pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"note size"}]}},{name:"talking bass",generalMidi:!1,settings:{type:"FM",eqFilter:[],effects:["chord type"],chord:"custom interval",fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3)←4",feedbackType:"1⟲",feedbackAmplitude:15,operators:[{frequency:"1×",amplitude:15},{frequency:"2×",amplitude:8},{frequency:"2×",amplitude:5},{frequency:"1×",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"note size",index:2},{target:"operatorAmplitude",envelope:"note size",index:3},{target:"feedbackAmplitude",envelope:"note size"}]}},{name:"synth marimba",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:176.78,linearGain:1},{type:"peak",cutoffHz:4e3,linearGain:.5}],effects:["note filter","echo"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142}],echoSustain:71,echoDelayBeats:.5,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[86,100,29,29,0,0,0,100,0,0,0,86,29,0,14,100,0,0,0,0,0,14,0,0,14,0,0,86],unison:"fifth",stringSustain:7,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"}]}},{name:"italian accordian",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:6e3,linearGain:.5}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:1,eqSubFilters1:[],effects:["panning","chorus","reverb"],pan:0,panDelay:10,chorus:71,reverb:45,fadeInSeconds:.0263,fadeOutTicks:-3,wave:"square",unison:"honky tonk",customChipWave:{0:-24,1:-24,2:-24,3:-24,4:-24,5:-24,6:-24,7:-24,8:-24,9:-24,10:-24,11:-24,12:-24,13:-24,14:-24,15:-24,16:24,17:24,18:24,19:24,20:24,21:24,22:24,23:24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:-24,32:-24,33:-24,34:-24,35:-24,36:-24,37:-24,38:-24,39:-24,40:24,41:24,42:24,43:24,44:24,45:24,46:24,47:24,48:-24,49:-24,50:-24,51:-24,52:-24,53:-24,54:-24,55:-24,56:-24,57:-24,58:-24,59:-24,60:-24,61:-24,62:-24,63:-24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"chip supersaw",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","vibrato","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,chorus:29,reverb:29,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"dissonant",customChipWave:{0:22,1:22,2:16,3:6,4:0,5:-3,6:-8,7:-10,8:-13,9:-16,10:-19,11:-19,12:-20,13:-22,14:-22,15:-24,16:-24,17:-24,18:-24,19:-24,20:-24,21:-24,22:-24,23:-24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:24,32:24,33:16,34:9,35:6,36:4,37:2,38:0,39:-1,40:-3,41:-4,42:-4,43:-6,44:-6,45:-6,46:-6,47:-5,48:-5,49:-4,50:-2,51:-2,52:1,53:4,54:6,55:8,56:10,57:12,58:14,59:16,60:18,61:19,62:22,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"fm supersaw",generalMidi:!1,settings:{type:"FM6op",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],effects:["panning","transition type","pitch shift","note filter","chorus","reverb"],transition:"continue",clicklessTransition:!1,pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],noteSubFilters1:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],pan:0,panDelay:10,chorus:71,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2 3 4 5 6",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:13,waveform:"sawtooth",pulseWidth:5},{frequency:"~1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"2×",amplitude:10,waveform:"sawtooth",pulseWidth:5},{frequency:"3×",amplitude:7,waveform:"sawtooth",pulseWidth:5},{frequency:"4×",amplitude:9,waveform:"sawtooth",pulseWidth:5},{frequency:"8×",amplitude:6,waveform:"sawtooth",pulseWidth:5}],envelopes:[]}},{name:"wind",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:250.03,linearGain:11.3137}],eqFilterType:!0,eqSimpleCut:0,eqSimplePeak:7,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["transition type","reverb"],transition:"continue",clicklessTransition:!1,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1→3 2→4",feedbackAmplitude:15,operators:[{frequency:"16×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"mrow",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[],effects:["panning","chord type","reverb"],chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,pan:0,panDelay:10,reverb:35,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,operators:[{frequency:"4×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:9,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare 1",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"note size",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"vocal why",generalMidi:!1,settings:{type:"harmonics",eqFilter:[],effects:["note filter","panning","reverb"],noteFilter:[{type:"low-pass",cutoffHz:840.9,linearGain:11.3137}],pan:0,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,harmonics:[100,86,29,29,14,14,0,14,14,43,71,100,100,86,71,71,57,57,43,43,43,43,43,0,0,0,0,0],unison:"octave",envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}}])},{name:"Slarmoo's Box Presets",presets:w([{name:"radio fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:1189.21,linearGain:1.4142},{type:"high-pass",cutoffHz:74.33,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1189.21,linearGain:1.4142},{type:"high-pass",cutoffHz:74.33,linearGain:.3536}],effects:["panning","detune","vibrato","bitcrusher","reverb"],detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:6.5,bitcrusherQuantization:43,pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:6,algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:4,operators:[{frequency:"1×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"0.12×",amplitude:7,waveform:"trapezoid",pulseWidth:5},{frequency:"0.5×",amplitude:10,waveform:"triangle",pulseWidth:5},{frequency:"~1×",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"rusty flute",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:13454.34,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:13454.34,linearGain:2.8284}],effects:["panning","transition type","detune","distortion","reverb"],transition:"normal",clicklessTransition:!1,detuneCents:-7,distortion:14,aliases:!1,pan:0,panDelay:10,reverb:100,fadeInSeconds:0,fadeOutTicks:96,algorithm:"1←2←3←4",feedbackType:"3→4",feedbackAmplitude:8,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"anguished underworld",generalMidi:!1,settings:{type:"FM6op",eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],effects:["panning","note filter","distortion","bitcrusher","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2}],noteSubFilters0:[{type:"low-pass",cutoffHz:2828.43,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2}],noteSubFilters1:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],distortion:43,aliases:!1,bitcrusherOctave:4.5,bitcrusherQuantization:43,pan:0,panDelay:10,reverb:0,fadeInSeconds:.075,fadeOutTicks:6,algorithm:"1 2←4 3←(5 6)",feedbackType:"1→5 2→6 3→4",feedbackAmplitude:4,operators:[{frequency:"0.25×",amplitude:14,waveform:"triangle",pulseWidth:5},{frequency:"0.5×",amplitude:13,waveform:"sawtooth",pulseWidth:5},{frequency:"1×",amplitude:12,waveform:"trapezoid",pulseWidth:5},{frequency:"8×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"0.75×",amplitude:3,waveform:"ramp",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"operatorAmplitude",envelope:"decay -1",index:5},{target:"feedbackAmplitude",envelope:"wibble 3"}],isDrum:!1}},{name:"bitcrushed piano",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284}],effects:["panning","transition type","detune","distortion","bitcrusher"],transition:"continue",clicklessTransition:!1,detuneCents:0,distortion:29,aliases:!0,bitcrusherOctave:4,bitcrusherQuantization:43,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,wave:"triangle",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[],isDrum:!1}},{name:"bitcrushed artifacts",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:9656.85,linearGain:.5}],eqFilterType:!0,eqSimpleCut:9,eqSimplePeak:1,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","distortion","bitcrusher","echo"],distortion:71,aliases:!1,bitcrusherOctave:2,bitcrusherQuantization:86,pan:0,panDelay:10,echoSustain:0,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:-6,harmonics:[0,0,0,0,0,0,0,57,0,0,0,0,0,0,100,43,0,0,14,86,0,14,0,0,0,0,0,86],unison:"none",stringSustain:14,envelopes:[],isDrum:!1}},{name:"faint sorrow",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4240.89,linearGain:2}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:4,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","detune","vibrato","echo","reverb"],detuneCents:22,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,echoSustain:100,echoDelayBeats:.667,reverb:87,fadeInSeconds:.075,fadeOutTicks:48,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"bright sorrow fm",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","chord type","note filter","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:2e3,linearGain:2.8284}],noteSubFilters1:[{type:"low-pass",cutoffHz:1414.21,linearGain:1.4142}],pan:0,panDelay:10,echoSustain:71,echoDelayBeats:1.333,reverb:61,fadeInSeconds:0,fadeOutTicks:48,algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,operators:[{frequency:"1×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"5×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"5×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"wet sorrow fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","vibrato","reverb"],vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,reverb:23,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:4,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"decay 3",index:2}],isDrum:!1}},{name:"scream fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2},{type:"high-pass",cutoffHz:250,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.125},{type:"peak",cutoffHz:353.55,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:2},{type:"high-pass",cutoffHz:250,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.125},{type:"peak",cutoffHz:353.55,linearGain:.7071}],effects:["panning","detune","note filter","distortion","reverb"],detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:1681.79,linearGain:.125},{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:11.3137}],noteSubFilters0:[{type:"high-pass",cutoffHz:1681.79,linearGain:.125},{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:11.3137}],distortion:0,aliases:!1,pan:0,panDelay:10,reverb:87,fadeInSeconds:.135,fadeOutTicks:-3,algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:11,operators:[{frequency:"4×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"7×",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"detune",envelope:"swell 1"},{target:"feedbackAmplitude",envelope:"tremolo4"}],isDrum:!1}},{name:"whistle 2",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2110.37,linearGain:1.4142}],eqFilterType:!0,eqSimpleCut:6,eqSimplePeak:3,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","transition type","pitch shift","note filter","distortion","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:11,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:2},{type:"high-pass",cutoffHz:88.39,linearGain:2},{type:"peak",cutoffHz:1681.79,linearGain:4}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:2},{type:"high-pass",cutoffHz:88.39,linearGain:2},{type:"peak",cutoffHz:1681.79,linearGain:4}],distortion:43,aliases:!1,pan:0,panDelay:10,echoSustain:57,echoDelayBeats:1.083,reverb:87,fadeInSeconds:.0575,fadeOutTicks:-1,harmonics:[57,0,0,0,0,0,0,0,0,86,57,0,0,0,0,0,0,0,86,0,0,0,57,29,0,29,100,0],unison:"none",envelopes:[{target:"pitchShift",envelope:"decay 1"}],isDrum:!1}},{name:"anguished radio fm pad",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:62.5,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.0884}],eqSubFilters4:[],effects:["panning","detune","note filter","bitcrusher","chorus","echo","reverb"],detuneCents:-16,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],noteSubFilters2:[{type:"low-pass",cutoffHz:105.11,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],noteSubFilters4:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],bitcrusherOctave:5.5,bitcrusherQuantization:43,pan:0,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:1,reverb:58,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1←3 2←4",feedbackType:"1→3",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"juicy kick",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:11.3137},{type:"low-pass",cutoffHz:5656.85,linearGain:.3536},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.0884},{type:"peak",cutoffHz:594.6,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:62.5,linearGain:11.3137},{type:"low-pass",cutoffHz:5656.85,linearGain:.3536},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.0884},{type:"peak",cutoffHz:594.6,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-6,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"20×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 2"}],isDrum:!1}},{name:"frog wuh",generalMidi:!1,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:6727.17,linearGain:8},{type:"low-pass",cutoffHz:13454.34,linearGain:.125}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:6727.17,linearGain:8},{type:"low-pass",cutoffHz:13454.34,linearGain:.125}],eqSubFilters1:[],effects:["panning","pitch shift","note filter"],pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:1}],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,spectrum:[100,29,14,29,0,14,0,71,0,43,14,71,0,0,71,14,100,0,71,0,43,86,43,0,43,0,0,43,29,29],envelopes:[{target:"pitchShift",envelope:"twang 1"},{target:"noteFilterAllFreqs",envelope:"twang 1"}],isDrum:!1}},{name:"stationary harmonics",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.5}],effects:["panning","transition type","chord type","vibrato"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:12,harmonics:[100,0,57,29,14,57,29,29,14,14,29,43,14,14,14,0,14,29,29,14,0,0,14,0,0,29,14,14],unison:"stationary",envelopes:[],isDrum:!1}},{name:"good vibes supersaw",generalMidi:!1,settings:{type:"supersaw",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:6,discreteEnvelope:!1,pitchEnvelopeStart:37,pitchEnvelopeEnd:96,pitchEnvelopeInverse:!0,eqSubFilters0:[],effects:["panning","transition type","detune","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,detuneCents:30,pan:0,panDelay:10,chorus:14,reverb:23,fadeInSeconds:.0263,fadeOutTicks:12,pulseWidth:26,decimalOffset:0,dynamism:33,spread:33,shape:17,envelopes:[{target:"supersawShape",envelope:"pitch"},{target:"detune",envelope:"tremolo2"}],isDrum:!1}},{name:"ethereal",generalMidi:!1,isNoise:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"peak",cutoffHz:4e3,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:88.39,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:4,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:4e3,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:88.39,linearGain:1.4142}],eqSubFilters1:[],effects:["panning","transition type","chord type","pitch shift","detune","vibrato","note filter","bitcrusher","chorus","reverb"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:36,vibrato:"custom",vibratoDepth:.12,vibratoDelay:36,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:2828.43,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.7071}],noteSubFilters0:[{type:"peak",cutoffHz:2828.43,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.7071}],bitcrusherOctave:4.5,bitcrusherQuantization:43,pan:0,panDelay:10,chorus:71,reverb:100,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[43,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:0,pitchEnvelopeEnd2:96,envelopeInverse2:!1,envelopes:[{target:"noteVolume",envelope:"note size"},{target:"detune",envelope:"tremolo3"},{target:"bitcrusherQuantization",envelope:"note size"}],isDrum:!1}},{name:"walrus wuh",generalMidi:!1,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25},{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:74.33,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,pitchEnvelopeStart:0,pitchEnvelopeEnd:96,pitchEnvelopeInverse:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25},{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:74.33,linearGain:2.8284}],effects:["panning","note filter","bitcrusher","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.125}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.125}],bitcrusherOctave:4,bitcrusherQuantization:71,pan:0,panDelay:10,chorus:86,reverb:32,fadeInSeconds:.0263,fadeOutTicks:48,pulseWidth:50,decimalOffset:0,dynamism:100,spread:50,shape:0,envelopes:[{target:"noteVolume",envelope:"punch"},{target:"bitcrusherQuantization",envelope:"decay 3"}],isDrum:!1}},{name:"saturnic",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4240.89,linearGain:2}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:4,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","vibrato","chorus","echo","reverb"],vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,chorus:100,echoSustain:71,echoDelayBeats:.5,reverb:45,fadeInSeconds:.0125,fadeOutTicks:72,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:15,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"glassy harmonics",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:840.9,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:840.9,linearGain:.5}],effects:["panning","detune","note filter","chorus","reverb"],detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],pan:0,panDelay:10,chorus:14,reverb:29,fadeInSeconds:0,fadeOutTicks:-3,harmonics:[100,0,43,29,0,100,0,0,0,0,0,0,0,0,14,29,14,0,14,0,0,0,0,100,0,0,14,0],unison:"none",envelopes:[],isDrum:!1}},{name:"plucked",generalMidi:!1,settings:{type:"Picked String",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],effects:["panning","transition type","echo","reverb"],transition:"interrupt",clicklessTransition:!1,pan:0,panDelay:10,echoSustain:100,echoDelayBeats:1.333,reverb:26,fadeInSeconds:0,fadeOutTicks:24,harmonics:[100,86,57,0,0,57,57,57,86,57,57,43,43,43,29,29,14,14,29,14,14,14,29,100,57,43,14,14],unison:"none",stringSustain:14,envelopes:[],isDrum:!1}},{name:"spectrum wind",generalMidi:!1,isNoise:!0,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","note filter","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:1.4142}],pan:0,panDelay:10,reverb:87,fadeInSeconds:0,fadeOutTicks:12,spectrum:[29,0,0,0,0,0,0,71,0,0,0,14,57,14,0,57,57,0,0,57,0,71,14,29,100,71,0,100,14,86],unison:"none",envelopes:[],isDrum:!0}},{name:"mushroom drum",generalMidi:!1,isNoise:!0,settings:{type:"spectrum",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","chord type","detune","note filter","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,spectrum:[29,43,86,43,43,43,43,43,100,29,14,14,100,14,14,0,0,0,0,0,14,29,29,14,0,0,14,29,0,0],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"detune",envelope:"punch"}],isDrum:!0}},{name:"hi-hat",generalMidi:!1,isNoise:!0,settings:{type:"noise",volume:0,eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters1:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters2:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters3:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,wave:"white",unison:"none",envelopes:[],isDrum:!0}},{name:"pan flute 2",generalMidi:!1,isNoise:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:2},{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:8e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:2828.43,linearGain:2},{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:8e3,linearGain:.5}],effects:["panning","transition type","note filter","bitcrusher","reverb"],transition:"continue",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],bitcrusherOctave:6,bitcrusherQuantization:57,pan:0,panDelay:10,reverb:16,fadeInSeconds:.0125,fadeOutTicks:-6,spectrum:[100,29,14,14,57,0,0,71,0,86,57,43,57,71,14,29,14,14,14,100,71,14,14,14,14,86,43,14,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:0,pitchEnvelopeEnd2:96,envelopeInverse2:!1,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"},{target:"bitcrusherQuantization",envelope:"note size"},{target:"noteVolume",envelope:"note size"}],isDrum:!1}},{name:"jungle bass",generalMidi:!1,isNoise:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:148.65,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:148.65,linearGain:.0884}],effects:["panning","vibrato","note filter","chorus","reverb"],vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:74.33,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:74.33,linearGain:.0884}],pan:0,panDelay:10,chorus:14,reverb:3,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1←3 2←4",feedbackType:"1↔2 3↔4",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:12,pitchEnvelopeEnd2:28,envelopeInverse2:!1,envelopes:[{target:"operatorFrequency",envelope:"swell 3",index:0},{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"noteFilterFreq",envelope:"pitch",index:0}],isDrum:!1}},{name:"beach tide",generalMidi:!1,isNoise:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:13454.34,linearGain:.1768},{type:"peak",cutoffHz:8e3,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:13454.34,linearGain:.1768},{type:"peak",cutoffHz:8e3,linearGain:.0884}],effects:["panning","transition type","chord type","note filter","chorus","reverb"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"peak",cutoffHz:5656.85,linearGain:.1768}],noteSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"peak",cutoffHz:5656.85,linearGain:.1768}],pan:0,panDelay:10,chorus:14,reverb:32,fadeInSeconds:.0938,fadeOutTicks:72,harmonics:[86,86,71,57,57,43,43,43,29,29,14,14,14,0,0,57,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,envelopes:[{target:"noteFilterAllFreqs",envelope:"pitch"}],isDrum:!1}},{name:"starlight",generalMidi:!1,isNoise:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884}],effects:["panning","transition type","vibrato","bitcrusher","echo","reverb"],transition:"continue",clicklessTransition:!1,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:5.5,bitcrusherQuantization:29,pan:0,panDelay:10,echoSustain:29,echoDelayBeats:1,reverb:13,fadeInSeconds:0,fadeOutTicks:24,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"distant monument",generalMidi:!1,isNoise:!1,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1},{type:"peak",cutoffHz:11313.71,linearGain:.25},{type:"peak",cutoffHz:500,linearGain:.125},{type:"peak",cutoffHz:210.22,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:5.6569}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:1},{type:"peak",cutoffHz:11313.71,linearGain:.25},{type:"peak",cutoffHz:500,linearGain:.125},{type:"peak",cutoffHz:210.22,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:5.6569}],effects:["panning","transition type","chord type","detune","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:24,bitcrusherOctave:2.5,bitcrusherQuantization:14,pan:0,panDelay:10,chorus:86,echoSustain:71,echoDelayBeats:1,reverb:35,fadeInSeconds:.0413,fadeOutTicks:12,wave:"modbox pnryshk a (u5)",unison:"detune",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:11,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,envelopes:[{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"twang 1"}],isDrum:!1}},{name:"mercurial",generalMidi:!1,isNoise:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","chorus"],pan:0,panDelay:10,chorus:43,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:8,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,envelopes:[{target:"noteVolume",envelope:"twang 1"},{target:"operatorAmplitude",envelope:"linear 3",index:2}],isDrum:!1}},{name:"air hiss",generalMidi:!1,isNoise:!0,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],eqFilterType:!0,eqSimpleCut:7,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","note filter","distortion","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"high-pass",cutoffHz:2828.43,linearGain:.3536}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"high-pass",cutoffHz:2828.43,linearGain:.3536}],distortion:71,aliases:!1,pan:0,panDelay:10,reverb:6,fadeInSeconds:0,fadeOutTicks:-24,spectrum:[57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,57,71,86,100,100,100,100,86,71,71,43],unison:"none",envelopes:[],isDrum:!0}}])},{name:"Slarmoo's Box Chip Presets",presets:w([{name:"Slarmoo's Pulse",generalMidi:!1,settings:{type:"PWM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","transition type","chord type","detune"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:8,detuneCents:24,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,pulseWidth:50,decimalOffset:0,unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,envelopes:[{target:"detune",envelope:"pitch"}],isDrum:!1}},{name:"discovery square",generalMidi:!1,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["panning","bitcrusher"],bitcrusherOctave:5.5,bitcrusherQuantization:57,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,wave:"square",unison:"octave",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:2,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[],isDrum:!1}},{name:"VRC6 Sawtooth alt",generalMidi:!1,settings:{type:"custom chip",volume:0,eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:62.5,linearGain:.5}],effects:["panning","transition type","chord type","pitch shift","detune","vibrato","distortion"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,distortion:0,aliases:!1,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:-1,1:-1,2:-1,3:-1,4:-1,5:-1,6:-1,7:-1,8:-1,9:-5,10:-5,11:-5,12:-4,13:-4,14:-4,15:-3,16:-3,17:-3,18:-7,19:-7,20:-6,21:-6,22:-5,23:-5,24:-4,25:-4,26:-4,27:-7,28:-7,29:-6,30:-6,31:-5,32:-5,33:-4,34:-4,35:-4,36:-8,37:-8,38:-7,39:-7,40:-6,41:-6,42:-5,43:-5,44:-4,45:-4,46:21,47:20,48:18,49:17,50:16,51:14,52:13,53:12,54:11,55:7,56:6,57:6,58:5,59:5,60:5,61:4,62:4,63:4},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[],isDrum:!1}}])}]);class G{constructor(){this.i=1,this.o=[void 0],this.l=0,this.h=0,this.p=0}pushFront(e){this.p>=this.i&&this.u(),this.h=this.h-1&this.l,this.o[this.h]=e,this.p++}pushBack(e){this.p>=this.i&&this.u(),this.o[this.h+this.p&this.l]=e,this.p++}popFront(){if(this.p<=0)throw new Error("No elements left to pop.");const e=this.o[this.h];return this.o[this.h]=void 0,this.h=this.h+1&this.l,this.p--,e}popBack(){if(this.p<=0)throw new Error("No elements left to pop.");this.p--;const e=this.h+this.p&this.l,t=this.o[e];return this.o[e]=void 0,t}peakFront(){if(this.p<=0)throw new Error("No elements left to pop.");return this.o[this.h]}peakBack(){if(this.p<=0)throw new Error("No elements left to pop.");return this.o[this.h+this.p-1&this.l]}count(){return this.p}set(e,t){if(e<0||e>=this.p)throw new Error("Invalid index");this.o[this.h+e&this.l]=t}get(e){if(e<0||e>=this.p)throw new Error("Invalid index");return this.o[this.h+e&this.l]}remove(e){if(e<0||e>=this.p)throw new Error("Invalid index");if(e<=this.p>>1){for(;e>0;)this.set(e,this.get(e-1)),e--;this.popFront()}else{for(e++;e<this.p;)this.set(e-1,this.get(e)),e++;this.popBack()}}u(){if(this.i>=1073741824)throw new Error("Capacity too big.");this.i=this.i<<1;const e=this.o,t=new Array(this.i),i=0|this.p,s=0|this.h;for(let n=0;n<i;n++)t[n]=e[s+n&this.l];for(let e=i;e<this.i;e++)t[e]=void 0;this.h=0,this.o=t,this.l=this.i-1}}const N=new class{constructor(){this.activeEvents=[],this.listeners={},this.activeEvents=[],this.listeners={}}raise(e,t,i){if(null!=this.listeners[e]){this.activeEvents.push(e);for(let s=0;s<this.listeners[e].length;s++)this.listeners[e][s](t,i);this.activeEvents.pop()}}listen(e,t){null==this.listeners[e]&&(this.listeners[e]=[]),this.listeners[e].push(t)}unlisten(e,t){if(null==this.listeners[e])return;const i=this.listeners[e].indexOf(t);-1!=i&&this.listeners[e].splice(i,1)}unlistenAll(e){null!=this.listeners[e]&&(this.listeners[e]=[])}};class L{constructor(){this.a=[1],this.b=[1],this.order=0}linearGain0thOrder(e){this.b[0]=e,this.order=0}lowPass1stOrderButterworth(e){const t=1/Math.tan(.5*e),i=1+t;this.a[1]=(1-t)/i,this.b[1]=this.b[0]=1/i,this.order=1}lowPass1stOrderSimplified(e){const t=2*Math.sin(.5*e);this.a[1]=t-1,this.b[0]=t,this.b[1]=0,this.order=1}highPass1stOrderButterworth(e){const t=1/Math.tan(.5*e),i=1+t;this.a[1]=(1-t)/i,this.b[0]=t/i,this.b[1]=-t/i,this.order=1}highShelf1stOrder(e,t){const i=Math.tan(.5*e),s=Math.sqrt(t),n=(i*s-1)/(i*s+1);this.a[1]=n/1,this.b[0]=(1+n+t*(1-n))/2,this.b[1]=(1+n-t*(1-n))/2,this.order=1}allPass1stOrderInvertPhaseAbove(e){const t=(Math.sin(e)-1)/Math.cos(e);this.a[1]=t,this.b[0]=t,this.b[1]=1,this.order=1}allPass1stOrderFractionalDelay(e){const t=(1-e)/(1+e);this.a[1]=t,this.b[0]=t,this.b[1]=1,this.order=1}lowPass2ndOrderButterworth(e,t){const i=Math.sin(e)/(2*t),s=Math.cos(e),n=1+i;this.a[1]=-2*s/n,this.a[2]=(1-i)/n,this.b[2]=this.b[0]=(1-s)/(2*n),this.b[1]=(1-s)/n,this.order=2}lowPass2ndOrderSimplified(e,t){const i=2*Math.sin(e/2),s=1-1/(2*t),n=s+s/(1-i);this.a[1]=2*i+(i-1)*i*n-2,this.a[2]=(i-1)*(i-i*n-1),this.b[0]=i*i,this.b[1]=0,this.b[2]=0,this.order=2}highPass2ndOrderButterworth(e,t){const i=Math.sin(e)/(2*t),s=Math.cos(e),n=1+i;this.a[1]=-2*s/n,this.a[2]=(1-i)/n,this.b[2]=this.b[0]=(1+s)/(2*n),this.b[1]=-(1+s)/n,this.order=2}highShelf2ndOrder(e,t,i){const s=Math.sqrt(t),n=Math.cos(e),a=s+1,o=s-1,r=.5*Math.sin(e)*Math.sqrt(a/s*(1/i-1)+2),l=2*Math.sqrt(s)*r,h=a-o*n+l;this.a[1]=2*(o-a*n)/h,this.a[2]=(a-o*n-l)/h,this.b[0]=s*(a+o*n+l)/h,this.b[1]=-2*s*(o+a*n)/h,this.b[2]=s*(a+o*n-l)/h,this.order=2}peak2ndOrder(e,t,i){const s=Math.sqrt(t),n=i*e/(s>=1?s:1/s),a=Math.tan(.5*n),o=1+a/s;this.b[0]=(1+a*s)/o,this.b[1]=this.a[1]=-2*Math.cos(e)/o,this.b[2]=(1-a*s)/o,this.a[2]=(1-a/s)/o,this.order=2}}class W{constructor(){this.real=0,this.imag=0,this.denom=1}analyze(e,t){this.analyzeComplex(e,Math.cos(t),Math.sin(t))}analyzeComplex(e,t,i){const s=e.a,n=e.b,a=t,o=-i;let r=n[0]+n[1]*a,l=n[1]*o,h=1+s[1]*a,p=s[1]*o,u=a,c=o;for(let t=2;t<=e.order;t++){const e=u*o+c*a;u=u*a-c*o,c=e,r+=n[t]*u,l+=n[t]*c,h+=s[t]*u,p+=s[t]*c}this.denom=h*h+p*p,this.real=r*h+l*p,this.imag=l*h-r*p}magnitude(){return Math.sqrt(this.real*this.real+this.imag*this.imag)/this.denom}angle(){return Math.atan2(this.imag,this.real)}}class V{constructor(){this.a1=0,this.a2=0,this.b0=1,this.b1=0,this.b2=0,this.a1Delta=0,this.a2Delta=0,this.b0Delta=0,this.b1Delta=0,this.b2Delta=0,this.output1=0,this.output2=0,this.useMultiplicativeInputCoefficients=!1}resetOutput(){this.output1=0,this.output2=0}loadCoefficientsWithGradient(e,t,i,s){if(2!=e.order||2!=t.order)throw new Error;this.a1=e.a[1],this.a2=e.a[2],this.b0=e.b[0],this.b1=e.b[1],this.b2=e.b[2],this.a1Delta=(t.a[1]-e.a[1])*i,this.a2Delta=(t.a[2]-e.a[2])*i,s?(this.b0Delta=Math.pow(t.b[0]/e.b[0],i),this.b1Delta=Math.pow(t.b[1]/e.b[1],i),this.b2Delta=Math.pow(t.b[2]/e.b[2],i)):(this.b0Delta=(t.b[0]-e.b[0])*i,this.b1Delta=(t.b[1]-e.b[1])*i,this.b2Delta=(t.b[2]-e.b[2])*i),this.useMultiplicativeInputCoefficients=s}}function B(e){return 2*Math.atan(.5*e)}const $=2654435761,j=2246822519,U=3266489917,Q=668265263,_=374761393;let K;const J=1e-24;function Y(e,t,i){return i<=(t-=1)?i>=e?i:e:t}function X(e,t,i){if(e<=i&&i<=t)return i;throw new Error(`Value ${i} not in range [${e}, ${t}]`)}function Z(e,t){let i=parseFloat(e);return Number.isNaN(i)&&(i=t),i}function ee(e,t){let i=parseInt(e);return Number.isNaN(i)&&(i=t),i}function te(e,t){e.push(ae[t>>>30&3]),e.push(ae[t>>>24&63]),e.push(ae[t>>>18&63]),e.push(ae[t>>>12&63]),e.push(ae[t>>>6&63]),e.push(ae[t>>>0&63])}function ie(e,t){let i=0;return i|=oe[e.charCodeAt(t++)]<<30,i|=oe[e.charCodeAt(t++)]<<24,i|=oe[e.charCodeAt(t++)]<<18,i|=oe[e.charCodeAt(t++)]<<12,i|=oe[e.charCodeAt(t++)]<<6,i|=oe[e.charCodeAt(t++)]<<0,i}function se(e,t,i,s,n,a){e.push(ae[t]),e.push(ae[Number(i>0)]);let o=Math.round(1e3*Math.abs(i)),r=Math.floor(o/63);e.push(ae[o%63],ae[r%63],ae[Math.floor(r/63)]),e.push(ae[Number(s>0)]);let l=Math.round(1e3*Math.abs(s)),h=Math.floor(l/63);e.push(ae[l%63],ae[h%63],ae[Math.floor(h/63)]),e.push(ae[Number(n>0)]);let p=Math.round(1e3*Math.abs(n));e.push(ae[p%63],ae[Math.floor(p/63)]),e.push(ae[Number(a>0)]);let u=Math.round(1e3*Math.abs(a));e.push(ae[u%63],ae[Math.floor(u/63)])}function ne(e){let t=Y(0,p.keys.length,e),i=0;return 12===e?(t=0,i=1):13===e?(t=6,i=-1):14===e?(t=0,i=-1):15===e&&(t=5,i=-1),[t,i]}const ae=[48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,45,95],oe=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,0,0,0,63,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,0,0,0,0];class re{constructor(e,t,i){this.m=[],this.v=0;for(let s=t;s<i;s++){const t=oe[e.charCodeAt(s)];this.m.push(t>>5&1),this.m.push(t>>4&1),this.m.push(t>>3&1),this.m.push(t>>2&1),this.m.push(t>>1&1),this.m.push(1&t)}}read(e){let t=0;for(;e>0;)t<<=1,t+=this.m[this.v++],e--;return t}readLongTail(e,t){let i=e,s=t;for(;this.m[this.v++];)i+=1<<s,s++;for(;s>0;)s--,this.m[this.v++]&&(i+=1<<s);return i}readPartDuration(){return this.readLongTail(1,3)}readLegacyPartDuration(){return this.readLongTail(1,2)}readPinCount(){return this.readLongTail(1,0)}readPitchInterval(){return this.read(1)?-this.readLongTail(1,3):this.readLongTail(1,3)}}class le{constructor(){this.g=0,this.m=[]}clear(){this.g=0}write(e,t){for(e--;e>=0;)this.m[this.g++]=t>>>e&1,e--}writeLongTail(e,t,i){if(i<e)throw new Error("value out of bounds");i-=e;let s=t;for(;i>=1<<s;)this.m[this.g++]=1,i-=1<<s,s++;for(this.m[this.g++]=0;s>0;)s--,this.m[this.g++]=i>>>s&1}writePartDuration(e){this.writeLongTail(1,3,e)}writePinCount(e){this.writeLongTail(1,0,e)}writePitchInterval(e){e<0?(this.write(1,1),this.writeLongTail(1,3,-e)):(this.write(1,0),this.writeLongTail(1,3,e))}concat(e){for(let t=0;t<e.g;t++)this.m[this.g++]=e.m[t]}encodeBase64(e){for(let t=0;t<this.g;t+=6){const i=this.m[t]<<5|this.m[t+1]<<4|this.m[t+2]<<3|this.m[t+3]<<2|this.m[t+4]<<1|this.m[t+5];e.push(ae[i])}return e}lengthBase64(){return Math.ceil(this.g/6)}}function he(e,t,i){return{interval:e,time:t,size:i}}class pe{constructor(e,t,i,s,n=!1){this.pitches=[e],this.pins=[he(0,0,s),he(0,i-t,n?0:s)],this.start=t,this.end=i,this.continuesLastPattern=!1}pickMainInterval(){let e=0,t=0;for(let i=1;i<this.pins.length;i++){const s=this.pins[i-1],n=this.pins[i];if(s.interval==n.interval){const i=n.time-s.time;e<i&&(e=i,t=s.interval)}}if(0==e){let e=0;for(let i=0;i<this.pins.length;i++){const s=this.pins[i];e<s.size&&(e=s.size,t=s.interval)}}return t}clone(){const e=new pe(-1,this.start,this.end,3);e.pitches=this.pitches.concat(),e.pins=[];for(const t of this.pins)e.pins.push(he(t.interval,t.time,t.size));return e.continuesLastPattern=this.continuesLastPattern,e}getEndPinIndex(e){let t;for(t=1;t<this.pins.length-1&&!(this.pins[t].time+this.start>e);t++);return t}}class ue{constructor(){this.notes=[],this.instruments=[0]}cloneNotes(){const e=[];for(const t of this.notes)e.push(t.clone());return e}reset(){this.notes.length=0,this.instruments[0]=0,this.instruments.length=1}toJsonObject(e,t,i){const s=[];for(const n of this.notes){let a=t.instruments[this.instruments[0]],o=Math.max(0,p.modCount-n.pitches[0]-1),r=e.getVolumeCapForSetting(i,a.modulators[o],a.modFilterTypes[o]);const l=[];for(const t of n.pins){let s=i?Math.round(t.size):Math.round(100*t.size/r);l.push({tick:(t.time+n.start)*p.rhythms[e.rhythm].stepsPerBeat/p.partsPerBeat,pitchBend:t.interval,volume:s,forMod:i})}const h={pitches:n.pitches,points:l};0==n.start&&(h.continuesLastPattern=n.continuesLastPattern),s.push(h)}const n={notes:s};return e.patternInstruments&&(n.instruments=this.instruments.map((e=>e+1))),n}fromJsonObject(e,t,i,s,n,a,o="auto"){const r=o.toLowerCase();if(t.patternInstruments)if(Array.isArray(e.instruments)){const s=e.instruments,n=Y(p.instrumentCountMin,t.getMaxInstrumentsPerPatternForChannel(i)+1,s.length);for(let e=0;e<n;e++)this.instruments[e]=Y(0,i.instruments.length,(0|s[e])-1);this.instruments.length=n}else this.instruments[0]=Y(0,i.instruments.length,(0|e.instrument)-1),this.instruments.length=1;if(e.notes&&e.notes.length>0){const o=Math.min(t.beatsPerBar*p.partsPerBeat*(a?p.modCount:1),e.notes.length>>>0);for(let l=0;l<e.notes.length&&!(l>=o);l++){const o=e.notes[l];if(!(o&&o.pitches&&o.pitches.length>=1&&o.points&&o.points.length>=2))continue;const h=new pe(0,0,0,0);h.pitches=[],h.pins=[];for(let e=0;e<o.pitches.length;e++){const t=0|o.pitches[e];if(-1==h.pitches.indexOf(t)&&(h.pitches.push(t),h.pitches.length>=p.maxChordSize))break}if(h.pitches.length<1)continue;let u=0,c=i.instruments[this.instruments[0]],f=Math.max(0,p.modCount-h.pitches[0]-1);for(let e=0;e<o.points.length;e++){const i=o.points[e];if(null==i||null==i.tick)continue;const n=null==i.pitchBend?0:0|i.pitchBend,r=Math.round(+i.tick*p.partsPerBeat/s);let l,m=t.getVolumeCapForSetting(a,c.modulators[f],c.modFilterTypes[f]);l=null==i.volume?m:null==i.forMod?Math.max(0,Math.min(m,Math.round((0|i.volume)*m/100))):(0|i.forMod)>0?Math.round(0|i.volume):Math.max(0,Math.min(m,Math.round((0|i.volume)*m/100))),r>t.beatsPerBar*p.partsPerBeat||(0==h.pins.length&&(h.start=r,u=n),h.pins.push(he(n-u,r-h.start,l)))}if(h.pins.length<2)continue;h.end=h.pins[h.pins.length-1].time+h.start;const m=n?p.drumCount-1:p.maxPitch;let d=m,y=0;for(let e=0;e<h.pitches.length;e++)h.pitches[e]+=u,(h.pitches[e]<0||h.pitches[e]>m)&&(h.pitches.splice(e,1),e--),h.pitches[e]<d&&(d=h.pitches[e]),h.pitches[e]>y&&(y=h.pitches[e]);if(!(h.pitches.length<1)){for(let e=0;e<h.pins.length;e++){const t=h.pins[e];t.interval+d<0&&(t.interval=-d),t.interval+y>m&&(t.interval=m-y),e>=2&&t.interval==h.pins[e-1].interval&&t.interval==h.pins[e-2].interval&&t.size==h.pins[e-1].size&&t.size==h.pins[e-2].size&&(h.pins.splice(e-1,1),e--)}if(0==h.start?h.continuesLastPattern=!0===o.continuesLastPattern:h.continuesLastPattern=!1,"ultrabox"!=r&&"slarmoosbox"!=r&&c.modulators[f]==p.modulators.dictionary.tempo.index)for(const e of h.pins){const t=30,i=1,s=e.size+t;e.size=s-i}this.notes.push(h)}}}}}class ce{constructor(e){this.frequency=4,this.amplitude=0,this.waveform=0,this.pulseWidth=.5,this.reset(e)}reset(e){this.frequency=4,this.amplitude=e<=1?p.operatorAmplitudeMax:0,this.waveform=0,this.pulseWidth=5}copy(e){this.frequency=e.frequency,this.amplitude=e.amplitude,this.waveform=e.waveform,this.pulseWidth=e.pulseWidth}}class fe{constructor(){this.name="",this.carrierCount=0,this.modulatedBy=[[],[],[],[],[],[]],this.associatedCarrier=[],this.fromPreset(1)}set(e,t){this.reset(),this.carrierCount=e;for(let i=0;i<this.modulatedBy.length;i++){this.modulatedBy[i]=t[i],i<e&&(this.associatedCarrier[i]=i+1),this.name+=i+1;for(let s=0;s<t[i].length;s++)this.name+=t[i][s],t[i][s]>e-1&&(this.associatedCarrier[t[i][s]-1]=i+1),this.name+=",";this.name+=i<e?"|":"."}}reset(){this.name="",this.carrierCount=1,this.modulatedBy=[[2,3,4,5,6],[],[],[],[],[]],this.associatedCarrier=[1,1,1,1,1,1]}copy(e){this.name=e.name,this.carrierCount=e.carrierCount,this.modulatedBy=e.modulatedBy,this.associatedCarrier=e.associatedCarrier}fromPreset(e){this.reset();let t=p.algorithms6Op[e];this.name=t.name,this.carrierCount=t.carrierCount;for(var i=0;i<t.modulatedBy.length;i++)this.modulatedBy[i]=Array.from(t.modulatedBy[i]),this.associatedCarrier[i]=t.associatedCarrier[i]}}class me{constructor(){this.name="",this.indices=[[],[],[],[],[],[]],this.fromPreset(1)}set(e){this.reset();for(let t=0;t<this.indices.length;t++){this.indices[t]=e[t];for(let i=0;i<e[t].length;i++)this.name+=e[t][i],this.name+=",";this.name+="."}}reset(){this.reset,this.name="",this.indices=[[1],[],[],[],[],[]]}copy(e){this.name=e.name,this.indices=e.indices}fromPreset(e){this.reset();let t=p.feedbacks6Op[e];for(var i=0;i<t.indices.length;i++){this.indices[i]=Array.from(t.indices[i]);for(let e=0;e<t.indices[i].length;e++)this.name+=t.indices[i][e],this.name+=",";this.name+="."}}}class de{constructor(e){this.spectrum=[],this.hash=-1,this.reset(e)}reset(e){for(let t=0;t<p.spectrumControlPoints;t++)if(e)this.spectrum[t]=Math.round(p.spectrumMax*(1/Math.sqrt(1+t/3)));else{const e=0==t||7==t||11==t||14==t||16==t||18==t||21==t||23==t||t>=25;this.spectrum[t]=e?Math.max(0,Math.round(p.spectrumMax*(1-t/30))):0}this.markCustomWaveDirty()}markCustomWaveDirty(){const e=He.fittingPowerOfTwo(p.spectrumMax+2)-1;let t=0;for(const i of this.spectrum)t=t*e+i>>>0;this.hash=t}}class ye{constructor(){this.wave=null,this.S=-1}getCustomWave(e,t){if(this.S==e.hash)return this.wave;this.S=e.hash;const i=p.spectrumNoiseLength;null!=this.wave&&this.wave.length==i+1||(this.wave=new Float32Array(i+1));const s=this.wave;for(let e=0;e<i;e++)s[e]=0;const n=[0,1/7,Math.log2(5/4),3/7,Math.log2(1.5),5/7,6/7];function a(e){return t+Math.floor(e/p.spectrumControlPointsPerOctave)+n[(e+p.spectrumControlPointsPerOctave)%p.spectrumControlPointsPerOctave]}let o=1;for(let t=0;t<p.spectrumControlPoints+1;t++){const n=t<=0?0:e.spectrum[t-1],r=t>=p.spectrumControlPoints?e.spectrum[p.spectrumControlPoints-1]:e.spectrum[t],l=a(t-1);let h=a(t);t>=p.spectrumControlPoints&&(h=14+.25*(h-14)),0==n&&0==r||(o+=.02*v(s,i,l,h,n/p.spectrumMax,r/p.spectrumMax,-.5))}return e.spectrum[p.spectrumControlPoints-1]>0&&(o+=.02*v(s,i,14+.25*(a(p.spectrumControlPoints)-14),14,e.spectrum[p.spectrumControlPoints-1]/p.spectrumMax,0,-.5)),A(s,i),C(s,5/(Math.sqrt(i)*Math.pow(o,.75))),s[i]=s[0],s}}class ve{constructor(){this.harmonics=[],this.hash=-1,this.reset()}reset(){for(let e=0;e<p.harmonicsControlPoints;e++)this.harmonics[e]=0;this.harmonics[0]=p.harmonicsMax,this.harmonics[3]=p.harmonicsMax,this.harmonics[6]=p.harmonicsMax,this.markCustomWaveDirty()}markCustomWaveDirty(){const e=He.fittingPowerOfTwo(p.harmonicsMax+2)-1;let t=0;for(const i of this.harmonics)t=t*e+i>>>0;this.hash=t}}class be{constructor(){this.wave=null,this.S=-1}getCustomWave(e,t){if(this.S==e.hash&&this.M==t)return this.wave;this.S=e.hash,this.M=t;const i=7==t?p.harmonicsRenderedForPickedString:p.harmonicsRendered,s=p.harmonicsWavelength,n=y(0,null,null);null!=this.wave&&this.wave.length==s+1||(this.wave=new Float32Array(s+1));const a=this.wave;for(let e=0;e<s;e++)a[e]=0;let o=1;for(let t=0;t<i;t++){const r=t+1;let l=t<p.harmonicsControlPoints?e.harmonics[t]:e.harmonics[p.harmonicsControlPoints-1];t>=p.harmonicsControlPoints&&(l*=1-(t-p.harmonicsControlPoints)/(i-p.harmonicsControlPoints));const h=l/p.harmonicsMax;let u=Math.pow(2,l-p.harmonicsMax+1)*Math.sqrt(h);t<p.harmonicsControlPoints&&(o+=u),u*=Math.pow(r,-.25),u*=n[t+589],a[s-r]=u}A(a,s);const r=1/Math.pow(o,.7);for(let e=0;e<a.length;e++)a[e]*=r;return m(a),a[s]=a[0],a}}class ge{constructor(){this.additives=[],this.hash=-1,this.waveTypes=[],this.reset()}reset(){for(let e=0;e<p.additiveControlPoints;e++)this.additives[e]=0,this.waveTypes[e]=2;this.additives[0]=p.harmonicsMax,this.additives[3]=p.harmonicsMax,this.additives[6]=p.harmonicsMax,this.markCustomWaveDirty()}markCustomWaveDirty(){const e=He.fittingPowerOfTwo(p.additiveMax+2)-1;let t=0;for(const i of this.additives)t=t*e+i>>>0;this.hash=t}}class Se{constructor(){this.wave=null,this.S=-1}getCustomWave(e){if(this.S==e.hash)return this.wave;this.S=e.hash;const t=p.additiveRendered,i=p.additiveWavelength;null!=this.wave&&this.wave.length==i+1||(this.wave=new Float32Array(i+1));const s=this.wave;for(let e=0;e<i;e++)s[e]=1;for(let n=1;n<t;n++){const t=n+1;for(let a=0;a<i;a++){let o=this.waveExpressions(e.waveTypes[n],a/i,t)*(null!=e.additives[n]?e.additives[n]/p.additiveMax:1);o*=Math.pow(t,-.25),s[a]+=o}}const n=1/Math.pow(1,.7);for(let e=0;e<s.length;e++)s[e]*=n;return m(s),s[i]=s[0],s}waveExpressions(e,t,i){switch(e){case 0:default:return Math.sin(t*i*Math.PI*2)/i;case 1:return(Math.floor((t*i-1)%2+2)%2*2-1)/i;case 2:return(2*(2*Math.abs(((t*i/2+.5)%1+1)%1)-1)-1)/i;case 3:return(2*Math.abs(((t*i/2+.5)%1+1)%1)-1)/i;case 4:return(-2*Math.abs(((t*i/2+.5)%1+1)%1)+1)/i;case 5:return this.waveExpressions(2,t,i)+this.waveExpressions(2,t+.5,i)}}}class we{constructor(){this.freq=0,this.gain=p.filterGainCenter,this.type=2}set(e,t){this.freq=e,this.gain=t}getHz(){return we.getHzFromSettingValue(this.freq)}static getHzFromSettingValue(e){return p.filterFreqReferenceHz*Math.pow(2,(e-p.filterFreqReferenceSetting)*p.filterFreqStep)}static getSettingValueFromHz(e){return Math.log2(e/p.filterFreqReferenceHz)/p.filterFreqStep+p.filterFreqReferenceSetting}static getRoundedSettingValueFromHz(e){return Math.max(0,Math.min(p.filterFreqRange-1,Math.round(we.getSettingValueFromHz(e))))}getLinearGain(e=1){const t=(this.gain-p.filterGainCenter)*p.filterGainStep,i=2==this.type?0:-.5,s=i+(t-i)*e;return Math.pow(2,s)}static getRoundedSettingValueFromLinearGain(e){return Math.max(0,Math.min(p.filterGainRange-1,Math.round(Math.log2(e)/p.filterGainStep+p.filterGainCenter)))}toCoefficients(e,t,i=1,s=1){const n=2*Math.PI*Math.max(p.filterFreqMinHz,Math.min(p.filterFreqMaxHz,i*this.getHz()))/t,a=this.getLinearGain(s);switch(this.type){case 0:e.lowPass2ndOrderButterworth(n,a);break;case 1:e.highPass2ndOrderButterworth(n,a);break;case 2:e.peak2ndOrder(n,a,1);break;default:throw new Error}}getVolumeCompensationMult(){const e=(this.freq-p.filterFreqReferenceSetting)*p.filterFreqStep,t=(this.gain-p.filterGainCenter)*p.filterGainStep;switch(this.type){case 0:const i=Math.pow(2,e)*p.filterFreqReferenceHz/8e3,s=(Math.sqrt(1+4*i)-1)/2,n=Math.log2(s);return Math.pow(.5,.2*Math.max(0,t+1)+Math.min(0,Math.max(-3,.595*n+.35*Math.min(0,t+1))));case 1:return Math.pow(.5,.125*Math.max(0,t+1)+Math.min(0,.3*(-e-Math.log2(p.filterFreqReferenceHz/125))+.2*Math.min(0,t+1)));case 2:const a=e+Math.log2(p.filterFreqReferenceHz/2e3),o=Math.pow(1/(1+Math.pow(a/3,2)),2);return Math.pow(.5,.125*Math.max(0,t)+.1*o*Math.min(0,t));default:throw new Error}}}class Me{constructor(){this.controlPoints=[],this.controlPointCount=0,this.reset()}reset(){this.controlPointCount=0}addPoint(e,t,i){let s;this.controlPoints.length<=this.controlPointCount?(s=new we,this.controlPoints[this.controlPointCount]=s):s=this.controlPoints[this.controlPointCount],this.controlPointCount++,s.type=e,s.set(t,i)}toJsonObject(){const e=[];for(let t=0;t<this.controlPointCount;t++){const i=this.controlPoints[t];e.push({type:p.filterTypeNames[i.type],cutoffHz:Math.round(100*i.getHz())/100,linearGain:Math.round(1e4*i.getLinearGain())/1e4})}return e}fromJsonObject(e){if(this.controlPoints.length=0,e)for(const t of e){const e=new we;e.type=p.filterTypeNames.indexOf(t.type),-1==e.type&&(e.type=2),null!=t.cutoffHz?e.freq=we.getRoundedSettingValueFromHz(t.cutoffHz):e.freq=0,null!=t.linearGain?e.gain=we.getRoundedSettingValueFromLinearGain(t.linearGain):e.gain=p.filterGainCenter,this.controlPoints.push(e)}this.controlPointCount=this.controlPoints.length}static filtersCanMorph(e,t){if(e.controlPointCount!=t.controlPointCount)return!1;for(let i=0;i<e.controlPointCount;i++)if(e.controlPoints[i].type!=t.controlPoints[i].type)return!1;return!0}static lerpFilters(e,t,i){let s=new Me;if(null==e)return e;if(null==t)return t;if(i=Math.max(0,Math.min(1,i)),this.filtersCanMorph(e,t)){for(let n=0;n<e.controlPointCount;n++)s.controlPoints[n]=new we,s.controlPoints[n].type=e.controlPoints[n].type,s.controlPoints[n].freq=e.controlPoints[n].freq+(t.controlPoints[n].freq-e.controlPoints[n].freq)*i,s.controlPoints[n].gain=e.controlPoints[n].gain+(t.controlPoints[n].gain-e.controlPoints[n].gain)*i;return s.controlPointCount=e.controlPointCount,s}return i>=1?t:e}convertLegacySettings(e,t,i){this.reset();const s=2*Math.asin(.475),n=t>1,a=0==t,o=10==e,r=5==i.type||6==i.type||10==i.type||1==i.type,l=48e3,h=8e3*Math.pow(2,.5*(e-10)),p=Math.min(s,2*Math.PI*h/l);if(0==i.type&&!n&&o);else if(a){const e=3.5,t=p*Math.pow(2,e),i=l*(t/(1+t/Math.PI))/(2*Math.PI),s=we.getRoundedSettingValueFromHz(i),n=we.getHzFromSettingValue(s),a=2*Math.PI*n/l,o=new L;o.lowPass1stOrderSimplified(p);const h=new W;h.analyze(o,a);const u=h.magnitude();let c=Math.log2(u);c=.82*(c+e)-e,r&&(c=Math.min(c,-1));const f=Math.pow(2,c),m=we.getRoundedSettingValueFromLinearGain(f);this.addPoint(0,s,m)}else{const e=.5/(1-.95*Math.sqrt(Math.max(0,t-1)/6)),i=.5/e,s=p+(p*(p/(2*Math.PI*8e3/l)*Math.pow(i,.9)+1)-p)*i;let a;a=r?l*Math.min(s,p*Math.pow(2,.25))/(2*Math.PI):l*s/(2*Math.PI);const o=we.getRoundedSettingValueFromHz(a);let h;if(r)h=e;else{const t=new L;t.lowPass2ndOrderSimplified(p,e);const i=new W;i.analyze(t,s),h=i.magnitude()}n||(h=Math.min(h,Math.sqrt(.5)));const u=we.getRoundedSettingValueFromLinearGain(h);this.addPoint(0,o,u)}this.controlPoints.length=this.controlPointCount}convertLegacySettingsForSynth(e,t,i=!1){this.reset();const s=2*Math.asin(.475),n=0==t&&i,a=48e3,o=8e3*Math.pow(2,.5*(e-10)),r=Math.min(s,2*Math.PI*o/a);if(n){const e=3.5,t=r*Math.pow(2,e),i=a*(t/(1+t/Math.PI))/(2*Math.PI),s=we.getRoundedSettingValueFromHz(i),n=we.getHzFromSettingValue(s),o=2*Math.PI*n/a,l=new L;l.lowPass1stOrderSimplified(r);const h=new W;h.analyze(l,o);const p=h.magnitude();let u=Math.log2(p);u=.82*(u+e)-e;const c=Math.pow(2,u),f=we.getRoundedSettingValueFromLinearGain(c);this.addPoint(0,s,f)}else{const e=.5/(1-.95*Math.sqrt(Math.max(0,t-1)/6)),i=.5/e,s=r+(r*(r/(2*Math.PI*8e3/a)*Math.pow(i,.9)+1)-r)*i;let n;n=a*s/(2*Math.PI);const o=we.getSettingValueFromHz(n);let l;const h=new L;h.lowPass2ndOrderSimplified(r,e);const p=new W;p.analyze(h,s),l=p.magnitude();const u=we.getRoundedSettingValueFromLinearGain(l);this.addPoint(0,o,u)}}}class ke{constructor(e){this.isNoiseEnvelope=e,this.target=0,this.index=0,this.envelope=0,this.perEnvelopeSpeed=p.envelopes[this.envelope].speed,this.perEnvelopeLowerBound=0,this.perEnvelopeUpperBound=1,this.tempEnvelopeSpeed=null,this.steps=2,this.seed=2,this.waveform=0,this.reset()}reset(){this.target=0,this.index=0,this.envelope=0,this.pitchEnvelopeStart=0,this.pitchEnvelopeEnd=this.isNoiseEnvelope?p.drumCount-1:p.maxPitch,this.inverse=!1,this.isNoiseEnvelope=!1,this.perEnvelopeSpeed=p.envelopes[this.envelope].speed,this.perEnvelopeLowerBound=0,this.perEnvelopeUpperBound=1,this.tempEnvelopeSpeed=null,this.steps=2,this.seed=2,this.waveform=0}toJsonObject(){const e={target:p.instrumentAutomationTargets[this.target].name,envelope:p.newEnvelopes[this.envelope].name,pitchEnvelopeStart:this.pitchEnvelopeStart,pitchEnvelopeEnd:this.pitchEnvelopeEnd,inverse:this.inverse,perEnvelopeSpeed:this.perEnvelopeSpeed,perEnvelopeLowerBound:this.perEnvelopeLowerBound,perEnvelopeUpperBound:this.perEnvelopeUpperBound,steps:this.steps,seed:this.seed,waveform:this.waveform};return p.instrumentAutomationTargets[this.target].maxCount>1&&(e.index=this.index),e}fromJsonObject(e,t){this.reset();let i=p.instrumentAutomationTargets.dictionary[e.target];null==i&&(i=p.instrumentAutomationTargets.dictionary.noteVolume),this.target=i.index;let s="slarmoosbox"==t?p.newEnvelopes.dictionary[e.envelope]:p.newEnvelopes[p.envelopes.dictionary[e.envelope].type];null==s&&(s=p.newEnvelopes[p.envelopes.dictionary[e.envelope].type]),null==s&&(s=p.envelopes.dictionary.none),this.envelope=s.index,null!=e.index?this.index=Y(0,p.instrumentAutomationTargets[this.target].maxCount,0|e.index):this.index=0,null!=e.pitchEnvelopeStart?this.pitchEnvelopeStart=Y(0,this.isNoiseEnvelope?p.drumCount:p.maxPitch+1,e.pitchEnvelopeStart):this.pitchEnvelopeStart=0,null!=e.pitchEnvelopeEnd?this.pitchEnvelopeEnd=Y(0,this.isNoiseEnvelope?p.drumCount:p.maxPitch+1,e.pitchEnvelopeEnd):this.pitchEnvelopeEnd=this.isNoiseEnvelope?p.drumCount:p.maxPitch,this.inverse=Boolean(e.inverse),null!=e.perEnvelopeSpeed?this.perEnvelopeSpeed=e.perEnvelopeSpeed:this.perEnvelopeSpeed=p.envelopes.dictionary[e.envelope].speed,null!=e.perEnvelopeLowerBound?this.perEnvelopeLowerBound=e.perEnvelopeLowerBound:this.perEnvelopeLowerBound=0,null!=e.perEnvelopeUpperBound?this.perEnvelopeUpperBound=e.perEnvelopeUpperBound:this.perEnvelopeUpperBound=1,null!=e.steps?this.steps=e.steps:this.steps=2,null!=e.seed?this.seed=e.seed:this.seed=2,null!=e.waveform?this.waveform=e.waveform:this.waveform=0}}class xe{constructor(e,t){if(this.type=0,this.preset=0,this.chipWave=2,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=p.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0,this.chipNoise=1,this.eqFilter=new Me,this.eqFilterType=!1,this.eqFilterSimpleCut=p.filterSimpleCutRange-1,this.eqFilterSimplePeak=0,this.noteFilter=new Me,this.noteFilterType=!1,this.noteFilterSimpleCut=p.filterSimpleCutRange-1,this.noteFilterSimplePeak=0,this.eqSubFilters=[],this.noteSubFilters=[],this.envelopes=[],this.fadeIn=0,this.fadeOut=p.fadeOutNeutral,this.envelopeCount=0,this.transition=p.transitions.dictionary.normal.index,this.pitchShift=0,this.detune=0,this.vibrato=0,this.interval=0,this.vibratoDepth=0,this.vibratoSpeed=10,this.vibratoDelay=0,this.vibratoType=0,this.envelopeSpeed=12,this.discreteEnvelope=!1,this.unison=0,this.unisonVoices=1,this.unisonSpread=0,this.unisonOffset=0,this.unisonExpression=1.4,this.unisonSign=1,this.effects=0,this.chord=1,this.volume=0,this.pan=p.panCenter,this.panDelay=10,this.arpeggioSpeed=12,this.fastTwoNoteArp=!1,this.legacyTieOver=!1,this.clicklessTransition=!1,this.aliases=!1,this.pulseWidth=p.pulseWidthRange,this.decimalOffset=0,this.supersawDynamism=p.supersawDynamismMax,this.supersawSpread=Math.ceil(p.supersawSpreadMax/2),this.supersawShape=0,this.stringSustain=10,this.stringSustainType=1,this.distortion=0,this.bitcrusherFreq=0,this.bitcrusherQuantization=0,this.chorus=0,this.reverb=0,this.echoSustain=0,this.echoDelay=0,this.algorithm=0,this.feedbackType=0,this.algorithm6Op=1,this.feedbackType6Op=1,this.customAlgorithm=new fe,this.customFeedbackType=new me,this.feedbackAmplitude=0,this.customChipWave=new Float32Array(64),this.customChipWaveIntegral=new Float32Array(65),this.operators=[],this.harmonicsWave=new ve,this.additiveWave=new ge,this.drumsetEnvelopes=[],this.drumsetSpectrumWaves=[],this.modChannels=[],this.modInstruments=[],this.modulators=[],this.modFilterTypes=[],this.modEnvelopeNumbers=[],this.invalidModulators=[],this.isNoiseInstrument=!1,t)for(let e=0;e<p.modCount;e++)this.modChannels.push(-2),this.modInstruments.push(0),this.modulators.push(p.modulators.dictionary.none.index);this.spectrumWave=new de(e);for(let e=0;e<p.operatorCount+2;e++)this.operators[e]=new ce(e);for(let e=0;e<p.drumCount;e++)this.drumsetEnvelopes[e]=p.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[e]=new de(!0);for(let e=0;e<64;e++)this.customChipWave[e]=24-Math.floor(.75*e);let i=0;for(let e=0;e<this.customChipWave.length;e++)i+=this.customChipWave[e];const s=i/this.customChipWave.length;let n=0,a=0;for(let e=0;e<this.customChipWave.length;e++)n+=a,a=this.customChipWave[e]-s,this.customChipWaveIntegral[e]=n;this.customChipWaveIntegral[64]=0,this.isNoiseInstrument=e}setTypeAndReset(e,t,i){i&&(e=10),this.type=e,this.preset=e,this.volume=0,this.effects=4,this.chorus=p.chorusRange-1,this.reverb=0,this.echoSustain=Math.floor(.5*(p.echoSustainRange-1)),this.echoDelay=Math.floor(.5*(p.echoDelayRange-1)),this.eqFilter.reset(),this.eqFilterType=!1,this.eqFilterSimpleCut=p.filterSimpleCutRange-1,this.eqFilterSimplePeak=0;for(let e=0;e<p.filterMorphCount;e++)this.eqSubFilters[e]=null,this.noteSubFilters[e]=null;switch(this.noteFilter.reset(),this.noteFilterType=!1,this.noteFilterSimpleCut=p.filterSimpleCutRange-1,this.noteFilterSimplePeak=0,this.distortion=Math.floor(.75*(p.distortionRange-1)),this.bitcrusherFreq=Math.floor(.5*(p.bitcrusherFreqRange-1)),this.bitcrusherQuantization=Math.floor(.5*(p.bitcrusherQuantizationRange-1)),this.pan=p.panCenter,this.panDelay=10,this.pitchShift=p.pitchShiftCenter,this.detune=p.detuneCenter,this.vibrato=0,this.unison=0,this.stringSustain=10,this.stringSustainType=p.enableAcousticSustain?1:0,this.clicklessTransition=!1,this.arpeggioSpeed=12,this.envelopeSpeed=12,this.discreteEnvelope=!1,this.legacyTieOver=!1,this.aliases=!1,this.fadeIn=0,this.fadeOut=p.fadeOutNeutral,this.transition=p.transitions.dictionary.normal.index,this.envelopeCount=0,this.isNoiseInstrument=t,e){case 0:this.chipWave=2,this.chord=p.chords.dictionary.arpeggio.index,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=p.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0;break;case 9:this.chipWave=2,this.chord=p.chords.dictionary.arpeggio.index;for(let e=0;e<64;e++)this.customChipWave[e]=24-Math.floor(.75*e);let i=0;for(let e=0;e<this.customChipWave.length;e++)i+=this.customChipWave[e];const s=i/this.customChipWave.length;let n=0,a=0;for(let e=0;e<this.customChipWave.length;e++)n+=a,a=this.customChipWave[e]-s,this.customChipWaveIntegral[e]=n;this.customChipWaveIntegral[64]=0;break;case 1:this.chord=p.chords.dictionary["custom interval"].index,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0;for(let e=0;e<this.operators.length;e++)this.operators[e].reset(e);break;case 11:this.transition=1,this.vibrato=0,this.effects=1,this.chord=3,this.algorithm=0,this.feedbackType=0,this.algorithm6Op=1,this.feedbackType6Op=1,this.customAlgorithm.fromPreset(1),this.feedbackAmplitude=0;for(let e=0;e<this.operators.length;e++)this.operators[e].reset(e);break;case 2:this.chipNoise=1,this.chord=p.chords.dictionary.arpeggio.index;break;case 3:this.chord=p.chords.dictionary.simultaneous.index,this.spectrumWave.reset(t);break;case 4:this.chord=p.chords.dictionary.simultaneous.index;for(let e=0;e<p.drumCount;e++)this.drumsetEnvelopes[e]=p.envelopes.dictionary["twang 2"].index,null==this.drumsetSpectrumWaves[e]&&(this.drumsetSpectrumWaves[e]=new de(!0)),this.drumsetSpectrumWaves[e].reset(t);break;case 5:this.chord=p.chords.dictionary.simultaneous.index,this.harmonicsWave.reset();break;case 6:this.chord=p.chords.dictionary.arpeggio.index,this.pulseWidth=p.pulseWidthRange,this.decimalOffset=0;break;case 7:this.chord=p.chords.dictionary.strum.index,this.harmonicsWave.reset();break;case 12:this.chord=p.chords.dictionary.simultaneous.index,this.additiveWave.reset();break;case 10:this.transition=0,this.vibrato=0,this.interval=0,this.effects=0,this.chord=0,this.modChannels=[],this.modInstruments=[],this.modulators=[];for(let e=0;e<p.modCount;e++)this.modChannels.push(-2),this.modInstruments.push(0),this.modulators.push(p.modulators.dictionary.none.index),this.invalidModulators[e]=!1,this.modFilterTypes[e]=0,this.modEnvelopeNumbers[e]=0;break;case 8:this.chord=p.chords.dictionary.arpeggio.index,this.supersawDynamism=p.supersawDynamismMax,this.supersawSpread=Math.ceil(p.supersawSpreadMax/2),this.supersawShape=0,this.pulseWidth=p.pulseWidthRange-1,this.decimalOffset=0;break;default:throw new Error("Unrecognized instrument type: "+e)}this.chord!=p.chords.dictionary.simultaneous.index&&(this.effects=2048|this.effects)}convertLegacySettings(e,t){let i=e.filterCutoff,s=e.filterResonance,n=e.filterEnvelope,a=e.pulseEnvelope,o=e.operatorEnvelopes,r=e.feedbackEnvelope;null==i&&(i=0==this.type?6:10),null==s&&(s=0),null==n&&(n=p.envelopes.dictionary.none),null==a&&(a=p.envelopes.dictionary[6==this.type?"twang 2":"none"]),null==o&&(o=[p.envelopes.dictionary[1==this.type?"note size":"none"],p.envelopes.dictionary.none,p.envelopes.dictionary.none,p.envelopes.dictionary.none]),null==r&&(r=p.envelopes.dictionary.none);10==i&&4==n.type&&(n=p.envelopes.dictionary.none);const l=p.algorithms[this.algorithm].carrierCount;let h=!0,u=!0,c=1==n.type||1==a.type;if(1==this.type||11==this.type){c=c||1==r.type;for(let e=0;e<o.length;e++)e<l?1!=o[e].type?u=!1:h=!1:c=c||1==o[e].type}this.envelopeCount=0,1!=this.type&&11!=this.type||(u&&c?this.addEnvelope(p.instrumentAutomationTargets.dictionary.noteVolume.index,0,p.envelopes.dictionary["note size"].index,!1):h&&!c&&this.addEnvelope(p.instrumentAutomationTargets.dictionary.none.index,0,p.envelopes.dictionary["note size"].index,!1)),0==n.type?(this.noteFilter.reset(),this.noteFilterType=!1,this.eqFilter.convertLegacySettings(i,s,n),this.effects&=-33,(t||this.eqFilterType)&&(this.eqFilterType=!0,this.eqFilterSimpleCut=i,this.eqFilterSimplePeak=s)):(this.eqFilter.reset(),this.eqFilterType=!1,this.noteFilterType=!1,this.noteFilter.convertLegacySettings(i,s,n),this.effects|=32,this.addEnvelope(p.instrumentAutomationTargets.dictionary.noteFilterAllFreqs.index,0,n.index,!1),(t||this.noteFilterType)&&(this.noteFilterType=!0,this.noteFilterSimpleCut=i,this.noteFilterSimplePeak=s)),0!=a.type&&this.addEnvelope(p.instrumentAutomationTargets.dictionary.pulseWidth.index,0,a.index,!1);for(let e=0;e<o.length;e++)e<l&&u||0!=o[e].type&&this.addEnvelope(p.instrumentAutomationTargets.dictionary.operatorAmplitude.index,e,o[e].index,!1);0!=r.type&&this.addEnvelope(p.instrumentAutomationTargets.dictionary.feedbackAmplitude.index,0,r.index,!1)}toJsonObject(){const e={type:p.instrumentTypeNames[this.type],volume:this.volume,eqFilter:this.eqFilter.toJsonObject(),eqFilterType:this.eqFilterType,eqSimpleCut:this.eqFilterSimpleCut,eqSimplePeak:this.eqFilterSimplePeak,envelopeSpeed:this.envelopeSpeed,discreteEnvelope:this.discreteEnvelope};this.preset!=this.type&&(e.preset=this.preset);for(let t=0;t<p.filterMorphCount;t++)null!=this.eqSubFilters[t]&&(e["eqSubFilters"+t]=this.eqSubFilters[t].toJsonObject());const t=[];for(const e of p.effectOrder)this.effects&1<<e&&t.push(p.effectNames[e]);if(e.effects=t,M(this.effects)&&(e.transition=p.transitions[this.transition].name,e.clicklessTransition=this.clicklessTransition),k(this.effects)&&(e.chord=this.getChord().name,e.fastTwoNoteArp=this.fastTwoNoteArp,e.arpeggioSpeed=this.arpeggioSpeed),x(this.effects)&&(e.pitchShiftSemitones=this.pitchShift),F(this.effects)&&(e.detuneCents=He.detuneToCents(this.detune)),q(this.effects)&&(-1==this.vibrato&&(this.vibrato=5),5!=this.vibrato?e.vibrato=p.vibratos[this.vibrato].name:e.vibrato="custom",e.vibratoDepth=this.vibratoDepth,e.vibratoDelay=this.vibratoDelay,e.vibratoSpeed=this.vibratoSpeed,e.vibratoType=this.vibratoType),P(this.effects)){e.noteFilterType=this.noteFilterType,e.noteSimpleCut=this.noteFilterSimpleCut,e.noteSimplePeak=this.noteFilterSimplePeak,e.noteFilter=this.noteFilter.toJsonObject();for(let t=0;t<p.filterMorphCount;t++)null!=this.noteSubFilters[t]&&(e["noteSubFilters"+t]=this.noteSubFilters[t].toJsonObject())}if(I(this.effects)&&(e.distortion=Math.round(100*this.distortion/(p.distortionRange-1)),e.aliases=this.aliases),T(this.effects)&&(e.bitcrusherOctave=(p.bitcrusherFreqRange-1-this.bitcrusherFreq)*p.bitcrusherOctaveStep,e.bitcrusherQuantization=Math.round(100*this.bitcrusherQuantization/(p.bitcrusherQuantizationRange-1))),D(this.effects)&&(e.pan=Math.round(100*(this.pan-p.panCenter)/p.panCenter),e.panDelay=this.panDelay),z(this.effects)&&(e.chorus=Math.round(100*this.chorus/(p.chorusRange-1))),H(this.effects)&&(e.echoSustain=Math.round(100*this.echoSustain/(p.echoSustainRange-1)),e.echoDelayBeats=Math.round(1e3*(this.echoDelay+1)*p.echoDelayStepTicks/(p.ticksPerPart*p.partsPerBeat))/1e3),O(this.effects)&&(e.reverb=Math.round(100*this.reverb/(p.reverbRange-1))),4!=this.type&&(e.fadeInSeconds=Math.round(1e4*He.fadeInSettingToSeconds(this.fadeIn))/1e4,e.fadeOutTicks=He.fadeOutSettingToTicks(this.fadeOut)),5==this.type||7==this.type){e.harmonics=[];for(let t=0;t<p.harmonicsControlPoints;t++)e.harmonics[t]=Math.round(100*this.harmonicsWave.harmonics[t]/p.harmonicsMax)}if(12==this.type){e.additive=[],e.additiveWaves=[];for(let t=0;t<p.additiveControlPoints;t++)e.additive[t]=Math.round(100*this.additiveWave.additives[t]/p.additiveMax),e.additiveWaves[t]=this.additiveWave.waveTypes[t]}if(2==this.type)e.wave=p.chipNoises[this.chipNoise].name,e.unison=this.unison==p.unisons.length?"custom":p.unisons[this.unison].name,this.unison==p.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(3==this.type){e.spectrum=[];for(let t=0;t<p.spectrumControlPoints;t++)e.spectrum[t]=Math.round(100*this.spectrumWave.spectrum[t]/p.spectrumMax);e.unison=this.unison==p.unisons.length?"custom":p.unisons[this.unison].name,this.unison==p.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign)}else if(4==this.type){e.drums=[];for(let t=0;t<p.drumCount;t++){const i=[];for(let e=0;e<p.spectrumControlPoints;e++)i[e]=Math.round(100*this.drumsetSpectrumWaves[t].spectrum[e]/p.spectrumMax);e.drums[t]={filterEnvelope:this.getDrumsetEnvelope(t).name,spectrum:i}}}else if(0==this.type)e.wave=p.chipWaves[this.chipWave].name,e.unison=this.unison==p.unisons.length?"custom":p.unisons[this.unison].name,this.unison==p.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.isUsingAdvancedLoopControls=this.isUsingAdvancedLoopControls,e.chipWaveLoopStart=this.chipWaveLoopStart,e.chipWaveLoopEnd=this.chipWaveLoopEnd,e.chipWaveLoopMode=this.chipWaveLoopMode,e.chipWavePlayBackwards=this.chipWavePlayBackwards,e.chipWaveStartOffset=this.chipWaveStartOffset;else if(6==this.type)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset,e.unison=this.unison==p.unisons.length?"custom":p.unisons[this.unison].name,this.unison==p.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(8==this.type)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset,e.dynamism=Math.round(100*this.supersawDynamism/p.supersawDynamismMax),e.spread=Math.round(100*this.supersawSpread/p.supersawSpreadMax),e.shape=Math.round(100*this.supersawShape/p.supersawShapeMax);else if(7==this.type)e.unison=this.unison==p.unisons.length?"custom":p.unisons[this.unison].name,this.unison==p.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.stringSustain=Math.round(100*this.stringSustain/(p.stringSustainRange-1)),p.enableAcousticSustain&&(e.stringSustainType=p.sustainTypeNames[this.stringSustainType]);else if(5==this.type)e.unison=this.unison==p.unisons.length?"custom":p.unisons[this.unison].name,this.unison==p.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(1==this.type||11==this.type){const t=[];for(const e of this.operators)t.push({frequency:p.operatorFrequencies[e.frequency].name,amplitude:e.amplitude,waveform:p.operatorWaves[e.waveform].name,pulseWidth:e.pulseWidth});if(1==this.type)e.algorithm=p.algorithms[this.algorithm].name,e.feedbackType=p.feedbacks[this.feedbackType].name,e.feedbackAmplitude=this.feedbackAmplitude,e.operators=t;else{if(e.algorithm=p.algorithms6Op[this.algorithm6Op].name,e.feedbackType=p.feedbacks6Op[this.feedbackType6Op].name,e.feedbackAmplitude=this.feedbackAmplitude,0==this.algorithm6Op){const t={};t.mods=this.customAlgorithm.modulatedBy,t.carrierCount=this.customAlgorithm.carrierCount,e.customAlgorithm=t}if(0==this.feedbackType6Op){const t={};t.mods=this.customFeedbackType.indices,e.customFeedback=t}e.operators=t}}else if(9==this.type){e.wave=p.chipWaves[this.chipWave].name,e.unison=this.unison==p.unisons.length?"custom":p.unisons[this.unison].name,this.unison==p.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.customChipWave=new Float64Array(64),e.customChipWaveIntegral=new Float64Array(65);for(let t=0;t<this.customChipWave.length;t++)e.customChipWave[t]=this.customChipWave[t]}else{if(10!=this.type)throw new Error("Unrecognized instrument type");e.modChannels=[],e.modInstruments=[],e.modSettings=[],e.modFilterTypes=[],e.modEnvelopeNumbers=[];for(let t=0;t<p.modCount;t++)e.modChannels[t]=this.modChannels[t],e.modInstruments[t]=this.modInstruments[t],e.modSettings[t]=this.modulators[t],e.modFilterTypes[t]=this.modFilterTypes[t],e.modEnvelopeNumbers[t]=this.modEnvelopeNumbers[t]}const i=[];for(let e=0;e<this.envelopeCount;e++)i.push(this.envelopes[e].toJsonObject());return e.envelopes=i,e}fromJsonObject(e,t,i,s,n,a=0,o=p.jsonFormat){null==e&&(e={});const r=o.toLowerCase();let l=p.instrumentTypeNames.indexOf(e.type);if("synthbox"==r&&"FM"==e.type&&(l=p.instrumentTypeNames.indexOf("FM6op")),-1==l&&(l=i?10:t?2:0),this.setTypeAndReset(l,t,i),this.effects&=-5,null!=e.preset&&(this.preset=e.preset>>>0),null!=e.volume?this.volume="jummbox"==r||"midbox"==r||"synthbox"==r||"goldbox"==r||"paandorasbox"==r||"ultrabox"==r||"slarmoosbox"==r?Y(-p.volumeRange/2,p.volumeRange/2+1,0|e.volume):Math.round(25*-Y(0,8,Math.round(5-(0|e.volume)/20))/7):this.volume=0,this.envelopeSpeed=null!=e.envelopeSpeed?Y(0,p.modulators.dictionary["envelope speed"].maxRawVol+1,0|e.envelopeSpeed):12,null!=e.discreteEnvelope?this.discreteEnvelope=e.discreteEnvelope:this.discreteEnvelope=!1,Array.isArray(e.effects)){let t=0;for(let i=0;i<e.effects.length;i++)t|=1<<p.effectNames.indexOf(e.effects[i]);this.effects=4095&t}else{const t=["none","reverb","chorus","chorus & reverb"];this.effects=t.indexOf(e.effects),-1==this.effects&&(this.effects=2==this.type?0:1)}this.transition=p.transitions.dictionary.normal.index;const h=e.transition||e.envelope;if(null!=h){let t=p.transitions.dictionary[h];if(null==e.fadeInSeconds||null==e.fadeOutTicks){const e={binary:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},seamless:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},sudden:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},hard:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},smooth:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},soft:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},slide:{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},"cross fade":{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},"hard fade":{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},"medium fade":{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},"soft fade":{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96}}[h];null!=e&&(t=p.transitions.dictionary[e.transition],this.fadeIn=He.secondsToFadeInSetting(e.fadeInSeconds),this.fadeOut=He.ticksToFadeOutSetting(e.fadeOutTicks))}null!=t&&(this.transition=t.index),this.transition!=p.transitions.dictionary.normal.index&&(this.effects=1024|this.effects)}null!=e.fadeInSeconds&&(this.fadeIn=He.secondsToFadeInSetting(+e.fadeInSeconds)),null!=e.fadeOutTicks&&(this.fadeOut=He.ticksToFadeOutSetting(+e.fadeOutTicks));{const t=e.chord,i={harmony:"simultaneous"},s=p.chords.dictionary[i[t]]||p.chords.dictionary[t];null!=s?this.chord=s.index:2==this.type?this.chord=p.chords.dictionary.arpeggio.index:7==this.type?this.chord=p.chords.dictionary.strum.index:0==this.type?this.chord=p.chords.dictionary.arpeggio.index:1==this.type||11==this.type?this.chord=p.chords.dictionary["custom interval"].index:this.chord=p.chords.dictionary.simultaneous.index}this.unison=p.unisons.dictionary.none.index;const u=e.unison||e.interval||e.chorus;if(null!=u){const e={union:"none",fifths:"fifth",octaves:"octave",error:"voiced"},t=p.unisons.dictionary[e[u]]||p.unisons.dictionary[u];null!=t&&(this.unison=t.index),"custom"==u&&(this.unison=p.unisons.length)}if(this.unisonVoices=null==e.unisonVoices?p.unisons[this.unison].voices:e.unisonVoices,this.unisonSpread=null==e.unisonSpread?p.unisons[this.unison].spread:e.unisonSpread,this.unisonOffset=null==e.unisonOffset?p.unisons[this.unison].offset:e.unisonOffset,this.unisonExpression=null==e.unisonExpression?p.unisons[this.unison].expression:e.unisonExpression,this.unisonSign=null==e.unisonSign?p.unisons[this.unison].sign:e.unisonSign,"custom harmony"==e.chorus&&(this.unison=p.unisons.dictionary.hum.index,this.chord=p.chords.dictionary["custom interval"].index),this.chord==p.chords.dictionary.simultaneous.index||Array.isArray(e.effects)||(this.effects=2048|this.effects),null!=e.pitchShiftSemitones&&(this.pitchShift=Y(0,p.pitchShiftRange,Math.round(+e.pitchShiftSemitones))),null!=e.octoff){let t=e.octoff;this.effects=128|this.effects,this.pitchShift="+1 (octave)"==t||"+2 (2 octaves)"==t?24:"+1/2 (fifth)"==t||"+1 1/2 (octave and fifth)"==t?18:"-1 (octave)"==t||"-2 (2 octaves"==t?0:"-1/2 (fifth)"==t||"-1 1/2 (octave and fifth)"==t?6:12}null!=e.detuneCents&&(this.detune=Y(p.detuneMin,p.detuneMax+1,Math.round(He.centsToDetune(+e.detuneCents)))),this.vibrato=p.vibratos.dictionary.none.index;const c=e.vibrato||e.effect;if(null!=c){const t={"vibrato light":"light","vibrato delayed":"delayed","vibrato heavy":"heavy"},i=p.vibratos.dictionary[t[u]]||p.vibratos.dictionary[c];null!=i?this.vibrato=i.index:"custom"==c&&(this.vibrato=p.vibratos.length),this.vibrato==p.vibratos.length?(this.vibratoDepth=e.vibratoDepth,this.vibratoSpeed=e.vibratoSpeed,this.vibratoDelay=e.vibratoDelay,this.vibratoType=e.vibratoType):(this.vibratoDepth=p.vibratos[this.vibrato].amplitude,this.vibratoDelay=p.vibratos[this.vibrato].delayTicks/2,this.vibratoSpeed=10,this.vibratoType=p.vibratos[this.vibrato].type),i!=p.vibratos.dictionary.none&&(this.effects=512|this.effects)}if(null!=e.pan?this.pan=Y(0,p.panMax+1,Math.round(p.panCenter+(0|e.pan)*p.panCenter/100)):null!=e.ipan?this.pan=Y(0,p.panMax+1,p.panCenter+-50*e.ipan):this.pan=p.panCenter,this.pan!=p.panCenter&&(this.effects=4|this.effects),null!=e.panDelay?this.panDelay=0|e.panDelay:this.panDelay=10,null!=e.detune?this.detune=Y(p.detuneMin,p.detuneMax+1,0|e.detune):null==e.detuneCents&&(this.detune=p.detuneCenter),null!=e.distortion&&(this.distortion=Y(0,p.distortionRange,Math.round((p.distortionRange-1)*(0|e.distortion)/100))),null!=e.bitcrusherOctave&&(this.bitcrusherFreq=p.bitcrusherFreqRange-1-+e.bitcrusherOctave/p.bitcrusherOctaveStep),null!=e.bitcrusherQuantization&&(this.bitcrusherQuantization=Y(0,p.bitcrusherQuantizationRange,Math.round((p.bitcrusherQuantizationRange-1)*(0|e.bitcrusherQuantization)/100))),null!=e.echoSustain&&(this.echoSustain=Y(0,p.echoSustainRange,Math.round((p.echoSustainRange-1)*(0|e.echoSustain)/100))),null!=e.echoDelayBeats&&(this.echoDelay=Y(0,p.echoDelayRange,Math.round(+e.echoDelayBeats*(p.ticksPerPart*p.partsPerBeat)/p.echoDelayStepTicks-1))),isNaN(e.chorus)||(this.chorus=Y(0,p.chorusRange,Math.round((p.chorusRange-1)*(0|e.chorus)/100))),null!=e.reverb?this.reverb=Y(0,p.reverbRange,Math.round((p.reverbRange-1)*(0|e.reverb)/100)):this.reverb=a,null!=e.pulseWidth?this.pulseWidth=Y(1,p.pulseWidthRange+1,Math.round(e.pulseWidth)):this.pulseWidth=p.pulseWidthRange,null!=e.decimalOffset?this.decimalOffset=Y(0,100,Math.round(e.decimalOffset)):this.decimalOffset=0,null!=e.dynamism?this.supersawDynamism=Y(0,p.supersawDynamismMax+1,Math.round(p.supersawDynamismMax*(0|e.dynamism)/100)):this.supersawDynamism=p.supersawDynamismMax,null!=e.spread?this.supersawSpread=Y(0,p.supersawSpreadMax+1,Math.round(p.supersawSpreadMax*(0|e.spread)/100)):this.supersawSpread=Math.ceil(p.supersawSpreadMax/2),null!=e.shape?this.supersawShape=Y(0,p.supersawShapeMax+1,Math.round(p.supersawShapeMax*(0|e.shape)/100)):this.supersawShape=0,null!=e.harmonics){for(let t=0;t<p.harmonicsControlPoints;t++)this.harmonicsWave.harmonics[t]=Math.max(0,Math.min(p.harmonicsMax,Math.round(p.harmonicsMax*+e.harmonics[t]/100)));this.harmonicsWave.markCustomWaveDirty()}else this.harmonicsWave.reset();if(null!=e.additives)for(let t=0;t<p.additiveControlPoints;t++)this.additiveWave.additives[t]=Math.max(0,Math.min(p.additiveMax,Math.round(p.additiveMax*+e.additive[t]/100))),null!=e.additiveWaves[t]?this.additiveWave.waveTypes[t]=e.additiveWaves[t]:this.additiveWave.waveTypes[t]=0;else this.additiveWave.reset();if(null!=e.spectrum)for(let t=0;t<p.spectrumControlPoints;t++)this.spectrumWave.spectrum[t]=Math.max(0,Math.min(p.spectrumMax,Math.round(p.spectrumMax*+e.spectrum[t]/100))),this.spectrumWave.markCustomWaveDirty();else this.spectrumWave.reset(t);null!=e.stringSustain?this.stringSustain=Y(0,p.stringSustainRange,Math.round((p.stringSustainRange-1)*(0|e.stringSustain)/100)):this.stringSustain=10,this.stringSustainType=p.enableAcousticSustain?p.sustainTypeNames.indexOf(e.stringSustainType):0,-1==this.stringSustainType&&(this.stringSustainType=0),2==this.type&&(this.chipNoise=p.chipNoises.findIndex((t=>t.name==e.wave)),"pink noise"==e.wave&&(this.chipNoise=p.chipNoises.findIndex((e=>"pink"==e.name))),"brownian noise"==e.wave&&(this.chipNoise=p.chipNoises.findIndex((e=>"brownian"==e.name))),-1==this.chipNoise&&(this.chipNoise=1));const f={custom:"note size",steady:"none","pluck 1":"twang 1","pluck 2":"twang 2","pluck 3":"twang 3"},m=e=>null!=f[e]?p.envelopes.dictionary[f[e]]:p.envelopes.dictionary[e];if(4==this.type&&null!=e.drums)for(let t=0;t<p.drumCount;t++){const i=e.drums[t];if(null!=i){if(this.drumsetEnvelopes[t]=p.envelopes.dictionary["twang 2"].index,null!=i.filterEnvelope){const e=m(i.filterEnvelope);null!=e&&(this.drumsetEnvelopes[t]=e.index)}if(null!=i.spectrum)for(let e=0;e<p.spectrumControlPoints;e++)this.drumsetSpectrumWaves[t].spectrum[e]=Math.max(0,Math.min(p.spectrumMax,Math.round(p.spectrumMax*+i.spectrum[e]/100)));this.drumsetSpectrumWaves[t].markCustomWaveDirty()}}if(0==this.type){const t={triangle:1,square:2,"pulse wide":3,"pulse narrow":4,sawtooth:5,"double saw":6,"double pulse":7,spiky:8,plateau:0},i={"10% pulse":22,"sunsoft bass":23,"loud pulse":24,sax:25,guitar:26,"atari bass":28,"atari pulse":29,"1% pulse":30,"curved sawtooth":31,viola:32,brass:33,"acoustic bass":34,lyre:35,"ramp pulse":36,piccolo:37,squaretooth:38,flatline:39,"pnryshk a (u5)":40,"pnryshk b (riff)":41},s={"shrill lute":42,"shrill bass":44,"nes pulse":45,"saw bass":46,euphonium:47,"shrill pulse":48,"r-sawtooth":49,recorder:50,"narrow saw":51,"deep square":52,"ring pulse":53,"double sine":54,contrabass:55,"double bass":56},n={"semi-square":63,"deep square":64,squaretal:40,"saw wide":65,"saw narrow ":66,"deep sawtooth":67,sawtal:68,pulse:69,"triple pulse":70,"high pulse":71,"deep pulse":72},a={test1:56,"pokey 4bit lfsr":57,"pokey 5step bass":58,"isolated spiky":59,"unnamed 1":60,"unnamed 2":61,"guitar string":75,intense:76,"buzz wave":77,"pokey square":57,"pokey bass":58,"banana wave":83,"test 1":84,"test 2":84,"real snare":85,"earthbound o. guitar":86},o={kick:87,snare:88,piano1:89,WOW:90,overdrive:91,trumpet:92,saxophone:93,orchestrahit:94,"detached violin":95,synth:96,sonic3snare:97,"come on":98,choir:99,overdriveguitar:100,flute:101,"legato violin":102,"tremolo violin":103,"amen break":104,"pizzicato violin":105,"tim allen grunt":106,tuba:107,loopingcymbal:108,standardkick:109,standardsnare:110,closedhihat:111,foothihat:112,openhihat:113,crashcymbal:114,pianoC4:115,"liver pad":116,marimba:117,susdotwav:118,wackyboxtts:119};this.chipWave=-1;const r=e.wave;for(const e of[t,i,s,n,a,o])if(-1==this.chipWave&&null!=e[r]&&null!=p.chipWaves[e[r]]){this.chipWave=e[r];break}if(-1==this.chipWave){const e=p.chipWaves.findIndex((e=>e.name==r));-1!=e&&(this.chipWave=e)}-1==this.chipWave&&(this.chipWave=1)}if(1==this.type||11==this.type){if(1==this.type)this.algorithm=p.algorithms.findIndex((t=>t.name==e.algorithm)),-1==this.algorithm&&(this.algorithm=0),this.feedbackType=p.feedbacks.findIndex((t=>t.name==e.feedbackType)),-1==this.feedbackType&&(this.feedbackType=0);else{if(this.algorithm6Op=p.algorithms6Op.findIndex((t=>t.name==e.algorithm)),-1==this.algorithm6Op&&(this.algorithm6Op=1),0==this.algorithm6Op?this.customAlgorithm.set(e.customAlgorithm.carrierCount,e.customAlgorithm.mods):this.customAlgorithm.fromPreset(this.algorithm6Op),this.feedbackType6Op=p.feedbacks6Op.findIndex((t=>t.name==e.feedbackType)),-1==this.feedbackType6Op){let t=w([{name:"2⟲ 3⟲",indices:[[],[2],[3],[],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4],[],[]]},{name:"4⟲ 5⟲",indices:[[],[],[],[4],[5],[]]},{name:"5⟲ 6⟲",indices:[[],[],[],[],[5],[6]]},{name:"1⟲ 6⟲",indices:[[1],[],[],[],[],[6]]},{name:"1⟲ 3⟲",indices:[[1],[],[3],[],[],[]]},{name:"1⟲ 4⟲",indices:[[1],[],[],[4],[],[]]},{name:"1⟲ 5⟲",indices:[[1],[],[],[],[5],[]]},{name:"4⟲ 6⟲",indices:[[],[],[],[4],[],[6]]},{name:"2⟲ 6⟲",indices:[[],[2],[],[],[],[6]]},{name:"3⟲ 6⟲",indices:[[],[],[3],[],[],[6]]},{name:"4⟲ 5⟲ 6⟲",indices:[[],[],[],[4],[5],[6]]},{name:"1⟲ 3⟲ 6⟲",indices:[[1],[],[3],[],[],[6]]},{name:"2→5",indices:[[],[],[],[],[2],[]]},{name:"2→6",indices:[[],[],[],[],[],[2]]},{name:"3→5",indices:[[],[],[],[],[3],[]]},{name:"3→6",indices:[[],[],[],[],[],[3]]},{name:"4→6",indices:[[],[],[],[],[],[4]]},{name:"5→6",indices:[[],[],[],[],[],[5]]},{name:"1→3→4",indices:[[],[],[1],[],[3],[]]},{name:"2→5→6",indices:[[],[],[],[],[2],[5]]},{name:"2→4→6",indices:[[],[],[],[2],[],[4]]},{name:"4→5→6",indices:[[],[],[],[],[4],[5]]},{name:"3→4→5→6",indices:[[],[],[],[3],[4],[5]]},{name:"2→3→4→5→6",indices:[[],[1],[2],[3],[4],[5]]},{name:"1→2→3→4→5→6",indices:[[],[1],[2],[3],[4],[5]]}]),i=t[t.findIndex((t=>t.name==e.feedbackType))].indices;null!=i?(this.feedbackType6Op=0,this.customFeedbackType.set(i)):this.feedbackType6Op=1}0==this.feedbackType6Op&&null!=e.customFeedback?this.customFeedbackType.set(e.customFeedback.mods):this.customFeedbackType.fromPreset(this.feedbackType6Op)}null!=e.feedbackAmplitude?this.feedbackAmplitude=Y(0,p.operatorAmplitudeMax+1,0|e.feedbackAmplitude):this.feedbackAmplitude=0;for(let t=0;t<p.operatorCount+(11==this.type?2:0);t++){const i=this.operators[t];let s;if(null!=e.operators&&(s=e.operators[t]),null==s&&(s={}),i.frequency=p.operatorFrequencies.findIndex((e=>e.name==s.frequency)),-1==i.frequency&&(i.frequency=0),null!=s.amplitude?i.amplitude=Y(0,p.operatorAmplitudeMax+1,0|s.amplitude):i.amplitude=0,null!=s.waveform){if("goldbox"==r&&t>3){i.waveform=0;continue}i.waveform=p.operatorWaves.findIndex((e=>e.name==s.waveform)),-1==i.waveform&&("square"==s.waveform?(i.waveform=p.operatorWaves.dictionary["pulse width"].index,i.pulseWidth=5):i.waveform=0)}else i.waveform=0;null!=s.pulseWidth?i.pulseWidth=0|s.pulseWidth:i.pulseWidth=5}}else if(9==this.type){if(e.customChipWave){for(let t=0;t<64;t++)this.customChipWave[t]=e.customChipWave[t];let t=0;for(let e=0;e<this.customChipWave.length;e++)t+=this.customChipWave[e];const i=t/this.customChipWave.length;let s=0,n=0;for(let e=0;e<this.customChipWave.length;e++)s+=n,n=this.customChipWave[e]-i,this.customChipWaveIntegral[e]=s;this.customChipWaveIntegral[64]=0}}else if(10==this.type&&null!=e.modChannels)for(let t=0;t<p.modCount;t++)this.modChannels[t]=e.modChannels[t],this.modInstruments[t]=e.modInstruments[t],this.modulators[t]=e.modSettings[t],null!=e.modFilterTypes&&(this.modFilterTypes[t]=e.modFilterTypes[t]),null!=e.modEnvelopeNumbers&&(this.modEnvelopeNumbers[t]=e.modEnvelopeNumbers[t]);if(10!=this.type){this.chord==p.chords.dictionary.arpeggio.index&&null!=e.arpeggioSpeed?this.arpeggioSpeed=e.arpeggioSpeed:this.arpeggioSpeed=s?9:12,null!=e.fastTwoNoteArp?this.fastTwoNoteArp=e.fastTwoNoteArp:this.fastTwoNoteArp=n,null!=e.clicklessTransition?this.clicklessTransition=e.clicklessTransition:this.clicklessTransition=!1,null!=e.aliases?this.aliases=e.aliases:"modbox"==r?(this.effects=8|this.effects,this.aliases=!0,this.distortion=0):this.aliases=!1,null!=e.noteFilterType&&(this.noteFilterType=e.noteFilterType),null!=e.noteSimpleCut&&(this.noteFilterSimpleCut=e.noteSimpleCut),null!=e.noteSimplePeak&&(this.noteFilterSimplePeak=e.noteSimplePeak),null!=e.noteFilter?this.noteFilter.fromJsonObject(e.noteFilter):this.noteFilter.reset();for(let t=0;t<p.filterMorphCount;t++)Array.isArray(e["noteSubFilters"+t])&&(this.noteSubFilters[t]=new Me,this.noteSubFilters[t].fromJsonObject(e["noteSubFilters"+t]));if(null!=e.eqFilterType&&(this.eqFilterType=e.eqFilterType),null!=e.eqSimpleCut&&(this.eqFilterSimpleCut=e.eqSimpleCut),null!=e.eqSimplePeak&&(this.eqFilterSimplePeak=e.eqSimplePeak),Array.isArray(e.eqFilter))this.eqFilter.fromJsonObject(e.eqFilter);else{this.eqFilter.reset();const t={},i=8e3,s=11,n=8;if(null!=e.filterCutoffHz?t.filterCutoff=Y(0,s,Math.round(s-1+2*Math.log((0|e.filterCutoffHz)/i)/Math.LN2)):t.filterCutoff=0==this.type?6:10,null!=e.filterResonance?t.filterResonance=Y(0,n,Math.round((n-1)*(0|e.filterResonance)/100)):t.filterResonance=0,t.filterEnvelope=m(e.filterEnvelope),t.pulseEnvelope=m(e.pulseEnvelope),t.feedbackEnvelope=m(e.feedbackEnvelope),Array.isArray(e.operators)){t.operatorEnvelopes=[];for(let i=0;i<p.operatorCount+(11==this.type?2:0);i++){let s;null!=e.operators[i]&&(s=m(e.operators[i].envelope)),t.operatorEnvelopes[i]=null!=s?s:p.envelopes.dictionary.none}}if(null!=e.filter){const i=[10,6,3,0,8,5,2],s=["none","none","none","none","decay 1","decay 2","decay 3"],n=["none","bright","medium","soft","decay bright","decay medium","decay soft"],a={"sustain sharp":1,"sustain medium":2,"sustain soft":3,"decay sharp":4};let o=null!=a[e.filter]?a[e.filter]:n.indexOf(e.filter);-1==o&&(o=0),t.filterCutoff=i[o],t.filterEnvelope=m(s[o]),t.filterResonance=0}this.convertLegacySettings(t,!0)}for(let t=0;t<p.filterMorphCount;t++)Array.isArray(e["eqSubFilters"+t])&&(this.eqSubFilters[t]=new Me,this.eqSubFilters[t].fromJsonObject(e["eqSubFilters"+t]));if(Array.isArray(e.envelopes)){const t=e.envelopes;for(let i=0;i<t.length&&!(this.envelopeCount>=p.maxEnvelopeCount);i++){const s=new ke(this.isNoiseInstrument);let n,a,o;s.fromJsonObject(t[i],r),n=null!=e.pitchEnvelopeStart&&null!=e.pitchEnvelopeStart?e.pitchEnvelopeStart:null!=e["pitchEnvelopeStart"+i]&&null!=e["pitchEnvelopeStart"+i]?e["pitchEnvelopeStart"+i]:s.pitchEnvelopeStart,a=null!=e.pitchEnvelopeEnd&&null!=e.pitchEnvelopeEnd?e.pitchEnvelopeEnd:null!=e["pitchEnvelopeEnd"+i]&&null!=e["pitchEnvelopeEnd"+i]?e["pitchEnvelopeEnd"+i]:s.pitchEnvelopeEnd,o=null!=e["envelopeInverse"+i]&&null!=e["envelopeInverse"+i]?e["envelopeInverse"+i]:null!=e.pitchEnvelopeInverse&&null!=e.pitchEnvelopeInverse&&"pitch"==p.envelopes[s.envelope].name?e.pitchEnvelopeInverse:s.inverse,this.addEnvelope(s.target,s.index,s.envelope,!0,n,a,o,s.perEnvelopeSpeed,s.perEnvelopeLowerBound,s.perEnvelopeUpperBound,s.steps,s.seed,s.waveform)}}}0===l&&(null!=e.isUsingAdvancedLoopControls?(this.isUsingAdvancedLoopControls=e.isUsingAdvancedLoopControls,this.chipWaveLoopStart=e.chipWaveLoopStart,this.chipWaveLoopEnd=e.chipWaveLoopEnd,this.chipWaveLoopMode=e.chipWaveLoopMode,this.chipWavePlayBackwards=e.chipWavePlayBackwards,this.chipWaveStartOffset=e.chipWaveStartOffset):(this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=p.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0))}getLargestControlPointCount(e){let t;if(e){t=this.noteFilter.controlPointCount;for(let e=0;e<p.filterMorphCount;e++)null!=this.noteSubFilters[e]&&this.noteSubFilters[e].controlPointCount>t&&(t=this.noteSubFilters[e].controlPointCount)}else{t=this.eqFilter.controlPointCount;for(let e=0;e<p.filterMorphCount;e++)null!=this.eqSubFilters[e]&&this.eqSubFilters[e].controlPointCount>t&&(t=this.eqSubFilters[e].controlPointCount)}return t}static frequencyFromPitch(e){return 440*Math.pow(2,(e-69)/12)}addEnvelope(e,t,i,s,n=0,a=-1,o=!1,r=-1,l=0,h=1,u=2,c=2,f=0){a=-1!=a?a:this.isNoiseInstrument?p.drumCount-1:p.maxPitch,r=-1!=r?r:s?1:p.envelopes[i].speed;let m=!1;if(this.supportsEnvelopeTarget(e,t)||(m=!0),this.envelopeCount>=p.maxEnvelopeCount)throw new Error;for(;this.envelopes.length<=this.envelopeCount;)this.envelopes[this.envelopes.length]=new ke(this.isNoiseInstrument);const d=this.envelopes[this.envelopeCount];d.target=m?p.instrumentAutomationTargets.dictionary.none.index:e,d.index=m?0:t,d.envelope=s?i:p.envelopes[i].type,d.pitchEnvelopeStart=n,d.pitchEnvelopeEnd=a,d.inverse=o,d.perEnvelopeSpeed=r,d.perEnvelopeLowerBound=l,d.perEnvelopeUpperBound=h,d.steps=u,d.seed=c,d.waveform=f,this.envelopeCount++}supportsEnvelopeTarget(e,t){const i=p.instrumentAutomationTargets[e];if(null==i.computeIndex&&"none"!=i.name)return!1;if(t>=i.maxCount)return!1;if(null!=i.compatibleInstruments&&-1==i.compatibleInstruments.indexOf(this.type))return!1;if(null!=i.effect&&0==(this.effects&1<<i.effect))return!1;if(i.isFilter){let e=this.noteFilter.controlPointCount;if(this.noteFilterType&&(e=1),t>=e)return!1}return"operatorFrequency"!=i.name&&"operatorAmplitude"!=i.name||!(t>=4+(11==this.type?2:0))}clearInvalidEnvelopeTargets(){for(let e=0;e<this.envelopeCount;e++){const t=this.envelopes[e].target,i=this.envelopes[e].index;this.supportsEnvelopeTarget(t,i)||(this.envelopes[e].target=p.instrumentAutomationTargets.dictionary.none.index,this.envelopes[e].index=0)}}getTransition(){return M(this.effects)?p.transitions[this.transition]:10==this.type?p.transitions.dictionary.interrupt:p.transitions.dictionary.normal}getFadeInSeconds(){return 4==this.type?0:He.fadeInSettingToSeconds(this.fadeIn)}getFadeOutTicks(){return 4==this.type?p.drumsetFadeOutTicks:He.fadeOutSettingToTicks(this.fadeOut)}getChord(){return k(this.effects)?p.chords[this.chord]:p.chords.dictionary.simultaneous}getDrumsetEnvelope(e){if(4!=this.type)throw new Error("Can't getDrumsetEnvelope() for non-drumset.");return p.envelopes[this.drumsetEnvelopes[e]]}}class Fe{constructor(){this.octave=0,this.instruments=[],this.patterns=[],this.bars=[],this.muted=!1,this.name=""}}class qe{constructor(e){this.scaleCustom=[],this.channels=[],this.limitDecay=4,this.limitRise=4e3,this.compressionThreshold=1,this.limitThreshold=1,this.compressionRatio=1,this.limitRatio=1,this.masterGain=1,this.inVolumeCap=0,this.outVolumeCap=0,this.eqFilter=new Me,this.eqFilterType=!1,this.eqFilterSimpleCut=p.filterSimpleCutRange-1,this.eqFilterSimplePeak=0,this.eqSubFilters=[],this.getNewNoteVolume=(e,t,i,s)=>{if(e&&null!=t&&null!=i&&null!=s){s=p.modCount-s-1;let e=p.modulators[this.channels[t].instruments[i].modulators[s]].newNoteVol,n=p.modulators.dictionary.tempo.index;return this.channels[t].instruments[i].modulators[s]==n&&(e=this.tempo-p.modulators[n].convertRealFactor),null!=e?e:6}return 6},this.getVolumeCap=(e,t,i,s)=>{if(e&&null!=t&&null!=i&&null!=s){s=p.modCount-s-1;let e=this.channels[t].instruments[i],n=p.modulators[e.modulators[s]],a=n.maxRawVol;return null!=a?("eq filter"!=n.name&&"note filter"!=n.name&&"song eq"!=n.name||(a=p.filterMorphCount-1,e.modFilterTypes[s]>0&&e.modFilterTypes[s]%2?a=p.filterFreqRange:e.modFilterTypes[s]>0&&(a=p.filterGainRange)),a):6}return 6},this.getVolumeCapForSetting=(e,t,i)=>{if(e){let e=p.modulators[t].maxRawVol;return null!=e?(null==i||"eq filter"!=p.modulators[t].name&&"note filter"!=p.modulators[t].name&&"song eq"!=p.modulators[t].name||(e=p.filterMorphCount-1,i>0&&i%2?e=p.filterFreqRange:i>0&&(e=p.filterGainRange)),e):p.noteSizeMax}return p.noteSizeMax},null!=e?this.fromBase64String(e):this.initToDefault(!0)}getChannelCount(){return this.pitchChannelCount+this.noiseChannelCount+this.modChannelCount}getMaxInstrumentsPerChannel(){return Math.max(this.layeredInstruments?p.layeredInstrumentCountMax:p.instrumentCountMin,this.patternInstruments?p.patternInstrumentCountMax:p.instrumentCountMin)}getMaxInstrumentsPerPattern(e){return this.getMaxInstrumentsPerPatternForChannel(this.channels[e])}getMaxInstrumentsPerPatternForChannel(e){return this.layeredInstruments?Math.min(p.layeredInstrumentCountMax,e.instruments.length):1}getChannelIsNoise(e){return e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount}getChannelIsMod(e){return e>=this.pitchChannelCount+this.noiseChannelCount}initToDefault(e=!0){this.scale=0,this.scaleCustom=[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0],this.key=0,this.octave=0,this.loopStart=0,this.loopLength=4,this.tempo=150,this.reverb=0,this.beatsPerBar=8,this.barCount=16,this.patternsPerChannel=8,this.rhythm=3,this.layeredInstruments=!1,this.patternInstruments=!1,this.eqFilter.reset();for(let e=0;e<p.filterMorphCount-1;e++)this.eqSubFilters[e]=null;if(this.title="Untitled",document.title=this.title+" - "+E.versionDisplayName,e){this.pitchChannelCount=3,this.noiseChannelCount=1,this.modChannelCount=1;for(let e=0;e<this.getChannelCount();e++){const t=e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount,i=e>=this.pitchChannelCount+this.noiseChannelCount;this.channels.length<=e&&(this.channels[e]=new Fe);const s=this.channels[e];s.octave=Math.max(3-e,0);for(let e=0;e<this.patternsPerChannel;e++)s.patterns.length<=e?s.patterns[e]=new ue:s.patterns[e].reset();s.patterns.length=this.patternsPerChannel;for(let e=0;e<p.instrumentCountMin;e++)s.instruments.length<=e&&(s.instruments[e]=new xe(t,i)),s.instruments[e].setTypeAndReset(i?10:t?2:0,t,i);s.instruments.length=p.instrumentCountMin;for(let e=0;e<this.barCount;e++)s.bars[e]=e<4?1:0;s.bars.length=this.barCount}this.channels.length=this.getChannelCount()}}toBase64String(){let e,t=[];t.push(qe.k),t.push(ae[qe.q]),t.push(78);var i=encodeURIComponent(this.title);t.push(ae[i.length>>6],ae[63&i.length]);for(let e=0;e<i.length;e++)t.push(i.charCodeAt(e));if(t.push(110,ae[this.pitchChannelCount],ae[this.noiseChannelCount],ae[this.modChannelCount]),t.push(115,ae[this.scale]),this.scale==p.scales.dictionary.Custom.index)for(var s=1;s<p.pitchesPerOctave;s++)t.push(ae[this.scaleCustom[s]?1:0]);if(t.push(107,ae[this.key],ae[this.octave-p.octaveMin]),t.push(108,ae[this.loopStart>>6],ae[63&this.loopStart]),t.push(101,ae[this.loopLength-1>>6],ae[this.loopLength-1&63]),t.push(116,ae[this.tempo>>6],ae[63&this.tempo]),t.push(97,ae[this.beatsPerBar-1]),t.push(103,ae[this.barCount-1>>6],ae[this.barCount-1&63]),t.push(106,ae[this.patternsPerChannel-1>>6],ae[this.patternsPerChannel-1&63]),t.push(114,ae[this.rhythm]),t.push(79),1!=this.compressionRatio||1!=this.limitRatio||4e3!=this.limitRise||4!=this.limitDecay||1!=this.limitThreshold||1!=this.compressionThreshold||1!=this.masterGain?(t.push(ae[Math.round(this.compressionRatio<1?10*this.compressionRatio:10+60*(this.compressionRatio-1))]),t.push(ae[Math.round(this.limitRatio<1?10*this.limitRatio:9+this.limitRatio)]),t.push(ae[this.limitDecay]),t.push(ae[Math.round((this.limitRise-2e3)/250)]),t.push(ae[Math.round(20*this.compressionThreshold)]),t.push(ae[Math.round(20*this.limitThreshold)]),t.push(ae[Math.round(50*this.masterGain)>>6],ae[63&Math.round(50*this.masterGain)])):t.push(ae[63]),t.push(99),null==this.eqFilter)t.push(ae[0]),console.log("Null EQ filter settings detected in toBase64String for song");else{t.push(ae[this.eqFilter.controlPointCount]);for(let e=0;e<this.eqFilter.controlPointCount;e++){const i=this.eqFilter.controlPoints[e];t.push(ae[i.type],ae[Math.round(i.freq)],ae[Math.round(i.gain)])}}let n=0;for(let e=0;e<p.filterMorphCount-1;e++)n|=+(null!=this.eqSubFilters[e+1])<<e;t.push(ae[n>>6],ae[63&n]);for(let e=0;e<p.filterMorphCount-1;e++)if(n&1<<e){t.push(ae[this.eqSubFilters[e+1].controlPointCount]);for(let i=0;i<this.eqSubFilters[e+1].controlPointCount;i++){const s=this.eqSubFilters[e+1].controlPoints[i];t.push(ae[s.type],ae[Math.round(s.freq)],ae[Math.round(s.gain)])}}t.push(85);for(let e=0;e<this.getChannelCount();e++){var a=encodeURIComponent(this.channels[e].name);t.push(ae[a.length>>6],ae[63&a.length]);for(let e=0;e<a.length;e++)t.push(a.charCodeAt(e))}if(t.push(105,ae[this.layeredInstruments<<1|this.patternInstruments]),this.layeredInstruments||this.patternInstruments)for(let e=0;e<this.getChannelCount();e++)t.push(ae[this.channels[e].instruments.length-p.instrumentCountMin]);t.push(111);for(let e=0;e<this.pitchChannelCount;e++)t.push(ae[this.channels[e].octave]);for(let e=0;e<this.getChannelCount();e++)for(let i=0;i<this.channels[e].instruments.length;i++){const s=this.channels[e].instruments[i];if(t.push(84,ae[s.type]),t.push(118,ae[s.volume+p.volumeRange/2>>6],ae[s.volume+p.volumeRange/2&63]),t.push(117,ae[s.preset>>6],ae[63&s.preset]),t.push(102),t.push(ae[+s.eqFilterType]),s.eqFilterType)t.push(ae[s.eqFilterSimpleCut]),t.push(ae[s.eqFilterSimplePeak]);else{if(null==s.eqFilter)t.push(ae[0]),console.log("Null EQ filter settings detected in toBase64String for channelIndex "+e+", instrumentIndex "+i);else{t.push(ae[s.eqFilter.controlPointCount]);for(let e=0;e<s.eqFilter.controlPointCount;e++){const i=s.eqFilter.controlPoints[e];t.push(ae[i.type],ae[Math.round(i.freq)],ae[Math.round(i.gain)])}}let n=0;for(let e=0;e<p.filterMorphCount-1;e++)n|=+(null!=s.eqSubFilters[e+1])<<e;t.push(ae[n>>6],ae[63&n]);for(let e=0;e<p.filterMorphCount-1;e++)if(n&1<<e){t.push(ae[s.eqSubFilters[e+1].controlPointCount]);for(let i=0;i<s.eqSubFilters[e+1].controlPointCount;i++){const n=s.eqSubFilters[e+1].controlPoints[i];t.push(ae[n.type],ae[Math.round(n.freq)],ae[Math.round(n.gain)])}}}if(t.push(113,ae[s.effects>>6],ae[63&s.effects]),P(s.effects))if(t.push(ae[+s.noteFilterType]),s.noteFilterType)t.push(ae[s.noteFilterSimpleCut]),t.push(ae[s.noteFilterSimplePeak]);else{if(null==s.noteFilter)t.push(ae[0]),console.log("Null note filter settings detected in toBase64String for channelIndex "+e+", instrumentIndex "+i);else{t.push(ae[s.noteFilter.controlPointCount]);for(let e=0;e<s.noteFilter.controlPointCount;e++){const i=s.noteFilter.controlPoints[e];t.push(ae[i.type],ae[Math.round(i.freq)],ae[Math.round(i.gain)])}}let n=0;for(let e=0;e<p.filterMorphCount-1;e++)n|=+(null!=s.noteSubFilters[e+1])<<e;t.push(ae[n>>6],ae[63&n]);for(let e=0;e<p.filterMorphCount-1;e++)if(n&1<<e){t.push(ae[s.noteSubFilters[e+1].controlPointCount]);for(let i=0;i<s.noteSubFilters[e+1].controlPointCount;i++){const n=s.noteSubFilters[e+1].controlPoints[i];t.push(ae[n.type],ae[Math.round(n.freq)],ae[Math.round(n.gain)])}}}if(M(s.effects)&&t.push(ae[s.transition]),k(s.effects)&&(t.push(ae[s.chord]),s.chord==p.chords.dictionary.arpeggio.index&&(t.push(ae[s.arpeggioSpeed]),t.push(ae[+s.fastTwoNoteArp]))),x(s.effects)&&t.push(ae[s.pitchShift]),F(s.effects)&&t.push(ae[s.detune-p.detuneMin>>6],ae[s.detune-p.detuneMin&63]),q(s.effects)&&(t.push(ae[s.vibrato]),s.vibrato==p.vibratos.length&&(t.push(ae[Math.round(25*s.vibratoDepth)]),t.push(ae[s.vibratoSpeed]),t.push(ae[Math.round(s.vibratoDelay)]),t.push(ae[s.vibratoType]))),I(s.effects)&&(t.push(ae[s.distortion]),t.push(ae[+s.aliases])),T(s.effects)&&t.push(ae[s.bitcrusherFreq],ae[s.bitcrusherQuantization]),D(s.effects)&&(t.push(ae[s.pan>>6],ae[63&s.pan]),t.push(ae[s.panDelay])),z(s.effects)&&t.push(ae[s.chorus]),H(s.effects)&&t.push(ae[s.echoSustain],ae[s.echoDelay]),O(s.effects)&&t.push(ae[s.reverb]),4!=s.type&&(t.push(100,ae[s.fadeIn],ae[s.fadeOut]),t.push(ae[+s.clicklessTransition])),5==s.type||7==s.type){t.push(72);const e=new le;for(let t=0;t<p.harmonicsControlPoints;t++)e.write(p.harmonicsControlPointBits,s.harmonicsWave.harmonics[t]);e.encodeBase64(t)}if(12==s.type){t.push(89);const e=new le;for(let t=0;t<p.additiveControlPoints;t++)e.write(p.additiveControlPointBits,s.additiveWave.additives[t]);e.encodeBase64(t);for(let e=0;e<p.additiveControlPoints;e++)t.push(ae[s.additiveWave.waveTypes[e]])}if(0==s.type){s.chipWave>186?(t.push(119,ae[s.chipWave-186]),t.push(ae[3])):s.chipWave>124?(t.push(119,ae[s.chipWave-124]),t.push(ae[2])):s.chipWave>62?(t.push(119,ae[s.chipWave-62]),t.push(ae[1])):(t.push(119,ae[s.chipWave]),t.push(ae[0])),t.push(104,ae[s.unison]),s.unison==p.unisons.length&&se(t,s.unisonVoices,s.unisonSpread,s.unisonOffset,s.unisonExpression,s.unisonSign),t.push(121);const e=Y(0,32,s.chipWaveLoopMode)<<1|(s.isUsingAdvancedLoopControls?1:0);t.push(ae[e]);const i=Y(0,32,0)<<1|(s.chipWavePlayBackwards?1:0);t.push(ae[i]),te(t,s.chipWaveLoopStart),te(t,s.chipWaveLoopEnd),te(t,s.chipWaveStartOffset)}else if(1==s.type||11==s.type){if(1==s.type)t.push(65,ae[s.algorithm]),t.push(70,ae[s.feedbackType]);else{if(t.push(65,ae[s.algorithm6Op]),0==s.algorithm6Op){t.push(67,ae[s.customAlgorithm.carrierCount]),t.push(113);for(let e=0;e<s.customAlgorithm.modulatedBy.length;e++){for(let i=0;i<s.customAlgorithm.modulatedBy[e].length;i++)t.push(ae[s.customAlgorithm.modulatedBy[e][i]]);t.push(82)}t.push(113)}if(t.push(70,ae[s.feedbackType6Op]),0==s.feedbackType6Op){t.push(113);for(let e=0;e<s.customFeedbackType.indices.length;e++){for(let i=0;i<s.customFeedbackType.indices[e].length;i++)t.push(ae[s.customFeedbackType.indices[e][i]]);t.push(82)}t.push(113)}}t.push(66,ae[s.feedbackAmplitude]),t.push(81);for(let e=0;e<(11==s.type?6:p.operatorCount);e++)t.push(ae[s.operators[e].frequency]);t.push(80);for(let e=0;e<(11==s.type?6:p.operatorCount);e++)t.push(ae[s.operators[e].amplitude]);t.push(82);for(let e=0;e<(11==s.type?6:p.operatorCount);e++)t.push(ae[s.operators[e].waveform]),2==s.operators[e].waveform&&t.push(ae[s.operators[e].pulseWidth])}else if(9==s.type){s.chipWave>186?(t.push(119,ae[s.chipWave-186]),t.push(ae[3])):s.chipWave>124?(t.push(119,ae[s.chipWave-124]),t.push(ae[2])):s.chipWave>62?(t.push(119,ae[s.chipWave-62]),t.push(ae[1])):(t.push(119,ae[s.chipWave]),t.push(ae[0])),t.push(104,ae[s.unison]),s.unison==p.unisons.length&&se(t,s.unisonVoices,s.unisonSpread,s.unisonOffset,s.unisonExpression,s.unisonSign),t.push(77);for(let e=0;e<64;e++)t.push(ae[s.customChipWave[e]+24])}else if(2==s.type)t.push(119,ae[s.chipNoise]),t.push(104,ae[s.unison]),s.unison==p.unisons.length&&se(t,s.unisonVoices,s.unisonSpread,s.unisonOffset,s.unisonExpression,s.unisonSign);else if(3==s.type){t.push(83);const e=new le;for(let t=0;t<p.spectrumControlPoints;t++)e.write(p.spectrumControlPointBits,s.spectrumWave.spectrum[t]);e.encodeBase64(t),t.push(104,ae[s.unison]),s.unison==p.unisons.length&&se(t,s.unisonVoices,s.unisonSpread,s.unisonOffset,s.unisonExpression,s.unisonSign)}else if(4==s.type){t.push(122);for(let e=0;e<p.drumCount;e++)t.push(ae[s.drumsetEnvelopes[e]]);t.push(83);const e=new le;for(let t=0;t<p.drumCount;t++)for(let i=0;i<p.spectrumControlPoints;i++)e.write(p.spectrumControlPointBits,s.drumsetSpectrumWaves[t].spectrum[i]);e.encodeBase64(t)}else if(5==s.type)t.push(104,ae[s.unison]),s.unison==p.unisons.length&&se(t,s.unisonVoices,s.unisonSpread,s.unisonOffset,s.unisonExpression,s.unisonSign);else if(6==s.type)t.push(87,ae[s.pulseWidth]),t.push(ae[s.decimalOffset>>6],ae[63&s.decimalOffset]),t.push(104,ae[s.unison]),s.unison==p.unisons.length&&se(t,s.unisonVoices,s.unisonSpread,s.unisonOffset,s.unisonExpression,s.unisonSign);else if(8==s.type)t.push(120,ae[s.supersawDynamism],ae[s.supersawSpread],ae[s.supersawShape]),t.push(87,ae[s.pulseWidth]),t.push(ae[s.decimalOffset>>6],ae[63&s.decimalOffset]);else if(7==s.type){if(p.stringSustainRange>32)throw new Error("Not enough bits to represent sustain value and type in same base64 character.");t.push(104,ae[s.unison]),s.unison==p.unisons.length&&se(t,s.unisonVoices,s.unisonSpread,s.unisonOffset,s.unisonExpression,s.unisonSign),t.push(73,ae[s.stringSustain|s.stringSustainType<<5])}else if(10==s.type);else if(12!=s.type)throw new Error("Unknown instrument type.");t.push(69,ae[s.envelopeCount]),t.push(ae[s.envelopeSpeed]),t.push(ae[+s.discreteEnvelope]);for(let e=0;e<s.envelopeCount;e++)t.push(ae[s.envelopes[e].target]),p.instrumentAutomationTargets[s.envelopes[e].target].maxCount>1&&t.push(ae[s.envelopes[e].index]),t.push(ae[s.envelopes[e].envelope]),"pitch"==p.newEnvelopes[s.envelopes[e].envelope].name?s.isNoiseInstrument?(t.push(ae[s.envelopes[e].pitchEnvelopeStart]),t.push(ae[s.envelopes[e].pitchEnvelopeEnd])):(t.push(ae[s.envelopes[e].pitchEnvelopeStart>>6],ae[63&s.envelopes[e].pitchEnvelopeStart]),t.push(ae[s.envelopes[e].pitchEnvelopeEnd>>6],ae[63&s.envelopes[e].pitchEnvelopeEnd])):"random"==p.newEnvelopes[s.envelopes[e].envelope].name?(t.push(ae[s.envelopes[e].steps]),t.push(ae[s.envelopes[e].seed])):"tremolo"==p.newEnvelopes[s.envelopes[e].envelope].name&&t.push(ae[s.envelopes[e].waveform]),t.push(ae[+s.envelopes[e].inverse]?ae[+s.envelopes[e].inverse]:ae[0]),"pitch"!=p.newEnvelopes[s.envelopes[e].envelope].name&&"note size"!=p.newEnvelopes[s.envelopes[e].envelope].name&&"punch"!=p.newEnvelopes[s.envelopes[e].envelope].name&&"none"!=p.newEnvelopes[s.envelopes[e].envelope].name&&t.push(ae[p.perEnvelopeSpeedToIndices[s.envelopes[e].perEnvelopeSpeed]]),t.push(ae[10*s.envelopes[e].perEnvelopeLowerBound]),t.push(ae[10*s.envelopes[e].perEnvelopeUpperBound])}t.push(98),e=new le;let o=0;for(;1<<o<this.patternsPerChannel+1;)o++;for(let t=0;t<this.getChannelCount();t++)for(let i=0;i<this.barCount;i++)e.write(o,this.channels[t].bars[i]);e.encodeBase64(t),t.push(112),e=new le;const r=new le,l=qe.getNeededBits(p.noteSizeMax);for(let t=0;t<this.getChannelCount();t++){const i=this.channels[t],s=this.getMaxInstrumentsPerPattern(t),n=this.getChannelIsNoise(t),a=this.getChannelIsMod(t),o=qe.getNeededBits(s-p.instrumentCountMin),h=qe.getNeededBits(i.instruments.length-1);if(a){const s=qe.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let n=0;n<i.instruments.length;n++){let i=this.channels[t].instruments[n];for(let t=0;t<p.modCount;t++){const n=i.modChannels[t],a=i.modInstruments[t],o=i.modulators[t],r=i.modFilterTypes[t],l=i.modEnvelopeNumbers[t];let h=p.modulators[o].forSong?2:0;o==p.modulators.dictionary.none.index&&(h=3),e.write(2,h),0!=h&&1!=h||(e.write(8,n),e.write(s,a)),3!=h&&e.write(6,o),"eq filter"!=p.modulators[i.modulators[t]].name&&"note filter"!=p.modulators[i.modulators[t]].name&&"song eq"!=p.modulators[i.modulators[t]].name||e.write(6,r),"individual envelope speed"==p.modulators[i.modulators[t]].name&&e.write(6,l)}}}const u=n||a?0:i.octave*p.pitchesPerOctave;let c=n?4:u;const f=a?[0,1,2,3,4,5]:n?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],m=[];for(let e=0;e<f.length;e++)f[e]+=u;for(const t of i.patterns){if(this.patternInstruments){const i=X(p.instrumentCountMin,s,t.instruments.length);e.write(o,i-p.instrumentCountMin);for(let s=0;s<i;s++)e.write(h,t.instruments[s])}if(t.notes.length>0){e.write(1,1);let i=0;for(const s of t.notes){s.start<i&&a&&(e.write(2,0),e.write(1,1),e.writePartDuration(i-s.start)),s.start>i&&(e.write(2,0),a&&e.write(1,0),e.writePartDuration(s.start-i)),r.clear(),1==s.pitches.length?r.write(1,0):(r.write(1,1),r.write(3,s.pitches.length-2)),r.writePinCount(s.pins.length-1),a?r.write(9,s.pins[0].size):r.write(l,s.pins[0].size);let t=0,n=s.pitches[0],o=n;const h=[];for(let e=1;e<s.pins.length;e++){const i=s.pins[e],p=n+i.interval;o!=p?(r.write(1,1),h.push(p),o=p):r.write(1,0),r.writePartDuration(i.time-t),t=i.time,a?r.write(9,i.size):r.write(l,i.size)}const p=String.fromCharCode.apply(null,r.encodeBase64([])),u=m.indexOf(p);-1==u?(e.write(2,1),e.concat(r)):(e.write(1,1),e.writeLongTail(0,0,u),m.splice(u,1)),m.unshift(p),m.length>10&&m.pop();const d=s.pitches.concat(h);for(let t=0;t<d.length;t++){const i=d[t],n=f.indexOf(i);if(-1==n){let t=0,s=c;if(s<i)for(;s!=i;)s++,-1==f.indexOf(s)&&t++;else for(;s!=i;)s--,-1==f.indexOf(s)&&t--;e.write(1,0),e.writePitchInterval(t)}else e.write(1,1),e.write(4,n),f.splice(n,1);f.unshift(i),f.length>16&&f.pop(),c=t==s.pitches.length-1?s.pitches[0]:i}0==s.start&&e.write(1,s.continuesLastPattern?1:0),i=s.end}i<this.beatsPerBar*p.partsPerBeat+ +a&&(e.write(2,0),a&&e.write(1,0),e.writePartDuration(this.beatsPerBar*p.partsPerBeat+ +a-i))}else e.write(1,0)}}let h=e.lengthBase64(),u=[];for(;h>0;)u.unshift(ae[63&h]),h>>=6;t.push(ae[u.length]),Array.prototype.push.apply(t,u),e.encodeBase64(t);const c=64e3;let f="";if(null!=E.customSamples&&E.customSamples.length>0&&(f="|"+E.customSamples.join("|")),t.length<c)return String.fromCharCode.apply(null,t)+f;{let e="";for(let i=0;i<t.length;i+=c)e+=String.fromCharCode.apply(null,t.slice(i,i+c));return e+f}}static P(e){return 0==e?e=1:1==e&&(e=0),p.envelopes[Y(0,p.envelopes.length,e)]}fromBase64String(e,t="auto"){if(null==e||""==e)return qe.I(),void this.initToDefault(!0);let i=0;for(;e.charCodeAt(i)<=32;)i++;if(35==e.charCodeAt(i)&&i++,123==e.charCodeAt(i))return void this.fromJsonObject(JSON.parse(0==i?e:e.substring(i)),t);const a=e.charCodeAt(i);let r=!1,l=!1,u=!1,c=!1,f=!1;106==a?(l=!0,i++):103==a?(u=!0,i++):117==a?(c=!0,i++):100==a?(l=!0,i++):97==a?(c=!0,i++):115==a?(f=!0,i++):r=!0;const m=oe[e.charCodeAt(i++)];if(r&&(-1==m||m>qe.T||m<qe.H))return;if(l&&(-1==m||m>qe.O||m<qe.R))return;if(u&&(-1==m||m>qe.N||m<qe.L))return;if(c&&(-1==m||m>qe.W||m<qe.V))return;if(f&&(-1==m||m>qe.q||m<qe.$))return;const d=m<2,y=m<3,v=m<4,b=m<5,g=m<6,S=m<7,C=m<8,R=m<9;this.initToDefault(r&&R||l&&b||v&&u);const A=r&&R||l&&b;let G=!1;if(f||c||u){var N=(e=e.replaceAll("%7C","|")).split("|");if(e=N.shift(),null==E.customSamples||E.customSamples.join(", ")!=N.join(", ")){qe.j();let e=!1,t=!1,i=!1;const a=[],r=[];s.statusTable={},s.urlTable={},s.totalSamples=0,s.samplesLoaded=0,o.dispatchEvent(new n(s.totalSamples,s.samplesLoaded));for(const n of N)if("legacysamples"===n.toLowerCase())e||(e=!0,a.push(n),h(0));else if("nintariboxsamples"===n.toLowerCase())t||(t=!0,a.push(n),h(1));else if("mariopaintboxsamples"===n.toLowerCase())i||(i=!0,a.push(n),h(2));else{const e=y;if(!qe.U(n,a,r,s,e))continue}if(a.length>0&&(E.customSamples=a),r.length>0){const e=w(r);E.presetCategories[E.presetCategories.length]={name:"Custom Sample Presets",presets:e,index:E.presetCategories.length}}}}if(y&&r){for(const e of this.channels)e.instruments[0].transition=p.transitions.dictionary.interrupt.index,e.instruments[0].effects|=1024;this.channels[3].instruments[0].chipNoise=0}let L=null;if(r&&R||l&&b||v&&u){L=[];for(let e=L.length;e<this.getChannelCount();e++){L[e]=[];for(let t=0;t<p.instrumentCountMin;t++)L[e][t]={}}}let W,V=0,B=0,$=-1,j=!1,U=!1;for(;i<e.length;)switch(W=e.charCodeAt(i++)){case 78:var Q=(oe[e.charCodeAt(i++)]<<6)+oe[e.charCodeAt(i++)];this.title=decodeURIComponent(e.substring(i,i+Q)),document.title=this.title+" - "+E.versionDisplayName,i+=Q;break;case 110:this.pitchChannelCount=oe[e.charCodeAt(i++)],this.noiseChannelCount=oe[e.charCodeAt(i++)],this.modChannelCount=r||l&&d?0:oe[e.charCodeAt(i++)],this.pitchChannelCount=X(p.pitchChannelCountMin,p.pitchChannelCountMax,this.pitchChannelCount),this.noiseChannelCount=X(p.noiseChannelCountMin,p.noiseChannelCountMax,this.noiseChannelCount),this.modChannelCount=X(p.modChannelCountMin,p.modChannelCountMax,this.modChannelCount);for(let e=this.channels.length;e<this.getChannelCount();e++)this.channels[e]=new Fe;if(this.channels.length=this.getChannelCount(),r&&R||l&&b||v&&u)for(let e=L.length;e<this.getChannelCount();e++){L[e]=[];for(let t=0;t<p.instrumentCountMin;t++)L[e][t]={}}break;case 115:if(this.scale=oe[e.charCodeAt(i++)],this.scale==p.scales.dictionary.Custom.index)for(var _=1;_<p.pitchesPerOctave;_++)this.scaleCustom[_]=1==oe[e.charCodeAt(i++)];r&&(this.scale=0);break;case 107:if(S&&r)this.key=Y(0,p.keys.length,11-oe[e.charCodeAt(i++)]),this.octave=0;else if(r||l)this.key=Y(0,p.keys.length,oe[e.charCodeAt(i++)]),this.octave=0;else if(u||y&&c){const t=oe[e.charCodeAt(i++)],[s,n]=ne(t);this.key=s,this.octave=n}else this.key=Y(0,p.keys.length,oe[e.charCodeAt(i++)]),this.octave=Y(p.octaveMin,p.octaveMax+1,oe[e.charCodeAt(i++)]+p.octaveMin);break;case 108:this.loopStart=b&&r?oe[e.charCodeAt(i++)]:(oe[e.charCodeAt(i++)]<<6)+oe[e.charCodeAt(i++)];break;case 101:this.loopLength=b&&r?oe[e.charCodeAt(i++)]:(oe[e.charCodeAt(i++)]<<6)+oe[e.charCodeAt(i++)]+1;break;case 116:this.tempo=v&&r?[95,120,151,190][oe[e.charCodeAt(i++)]]:S&&r?[88,95,103,111,120,130,140,151,163,176,190,206,222,240,259][oe[e.charCodeAt(i++)]]:oe[e.charCodeAt(i++)]<<6|oe[e.charCodeAt(i++)],this.tempo=Y(p.tempoMin,p.tempoMax+1,this.tempo);break;case 109:R&&r?(V=12*oe[e.charCodeAt(i++)],V=Y(0,p.reverbRange,V)):(l&&b||v&&u)&&(V=oe[e.charCodeAt(i++)],V=Y(0,p.reverbRange,V));break;case 97:this.beatsPerBar=y&&r?[6,7,8,9,10][oe[e.charCodeAt(i++)]]:oe[e.charCodeAt(i++)]+1,this.beatsPerBar=Math.max(p.beatsPerBarMin,Math.min(p.beatsPerBarMax,this.beatsPerBar));break;case 103:{const t=(oe[e.charCodeAt(i++)]<<6)+oe[e.charCodeAt(i++)]+1;this.barCount=X(p.barCountMin,p.barCountMax,t);for(let e=0;e<this.getChannelCount();e++){for(let t=this.channels[e].bars.length;t<this.barCount;t++)this.channels[e].bars[t]=t<4?1:0;this.channels[e].bars.length=this.barCount}}break;case 106:{let t;t=C&&r?oe[e.charCodeAt(i++)]+1:(oe[e.charCodeAt(i++)]<<6)+oe[e.charCodeAt(i++)]+1,this.patternsPerChannel=X(1,p.barCountMax,t);const s=this.getChannelCount();for(let e=0;e<s;e++){const t=this.channels[e].patterns;for(let e=t.length;e<this.patternsPerChannel;e++)t[e]=new ue;t.length=this.patternsPerChannel}}break;case 105:if(R&&r||l&&b||v&&u){const t=X(p.instrumentCountMin,p.patternInstrumentCountMax,oe[e.charCodeAt(i++)]+p.instrumentCountMin);this.layeredInstruments=!1,this.patternInstruments=t>1;for(let e=0;e<this.getChannelCount();e++){const i=e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount,s=e>=this.pitchChannelCount+this.noiseChannelCount;for(let n=this.channels[e].instruments.length;n<t;n++)this.channels[e].instruments[n]=new xe(i,s);if(this.channels[e].instruments.length=t,g&&r)for(let n=0;n<t;n++)this.channels[e].instruments[n].setTypeAndReset(i?2:0,i,s);for(let i=L[e].length;i<t;i++)L[e][i]={}}}else{const t=oe[e.charCodeAt(i++)];this.layeredInstruments=0!=(2&t),this.patternInstruments=0!=(1&t);for(let t=0;t<this.getChannelCount();t++){let s=1;(this.layeredInstruments||this.patternInstruments)&&(s=X(p.instrumentCountMin,this.getMaxInstrumentsPerChannel(),oe[e.charCodeAt(i++)]+p.instrumentCountMin));const n=this.channels[t],a=this.getChannelIsNoise(t),o=this.getChannelIsMod(t);for(let e=n.instruments.length;e<s;e++)n.instruments[e]=new xe(a,o);n.instruments.length=s}}break;case 114:if(c||f)this.rhythm=oe[e.charCodeAt(i++)];else{let t=oe[e.charCodeAt(i++)];this.rhythm=Y(0,p.rhythms.length,t+2),(l&&y||r)&&(this.rhythm!=p.rhythms.dictionary["÷3 (triplets)"].index&&this.rhythm!=p.rhythms.dictionary["÷6 (sextuplets)"].index||(j=!0),this.rhythm>=p.rhythms.dictionary["÷6 (sextuplets)"].index&&(U=!0))}break;case 111:if(y&&r){const t=oe[e.charCodeAt(i++)];this.channels[t].octave=Y(0,p.pitchOctaves,oe[e.charCodeAt(i++)]+1),t>=this.pitchChannelCount&&(this.channels[t].octave=0)}else if(R&&r||l&&b||v&&u)for(let t=0;t<this.getChannelCount();t++)this.channels[t].octave=Y(0,p.pitchOctaves,oe[e.charCodeAt(i++)]+1),t>=this.pitchChannelCount&&(this.channels[t].octave=0);else{for(let t=0;t<this.pitchChannelCount;t++)this.channels[t].octave=Y(0,p.pitchOctaves,oe[e.charCodeAt(i++)]);for(let e=this.pitchChannelCount;e<this.getChannelCount();e++)this.channels[e].octave=0}break;case 84:{$++,$>=this.channels[B].instruments.length&&(B++,$=0),X(0,this.channels.length-1,B);const t=this.channels[B].instruments[$];let s=X(0,12,oe[e.charCodeAt(i++)]);l&&b||v&&u?7!=s&&8!=s||(s+=2):(l&&g||u&&!v||c&&b)&&(8!=s&&9!=s&&10!=s||(s+=1)),t.setTypeAndReset(s,B>=this.pitchChannelCount&&B<this.pitchChannelCount+this.noiseChannelCount,B>=this.pitchChannelCount+this.noiseChannelCount),!(S&&r||d&&l)||0!=s&&9!=s&&6!=s||(t.aliases=!0,t.distortion=0,t.effects|=8),j&&(t.arpeggioSpeed=9),U&&(t.fastTwoNoteArp=!0),S&&r&&t.chord!=p.chords.dictionary.simultaneous.index&&(t.effects|=2048)}break;case 117:{const t=oe[e.charCodeAt(i++)]<<6|oe[e.charCodeAt(i++)];this.channels[B].instruments[$].preset=t,l&&b||v&&u?7==this.channels[B].instruments[$].preset&&(this.channels[B].instruments[$].preset=9,this.channels[B].instruments[$].type=9):l&&g||c&&b?(8==this.channels[B].instruments[$].preset&&(this.channels[B].instruments[$].preset=9,this.channels[B].instruments[$].type=9),10==this.channels[B].instruments[$].preset&&(this.channels[B].instruments[$].preset=11,this.channels[B].instruments[$].type=11)):(!f||f&&d)&&10==this.channels[B].instruments[$].preset&&(this.channels[B].instruments[$].preset=12,this.channels[B].instruments[$].type=12),r&&t==E.nameToPresetValue("grand piano 1")&&(this.channels[B].instruments[$].preset=E.nameToPresetValue("grand piano 3"))}break;case 119:if(y&&r){const t=[1,2,3,4,5,6,7,8,0],s=oe[e.charCodeAt(i++)],n=this.channels[s].instruments[0];n.chipWave=Y(0,p.chipWaves.length,0|t[oe[e.charCodeAt(i++)]]),n.convertLegacySettings(L[s][0],A)}else if(g&&r){const t=[1,2,3,4,5,6,7,8,0];for(let s=0;s<this.getChannelCount();s++)for(const n of this.channels[s].instruments)s>=this.pitchChannelCount?n.chipNoise=Y(0,p.chipNoises.length,oe[e.charCodeAt(i++)]):n.chipWave=Y(0,p.chipWaves.length,0|t[oe[e.charCodeAt(i++)]])}else if(S&&r){const t=[1,2,3,4,5,6,7,8,0];B>=this.pitchChannelCount?this.channels[B].instruments[$].chipNoise=Y(0,p.chipNoises.length,oe[e.charCodeAt(i++)]):this.channels[B].instruments[$].chipWave=Y(0,p.chipWaves.length,0|t[oe[e.charCodeAt(i++)]])}else if(2==this.channels[B].instruments[$].type)this.channels[B].instruments[$].chipNoise=Y(0,p.chipNoises.length,oe[e.charCodeAt(i++)]);else if(f||c){const t=oe[e.charCodeAt(i++)],s=oe[e.charCodeAt(i++)];this.channels[B].instruments[$].chipWave=Y(0,p.chipWaves.length,3==s?t+186:2==s?t+124:1==s?t+62:t)}else this.channels[B].instruments[$].chipWave=Y(0,p.chipWaves.length,oe[e.charCodeAt(i++)]);break;case 102:if(R&&r||b&&l||v&&u)if(S&&r){const t=[10,6,3,0,8,5,2],s=["none","none","none","none","decay 1","decay 2","decay 3"];if(y&&r){const n=oe[e.charCodeAt(i++)],a=this.channels[n].instruments[0],o=L[n][0],r=[1,3,4,5][Y(0,t.length,oe[e.charCodeAt(i++)])];o.filterCutoff=t[r],o.filterResonance=0,o.filterEnvelope=p.envelopes.dictionary[s[r]],a.convertLegacySettings(o,A)}else if(g&&r)for(let n=0;n<this.getChannelCount();n++)for(let a=0;a<this.channels[n].instruments.length;a++){const o=this.channels[n].instruments[a],r=L[n][a],l=Y(0,t.length,oe[e.charCodeAt(i++)]+1);n<this.pitchChannelCount?(r.filterCutoff=t[l],r.filterResonance=0,r.filterEnvelope=p.envelopes.dictionary[s[l]]):(r.filterCutoff=10,r.filterResonance=0,r.filterEnvelope=p.envelopes.dictionary.none),o.convertLegacySettings(r,A)}else{const n=Y(0,t.length,oe[e.charCodeAt(i++)]),a=this.channels[B].instruments[$],o=L[B][$];o.filterCutoff=t[n],o.filterResonance=0,o.filterEnvelope=p.envelopes.dictionary[s[n]],a.convertLegacySettings(o,A)}}else{const t=11,s=this.channels[B].instruments[$],n=L[B][$];n.filterCutoff=Y(0,t,oe[e.charCodeAt(i++)]),s.convertLegacySettings(n,A)}else{const t=this.channels[B].instruments[$];let s=oe[e.charCodeAt(i++)];if(r||0==s){t.eqFilterType=!1,(l||u||c||f)&&(s=oe[e.charCodeAt(i++)]);const n=s;t.eqFilter.controlPointCount=Y(0,p.filterMaxPoints+1,n);for(let e=t.eqFilter.controlPoints.length;e<t.eqFilter.controlPointCount;e++)t.eqFilter.controlPoints[e]=new we;for(let s=0;s<t.eqFilter.controlPointCount;s++){const n=t.eqFilter.controlPoints[s];n.type=Y(0,3,oe[e.charCodeAt(i++)]),n.freq=Y(0,p.filterFreqRange,oe[e.charCodeAt(i++)]),n.gain=Y(0,p.filterGainRange,oe[e.charCodeAt(i++)])}for(let e=t.eqFilter.controlPointCount;e<n;e++)i+=3;if(t.eqSubFilters[0]=t.eqFilter,l&&!b||u&&!v||c||f){let s=oe[e.charCodeAt(i++)]<<6|oe[e.charCodeAt(i++)];for(let n=0;n<p.filterMorphCount-1;n++)if(s&1<<n){const s=oe[e.charCodeAt(i++)];null==t.eqSubFilters[n+1]&&(t.eqSubFilters[n+1]=new Me),t.eqSubFilters[n+1].controlPointCount=Y(0,p.filterMaxPoints+1,s);for(let e=t.eqSubFilters[n+1].controlPoints.length;e<t.eqSubFilters[n+1].controlPointCount;e++)t.eqSubFilters[n+1].controlPoints[e]=new we;for(let s=0;s<t.eqSubFilters[n+1].controlPointCount;s++){const a=t.eqSubFilters[n+1].controlPoints[s];a.type=Y(0,3,oe[e.charCodeAt(i++)]),a.freq=Y(0,p.filterFreqRange,oe[e.charCodeAt(i++)]),a.gain=Y(0,p.filterGainRange,oe[e.charCodeAt(i++)])}for(let e=t.eqSubFilters[n+1].controlPointCount;e<s;e++)i+=3}}}else t.eqFilterType=!0,t.eqFilterSimpleCut=Y(0,p.filterSimpleCutRange,oe[e.charCodeAt(i++)]),t.eqFilterSimplePeak=Y(0,p.filterSimplePeakRange,oe[e.charCodeAt(i++)])}break;case 121:if(f||c)if(y&&c){const t=ie(e,i);i+=6;const s=e.slice(i,i+t);i+=t;const n=JSON.parse(atob(s));for(const e of n){const t=e.channel,i=e.instrument,s=e.info,n=this.channels[t].instruments[i];n.isUsingAdvancedLoopControls=s.isUsingAdvancedLoopControls,n.chipWaveLoopStart=s.chipWaveLoopStart,n.chipWaveLoopEnd=s.chipWaveLoopEnd,n.chipWaveLoopMode=s.chipWaveLoopMode,n.chipWavePlayBackwards=s.chipWavePlayBackwards,n.chipWaveStartOffset=s.chipWaveStartOffset}}else{const t=oe[e.charCodeAt(i++)],s=Boolean(1&t),n=t>>1,a=oe[e.charCodeAt(i++)],o=Boolean(1&a),r=ie(e,i);i+=6;const l=ie(e,i);i+=6;const h=ie(e,i);i+=6;const p=this.channels[B].instruments[$];p.isUsingAdvancedLoopControls=s,p.chipWaveLoopStart=r,p.chipWaveLoopEnd=l,p.chipWaveLoopMode=n,p.chipWavePlayBackwards=o,p.chipWaveStartOffset=h}else if(u&&!v&&g)"legacysamples"!=document.URL.substring(document.URL.length-13).toLowerCase()&&(G||(G=!0,p.willReloadForCustomSamples=!0,E.customSamples=["legacySamples"],h(0))),this.channels[B].instruments[$].chipWave=Y(0,p.chipWaves.length,oe[e.charCodeAt(i++)]+125);else if(R&&r||l&&b||v&&u){const t=8,s=this.channels[B].instruments[$],n=L[B][$];n.filterResonance=Y(0,t,oe[e.charCodeAt(i++)]),s.convertLegacySettings(n,A)}break;case 122:{const t=this.channels[B].instruments[$],s=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11];if(R&&r||b&&l||v&&u)if(4==t.type)for(let n=0;n<p.drumCount;n++){let a=oe[e.charCodeAt(i++)];(d&&u||!u&&!c&&!f)&&(a=s[a]),t.drumsetEnvelopes[n]=qe.P(a).index}else{const n=L[B][$];let a=oe[e.charCodeAt(i++)];(d&&u||!u&&!c&&!f)&&(a=s[a]),n.filterEnvelope=qe.P(a),t.convertLegacySettings(n,A)}else for(let n=0;n<p.drumCount;n++){let a=oe[e.charCodeAt(i++)];(d&&u||!u&&!c&&!f)&&(a=s[a]),!f&&a>=2&&a++,t.drumsetEnvelopes[n]=Y(0,p.envelopes.length,a)}}break;case 87:{const t=this.channels[B].instruments[$];if(t.pulseWidth=Y(0,p.pulseWidthRange+ +l+1,oe[e.charCodeAt(i++)]),r&&(t.pulseWidth=Math.round(Math.pow(.5,(7-t.pulseWidth)*p.pulseWidthStepPower)*p.pulseWidthRange)),R&&r||b&&l||v&&u){const s=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],n=L[B][$];let a=oe[e.charCodeAt(i++)];(d&&u||!u&&!c&&!f)&&(a=s[a]),n.pulseEnvelope=qe.P(a),t.convertLegacySettings(n,A)}(c&&!v||f)&&(t.decimalOffset=Y(0,100,(oe[e.charCodeAt(i++)]<<6)+oe[e.charCodeAt(i++)]))}break;case 73:{const t=this.channels[B].instruments[$],s=oe[e.charCodeAt(i++)];t.stringSustain=Y(0,p.stringSustainRange,31&s),t.stringSustainType=p.enableAcousticSustain?Y(0,2,s>>5):0}break;case 100:if(R&&r||l&&b||v&&u){const t=[{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3}];if(y&&r){const s=oe[e.charCodeAt(i++)],n=t[Y(0,t.length,oe[e.charCodeAt(i++)])],a=this.channels[s].instruments[0];a.fadeIn=He.secondsToFadeInSetting(n.fadeInSeconds),a.fadeOut=He.ticksToFadeOutSetting(n.fadeOutTicks),a.transition=p.transitions.dictionary[n.transition].index,a.transition!=p.transitions.dictionary.normal.index&&(a.effects|=1024)}else if(g&&r)for(let s=0;s<this.getChannelCount();s++)for(const n of this.channels[s].instruments){const s=t[Y(0,t.length,oe[e.charCodeAt(i++)])];n.fadeIn=He.secondsToFadeInSetting(s.fadeInSeconds),n.fadeOut=He.ticksToFadeOutSetting(s.fadeOutTicks),n.transition=p.transitions.dictionary[s.transition].index,n.transition!=p.transitions.dictionary.normal.index&&(n.effects|=1024)}else if(v&&!u&&!c&&!f||r){const s=t[Y(0,t.length,oe[e.charCodeAt(i++)])],n=this.channels[B].instruments[$];n.fadeIn=He.secondsToFadeInSetting(s.fadeInSeconds),n.fadeOut=He.ticksToFadeOutSetting(s.fadeOutTicks),n.transition=p.transitions.dictionary[s.transition].index,n.transition!=p.transitions.dictionary.normal.index&&(n.effects|=1024)}else{const s=t[Y(0,t.length,oe[e.charCodeAt(i++)])],n=this.channels[B].instruments[$];n.fadeIn=He.secondsToFadeInSetting(s.fadeInSeconds),n.fadeOut=He.ticksToFadeOutSetting(s.fadeOutTicks),n.transition=p.transitions.dictionary[s.transition].index,oe[e.charCodeAt(i++)]>0&&(n.legacyTieOver=!0),n.clicklessTransition=!!oe[e.charCodeAt(i++)],(n.transition!=p.transitions.dictionary.normal.index||n.clicklessTransition)&&(n.effects|=1024)}}else{const t=this.channels[B].instruments[$];t.fadeIn=Y(0,p.fadeInRange,oe[e.charCodeAt(i++)]),t.fadeOut=Y(0,p.fadeOutTicks.length,oe[e.charCodeAt(i++)]),(l||u||c||f)&&(t.clicklessTransition=!!oe[e.charCodeAt(i++)])}break;case 99:if(R&&r||l&&b||v&&u)if(S&&r)if(y&&r){const t=[0,3,2,0],s=["none","none","none","tremolo2"],n=oe[e.charCodeAt(i++)],a=Y(0,t.length,oe[e.charCodeAt(i++)]),o=this.channels[n].instruments[0],r=L[n][0];o.vibrato=t[a],null!=r.filterEnvelope&&0!=r.filterEnvelope.type||(r.filterEnvelope=p.envelopes.dictionary[s[a]],o.convertLegacySettings(r,A)),o.vibrato!=p.vibratos.dictionary.none.index&&(o.effects|=512)}else if(g&&r){const t=[0,1,2,3,0,0],s=["none","none","none","none","tremolo5","tremolo2"];for(let n=0;n<this.getChannelCount();n++)for(let a=0;a<this.channels[n].instruments.length;a++){const o=Y(0,t.length,oe[e.charCodeAt(i++)]),r=this.channels[n].instruments[a],h=L[n][a];r.vibrato=t[o],null!=h.filterEnvelope&&0!=h.filterEnvelope.type||(h.filterEnvelope=p.envelopes.dictionary[s[o]],r.convertLegacySettings(h,A)),r.vibrato!=p.vibratos.dictionary.none.index&&(r.effects|=512),(0!=V||l&&b||v&&u)&&!this.getChannelIsNoise(n)&&(r.effects|=1,r.reverb=V)}}else{const t=[0,1,2,3,0,0],s=["none","none","none","none","tremolo5","tremolo2"],n=Y(0,t.length,oe[e.charCodeAt(i++)]),a=this.channels[B].instruments[$],o=L[B][$];a.vibrato=t[n],null!=o.filterEnvelope&&0!=o.filterEnvelope.type||(o.filterEnvelope=p.envelopes.dictionary[s[n]],a.convertLegacySettings(o,A)),a.vibrato!=p.vibratos.dictionary.none.index&&(a.effects|=512),(0!=V||l&&b||v&&u)&&(a.effects|=1,a.reverb=V)}else{const t=this.channels[B].instruments[$],s=Y(0,p.vibratos.length+1,oe[e.charCodeAt(i++)]);t.vibrato=s,t.vibrato!=p.vibratos.dictionary.none.index&&(t.effects|=512),s==p.vibratos.length?(t.vibratoDepth=Y(0,p.modulators.dictionary["vibrato depth"].maxRawVol+1,oe[e.charCodeAt(i++)])/50,t.vibratoSpeed=Y(0,p.modulators.dictionary["vibrato speed"].maxRawVol+1,oe[e.charCodeAt(i++)]),t.vibratoDelay=Y(0,p.modulators.dictionary["vibrato delay"].maxRawVol+1,oe[e.charCodeAt(i++)])/2,t.vibratoType=Y(0,p.vibratoTypes.length,oe[e.charCodeAt(i++)]),t.effects|=512):(t.vibratoDepth=p.vibratos[t.vibrato].amplitude,t.vibratoSpeed=10,t.vibratoDelay=p.vibratos[t.vibrato].delayTicks/2,t.vibratoType=p.vibratos[t.vibrato].type)}else if(f&&!v){const t=oe[e.charCodeAt(i++)];this.eqFilter.controlPointCount=Y(0,p.filterMaxPoints+1,t);for(let e=this.eqFilter.controlPoints.length;e<this.eqFilter.controlPointCount;e++)this.eqFilter.controlPoints[e]=new we;for(let t=0;t<this.eqFilter.controlPointCount;t++){const s=this.eqFilter.controlPoints[t];s.type=Y(0,3,oe[e.charCodeAt(i++)]),s.freq=Y(0,p.filterFreqRange,oe[e.charCodeAt(i++)]),s.gain=Y(0,p.filterGainRange,oe[e.charCodeAt(i++)])}for(let e=this.eqFilter.controlPointCount;e<t;e++)i+=3;this.eqSubFilters[0]=this.eqFilter;let s=oe[e.charCodeAt(i++)]<<6|oe[e.charCodeAt(i++)];for(let t=0;t<p.filterMorphCount-1;t++)if(s&1<<t){const s=oe[e.charCodeAt(i++)];null==this.eqSubFilters[t+1]&&(this.eqSubFilters[t+1]=new Me),this.eqSubFilters[t+1].controlPointCount=Y(0,p.filterMaxPoints+1,s);for(let e=this.eqSubFilters[t+1].controlPoints.length;e<this.eqSubFilters[t+1].controlPointCount;e++)this.eqSubFilters[t+1].controlPoints[e]=new we;for(let s=0;s<this.eqSubFilters[t+1].controlPointCount;s++){const n=this.eqSubFilters[t+1].controlPoints[s];n.type=Y(0,3,oe[e.charCodeAt(i++)]),n.freq=Y(0,p.filterFreqRange,oe[e.charCodeAt(i++)]),n.gain=Y(0,p.filterGainRange,oe[e.charCodeAt(i++)])}for(let e=this.eqSubFilters[t+1].controlPointCount;e<s;e++)i+=3}}break;case 71:if(l&&b||v&&u){const t=this.channels[B].instruments[$];t.arpeggioSpeed=Y(0,p.modulators.dictionary["arp speed"].maxRawVol+1,oe[e.charCodeAt(i++)]),t.fastTwoNoteArp=!!oe[e.charCodeAt(i++)]}break;case 104:if(y&&r){const t=oe[e.charCodeAt(i++)];this.channels[t].instruments[0].unison=Y(0,p.unisons.length,oe[e.charCodeAt(i++)]);const s=this.channels[t].instruments[0];s.unisonVoices=p.unisons[s.unison].voices,s.unisonSpread=p.unisons[s.unison].spread,s.unisonOffset=p.unisons[s.unison].offset,s.unisonExpression=p.unisons[s.unison].expression,s.unisonSign=p.unisons[s.unison].sign}else if(g&&r)for(let t=0;t<this.getChannelCount();t++)for(const s of this.channels[t].instruments){const t=oe[e.charCodeAt(i++)];let n=Y(0,p.unisons.length,t);8==t&&(n=2,s.chord=3),s.unison=n,s.unisonVoices=p.unisons[s.unison].voices,s.unisonSpread=p.unisons[s.unison].spread,s.unisonOffset=p.unisons[s.unison].offset,s.unisonExpression=p.unisons[s.unison].expression,s.unisonSign=p.unisons[s.unison].sign}else if(S&&r){const t=oe[e.charCodeAt(i++)];let s=Y(0,p.unisons.length,t);8==t&&(s=2,this.channels[B].instruments[$].chord=3),this.channels[B].instruments[$].unison=s;const n=this.channels[B].instruments[$];n.unisonVoices=p.unisons[n.unison].voices,n.unisonSpread=p.unisons[n.unison].spread,n.unisonOffset=p.unisons[n.unison].offset,n.unisonExpression=p.unisons[n.unison].expression,n.unisonSign=p.unisons[n.unison].sign}else{this.channels[B].instruments[$].unison=Y(0,p.unisons.length+1,oe[e.charCodeAt(i++)]);const t=this.channels[B].instruments[$];if((c&&!b||f)&&t.unison==p.unisons.length){t.unisonVoices=oe[e.charCodeAt(i++)];const s=oe[e.charCodeAt(i++)],n=oe[e.charCodeAt(i++)]+63*(oe[e.charCodeAt(i++)]+63*oe[e.charCodeAt(i++)]),a=oe[e.charCodeAt(i++)],o=oe[e.charCodeAt(i++)]+63*(oe[e.charCodeAt(i++)]+63*oe[e.charCodeAt(i++)]),r=oe[e.charCodeAt(i++)],l=oe[e.charCodeAt(i++)]+63*oe[e.charCodeAt(i++)],h=oe[e.charCodeAt(i++)],p=oe[e.charCodeAt(i++)]+63*oe[e.charCodeAt(i++)];t.unisonSpread=n/1e3,0==s&&(t.unisonSpread*=-1),t.unisonOffset=o/1e3,0==a&&(t.unisonOffset*=-1),t.unisonExpression=l/1e3,0==r&&(t.unisonExpression*=-1),t.unisonSign=p/1e3,0==h&&(t.unisonSign*=-1)}else t.unisonVoices=p.unisons[t.unison].voices,t.unisonSpread=p.unisons[t.unison].spread,t.unisonOffset=p.unisons[t.unison].offset,t.unisonExpression=p.unisons[t.unison].expression,t.unisonSign=p.unisons[t.unison].sign}break;case 67:if(R&&r||l&&b||v&&u){const t=this.channels[B].instruments[$];t.chord=Y(0,p.chords.length,oe[e.charCodeAt(i++)]),t.chord!=p.chords.dictionary.simultaneous.index&&(t.effects|=2048)}break;case 113:{const t=this.channels[B].instruments[$];if(R&&r||l&&b||v&&u){t.effects=4095&oe[e.charCodeAt(i++)],0!=V||l&&b||v&&u?O(t.effects)&&(t.reverb=V):t.effects&=-2,t.effects|=4,t.vibrato!=p.vibratos.dictionary.none.index&&(t.effects|=512),t.detune!=p.detuneCenter&&(t.effects|=256),t.aliases?t.effects|=8:t.effects&=-9;const s=L[B][$];t.convertLegacySettings(s,A)}else{if(t.effects=oe[e.charCodeAt(i++)]<<6|oe[e.charCodeAt(i++)],P(t.effects)){let s=oe[e.charCodeAt(i++)];if(r||0==s){t.noteFilterType=!1,(l||u||c||f)&&(s=oe[e.charCodeAt(i++)]),t.noteFilter.controlPointCount=Y(0,p.filterMaxPoints+1,s);for(let e=t.noteFilter.controlPoints.length;e<t.noteFilter.controlPointCount;e++)t.noteFilter.controlPoints[e]=new we;for(let s=0;s<t.noteFilter.controlPointCount;s++){const n=t.noteFilter.controlPoints[s];n.type=Y(0,3,oe[e.charCodeAt(i++)]),n.freq=Y(0,p.filterFreqRange,oe[e.charCodeAt(i++)]),n.gain=Y(0,p.filterGainRange,oe[e.charCodeAt(i++)])}for(let e=t.noteFilter.controlPointCount;e<s;e++)i+=3;if(t.noteSubFilters[0]=t.noteFilter,l&&!b||u||c||f){let s=oe[e.charCodeAt(i++)]<<6|oe[e.charCodeAt(i++)];for(let n=0;n<p.filterMorphCount-1;n++)if(s&1<<n){const s=oe[e.charCodeAt(i++)];null==t.noteSubFilters[n+1]&&(t.noteSubFilters[n+1]=new Me),t.noteSubFilters[n+1].controlPointCount=Y(0,p.filterMaxPoints+1,s);for(let e=t.noteSubFilters[n+1].controlPoints.length;e<t.noteSubFilters[n+1].controlPointCount;e++)t.noteSubFilters[n+1].controlPoints[e]=new we;for(let s=0;s<t.noteSubFilters[n+1].controlPointCount;s++){const a=t.noteSubFilters[n+1].controlPoints[s];a.type=Y(0,3,oe[e.charCodeAt(i++)]),a.freq=Y(0,p.filterFreqRange,oe[e.charCodeAt(i++)]),a.gain=Y(0,p.filterGainRange,oe[e.charCodeAt(i++)])}for(let e=t.noteSubFilters[n+1].controlPointCount;e<s;e++)i+=3}}}else t.noteFilterType=!0,t.noteFilter.reset(),t.noteFilterSimpleCut=Y(0,p.filterSimpleCutRange,oe[e.charCodeAt(i++)]),t.noteFilterSimplePeak=Y(0,p.filterSimplePeakRange,oe[e.charCodeAt(i++)])}M(t.effects)&&(t.transition=Y(0,p.transitions.length,oe[e.charCodeAt(i++)])),k(t.effects)&&(t.chord=Y(0,p.chords.length,oe[e.charCodeAt(i++)]),t.chord==p.chords.dictionary.arpeggio.index&&(l||u||c||f)&&(t.arpeggioSpeed=oe[e.charCodeAt(i++)],t.fastTwoNoteArp=!!oe[e.charCodeAt(i++)])),x(t.effects)&&(t.pitchShift=Y(0,p.pitchShiftRange,oe[e.charCodeAt(i++)])),F(t.effects)&&(r?(t.detune=Y(p.detuneMin,p.detuneMax+1,oe[e.charCodeAt(i++)]),t.detune=Math.round((t.detune-9)*(Math.abs(t.detune-9)+1)/2+p.detuneCenter)):t.detune=Y(p.detuneMin,p.detuneMax+1,(oe[e.charCodeAt(i++)]<<6)+oe[e.charCodeAt(i++)])),q(t.effects)&&(t.vibrato=Y(0,p.vibratos.length+1,oe[e.charCodeAt(i++)]),t.vibrato==p.vibratos.length&&(l||u||c||f)?(t.vibratoDepth=Y(0,p.modulators.dictionary["vibrato depth"].maxRawVol+1,oe[e.charCodeAt(i++)])/25,t.vibratoSpeed=Y(0,p.modulators.dictionary["vibrato speed"].maxRawVol+1,oe[e.charCodeAt(i++)]),t.vibratoDelay=Y(0,p.modulators.dictionary["vibrato delay"].maxRawVol+1,oe[e.charCodeAt(i++)]),t.vibratoType=Y(0,p.vibratoTypes.length,oe[e.charCodeAt(i++)])):(t.vibratoDepth=p.vibratos[t.vibrato].amplitude,t.vibratoSpeed=10,t.vibratoDelay=p.vibratos[t.vibrato].delayTicks/2,t.vibratoType=p.vibratos[t.vibrato].type)),I(t.effects)&&(t.distortion=Y(0,p.distortionRange,oe[e.charCodeAt(i++)]),(l&&!b||u||c||f)&&(t.aliases=!!oe[e.charCodeAt(i++)])),T(t.effects)&&(t.bitcrusherFreq=Y(0,p.bitcrusherFreqRange,oe[e.charCodeAt(i++)]),t.bitcrusherQuantization=Y(0,p.bitcrusherQuantizationRange,oe[e.charCodeAt(i++)])),D(t.effects)&&(t.pan=Y(0,p.panMax+1,r?Math.round(oe[e.charCodeAt(i++)]*(p.panMax/8)):(oe[e.charCodeAt(i++)]<<6)+oe[e.charCodeAt(i++)]),(l&&!d||u||c||f)&&(t.panDelay=oe[e.charCodeAt(i++)])),z(t.effects)&&(t.chorus=r?2*Y(0,p.chorusRange/2+1,oe[e.charCodeAt(i++)]):Y(0,p.chorusRange,oe[e.charCodeAt(i++)])),H(t.effects)&&(t.echoSustain=Y(0,p.echoSustainRange,oe[e.charCodeAt(i++)]),t.echoDelay=Y(0,p.echoDelayRange,oe[e.charCodeAt(i++)])),O(t.effects)&&(t.reverb=Y(0,p.reverbRange,r?Math.round(oe[e.charCodeAt(i++)]*p.reverbRange/3):oe[e.charCodeAt(i++)]))}t.effects&=4095}break;case 118:if(y&&r){const t=oe[e.charCodeAt(i++)];this.channels[t].instruments[0].volume=Math.round(Y(-p.volumeRange/2,1,5*-oe[e.charCodeAt(i++)]))}else if(g&&r)for(let t=0;t<this.getChannelCount();t++)for(const s of this.channels[t].instruments)s.volume=Math.round(Y(-p.volumeRange/2,1,5*-oe[e.charCodeAt(i++)]));else if(S&&r){this.channels[B].instruments[$].volume=Math.round(Y(-p.volumeRange/2,1,5*-oe[e.charCodeAt(i++)]))}else if(r){this.channels[B].instruments[$].volume=Math.round(Y(-p.volumeRange/2,1,25*-oe[e.charCodeAt(i++)]/7))}else{this.channels[B].instruments[$].volume=Math.round(Y(-p.volumeRange/2,p.volumeRange/2+1,(oe[e.charCodeAt(i++)]<<6|oe[e.charCodeAt(i++)])-p.volumeRange/2))}break;case 76:if(R&&r){this.channels[B].instruments[$].pan=Y(0,p.panMax+1,oe[e.charCodeAt(i++)]*(p.panMax/8))}else if(l&&b||v&&u){const t=this.channels[B].instruments[$];t.pan=Y(0,p.panMax+1,(oe[e.charCodeAt(i++)]<<6)+oe[e.charCodeAt(i++)]),(l&&!y||u||c||f)&&(t.panDelay=oe[e.charCodeAt(i++)])}break;case 68:{const t=this.channels[B].instruments[$];(l&&b||v&&u)&&(t.detune=Y(p.detuneMin,p.detuneMax+1,4*((oe[e.charCodeAt(i++)]<<6)+oe[e.charCodeAt(i++)])),t.effects|=256)}break;case 77:{let t=this.channels[B].instruments[$];for(let s=0;s<64;s++)t.customChipWave[s]=Y(-24,25,oe[e.charCodeAt(i++)]-24);let s=0;for(let e=0;e<t.customChipWave.length;e++)s+=t.customChipWave[e];const n=s/t.customChipWave.length;let a=0,o=0;for(let e=0;e<t.customChipWave.length;e++)a+=o,o=t.customChipWave[e]-n,t.customChipWaveIntegral[e]=a;t.customChipWaveIntegral[64]=0}break;case 79:{let t=oe[e.charCodeAt(i++)];63==t?this.restoreLimiterDefaults():(this.compressionRatio=t<10?t/10:1+(t-10)/60,t=oe[e.charCodeAt(i++)],this.limitRatio=t<10?t/10:t-9,this.limitDecay=oe[e.charCodeAt(i++)],this.limitRise=250*oe[e.charCodeAt(i++)]+2e3,this.compressionThreshold=oe[e.charCodeAt(i++)]/20,this.limitThreshold=oe[e.charCodeAt(i++)]/20,this.masterGain=((oe[e.charCodeAt(i++)]<<6)+oe[e.charCodeAt(i++)])/50)}break;case 85:for(let t=0;t<this.getChannelCount();t++){var K;K=!v||u||c||f?(oe[e.charCodeAt(i++)]<<6)+oe[e.charCodeAt(i++)]:oe[e.charCodeAt(i++)],this.channels[t].name=decodeURIComponent(e.substring(i,i+K)),i+=K}break;case 65:{const t=this.channels[B].instruments[$];if(1==t.type)t.algorithm=Y(0,p.algorithms.length,oe[e.charCodeAt(i++)]);else if(t.algorithm6Op=Y(0,p.algorithms6Op.length,oe[e.charCodeAt(i++)]),t.customAlgorithm.fromPreset(t.algorithm6Op),67==e.charCodeAt(i)){let s=Y(1,p.operatorCount+2+1,oe[e.charCodeAt(i+1)]);i++;let n=[];if(113==e.charCodeAt(i+1)){i++;let a=0;for(i++;113!=e.charCodeAt(i);){n[a]=[];let t=0;for(;82!=e.charCodeAt(i);)n[a][t]=Y(1,p.operatorCount+3,oe[e.charCodeAt(i)]),t++,i++;a++,i++}t.customAlgorithm.set(s,n),i++}}if(R&&r||b&&l||v&&u){const e=L[B][$];t.convertLegacySettings(e,A)}}break;case 120:if(u&&!v&&g){const t=oe[e.charCodeAt(i++)];t+62>85&&"legacysamples"!=document.URL.substring(document.URL.length-13).toLowerCase()&&(G||(G=!0,p.willReloadForCustomSamples=!0,E.customSamples=["legacySamples"],h(0))),this.channels[B].instruments[$].chipWave=t+62>78?Y(0,p.chipWaves.length,t+63):t+62>67?Y(0,p.chipWaves.length,t+61):t+62==67?40:Y(0,p.chipWaves.length,t+62)}else{const t=this.channels[B].instruments[$];t.supersawDynamism=Y(0,p.supersawDynamismMax+1,oe[e.charCodeAt(i++)]),t.supersawSpread=Y(0,p.supersawSpreadMax+1,oe[e.charCodeAt(i++)]),t.supersawShape=Y(0,p.supersawShapeMax+1,oe[e.charCodeAt(i++)])}break;case 70:{const t=this.channels[B].instruments[$];if(1==t.type)t.feedbackType=Y(0,p.feedbacks.length,oe[e.charCodeAt(i++)]);else{t.feedbackType6Op=Y(0,p.feedbacks6Op.length,oe[e.charCodeAt(i++)]),t.customFeedbackType.fromPreset(t.feedbackType6Op);let s=[];if(113==e.charCodeAt(i)){let n=0;for(i++;113!=e.charCodeAt(i);){s[n]=[];let t=0;for(;82!=e.charCodeAt(i);)s[n][t]=Y(1,p.operatorCount+2,oe[e.charCodeAt(i)]),t++,i++;n++,i++}t.customFeedbackType.set(s),i++}}}break;case 66:this.channels[B].instruments[$].feedbackAmplitude=Y(0,p.operatorAmplitudeMax+1,oe[e.charCodeAt(i++)]);break;case 86:if(R&&r||b&&l||v&&u){const t=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],s=this.channels[B].instruments[$],n=L[B][$];let a=oe[e.charCodeAt(i++)];(d&&u||!u&&!c&&!f)&&(a=t[a]),n.feedbackEnvelope=qe.P(oe[a]),s.convertLegacySettings(n,A)}break;case 81:{const t=this.channels[B].instruments[$];if(y&&u){const s=[4,5,6,7,8,10,12,13,14,15,16,18,20,22,24,2,1,9,17,19,21,23,0,3];for(let n=0;n<(11==t.type?6:p.operatorCount);n++)t.operators[n].frequency=s[Y(0,s.length,oe[e.charCodeAt(i++)])]}else if(u||c||f)for(let s=0;s<(11==t.type?6:p.operatorCount);s++)t.operators[s].frequency=Y(0,p.operatorFrequencies.length,oe[e.charCodeAt(i++)]);else{const s=[4,5,6,7,8,10,12,13,14,15,16,18,20,23,27,2,1,9,17,19,21,23,0,3];for(let n=0;n<(11==t.type?6:p.operatorCount);n++)t.operators[n].frequency=s[Y(0,s.length,oe[e.charCodeAt(i++)])]}}break;case 80:{const t=this.channels[B].instruments[$];for(let s=0;s<(11==t.type?6:p.operatorCount);s++)t.operators[s].amplitude=Y(0,p.operatorAmplitudeMax+1,oe[e.charCodeAt(i++)])}break;case 69:{const t=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],s=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,58,59,60],n=this.channels[B].instruments[$];if(R&&r||b&&l||v&&u){const a=L[B][$];a.operatorEnvelopes=[];for(let o=0;o<(11==n.type?6:p.operatorCount);o++){let n=oe[e.charCodeAt(i++)];(d&&u||r)&&(n=t[n]),l&&(n=s[n]),a.operatorEnvelopes[o]=qe.P(n)}n.convertLegacySettings(a,A)}else{const a=Y(0,p.maxEnvelopeCount+1,oe[e.charCodeAt(i++)]);(l&&!g||c&&!b||f)&&(n.envelopeSpeed=Y(0,p.modulators.dictionary["envelope speed"].maxRawVol+1,oe[e.charCodeAt(i++)]),n.discreteEnvelope=!!oe[e.charCodeAt(i++)]);for(let o=0;o<a;o++){const a=Y(0,p.instrumentAutomationTargets.length,oe[e.charCodeAt(i++)]);let h=0;const c=p.instrumentAutomationTargets[a].maxCount;c>1&&(h=Y(0,c,oe[e.charCodeAt(i++)]));let m=oe[e.charCodeAt(i++)];(d&&u||r)&&(m=t[m]),l&&(m=s[m]),!f&&m>=2&&m++,(!f||v)&&m>=3&&m++;const b=Y(0,f&&!y?p.newEnvelopes.length:p.envelopes.length,m);let g=0,S=p.maxPitch,w=!1,M=f&&!y?p.newEnvelopes[b].speed:p.envelopes[b].speed,k=0,x=1,F=2,q=2,P=0;if(f&&!v&&("tremolo"==p.newEnvelopes[b].name?P=oe[e.charCodeAt(i++)]:"random"==p.newEnvelopes[b].name&&(F=oe[e.charCodeAt(i++)],q=oe[e.charCodeAt(i++)])),f&&!y){if("pitch"==p.newEnvelopes[b].name)if(n.isNoiseInstrument)g=oe[e.charCodeAt(i++)],S=oe[e.charCodeAt(i++)];else{let t=oe[e.charCodeAt(i++)];g=64*t+oe[e.charCodeAt(i++)],t=oe[e.charCodeAt(i++)],S=64*t+oe[e.charCodeAt(i++)]}w=1==oe[e.charCodeAt(i++)],"pitch"!=p.newEnvelopes[b].name&&"note size"!=p.newEnvelopes[b].name&&"punch"!=p.newEnvelopes[b].name&&"none"!=p.newEnvelopes[b].name&&(M=p.perEnvelopeSpeedIndices[oe[e.charCodeAt(i++)]]),k=oe[e.charCodeAt(i++)]/10,x=oe[e.charCodeAt(i++)]/10}if(n.addEnvelope(a,h,b,f&&!y,g,S,w,M,k,x,F,q,P),f&&y&&!d){let t=oe[e.charCodeAt(i++)];n.envelopes[o].pitchEnvelopeStart=64*t+oe[e.charCodeAt(i++)],t=oe[e.charCodeAt(i++)],n.envelopes[o].pitchEnvelopeEnd=64*t+oe[e.charCodeAt(i++)],n.envelopes[o].inverse=1==oe[e.charCodeAt(i++)]}}let o=0,h=p.maxPitch,m=!1;if(f&&d){let t=oe[e.charCodeAt(i++)];o=64*t+oe[e.charCodeAt(i++)],t=oe[e.charCodeAt(i++)],h=64*t+oe[e.charCodeAt(i++)],m=1===oe[e.charCodeAt(i++)];for(let e=0;e<a;e++)n.envelopes[e].pitchEnvelopeStart=o,n.envelopes[e].pitchEnvelopeEnd=h,n.envelopes[e].inverse="pitch"==p.envelopes[n.envelopes[e].envelope].name&&m}}}break;case 82:{const t=this.channels[B].instruments[$];if(y&&u)for(let s=0;s<p.operatorCount;s++){const n=[0,1,3,2,2,2,4,5],a=Y(0,n.length,oe[e.charCodeAt(i++)]);3==a?t.operators[s].pulseWidth=5:4==a?t.operators[s].pulseWidth=4:5==a&&(t.operators[s].pulseWidth=6),t.operators[s].waveform=n[a]}else for(let s=0;s<(11==t.type?6:p.operatorCount);s++){if(l){const n=[0,1,3,2,4,5];t.operators[s].waveform=n[Y(0,p.operatorWaves.length,oe[e.charCodeAt(i++)])]}else t.operators[s].waveform=Y(0,p.operatorWaves.length,oe[e.charCodeAt(i++)]);2==t.operators[s].waveform&&(t.operators[s].pulseWidth=Y(0,p.pwmOperatorWaves.length,oe[e.charCodeAt(i++)]))}}break;case 83:{const t=this.channels[B].instruments[$];if(3==t.type){const s=Math.ceil(p.spectrumControlPoints*p.spectrumControlPointBits/6),n=new re(e,i,i+s);for(let e=0;e<p.spectrumControlPoints;e++)t.spectrumWave.spectrum[e]=n.read(p.spectrumControlPointBits);t.spectrumWave.markCustomWaveDirty(),i+=s}else{if(4!=t.type)throw new Error("Unhandled instrument type for spectrum song tag code.");{const s=Math.ceil(p.drumCount*p.spectrumControlPoints*p.spectrumControlPointBits/6),n=new re(e,i,i+s);for(let e=0;e<p.drumCount;e++){for(let i=0;i<p.spectrumControlPoints;i++)t.drumsetSpectrumWaves[e].spectrum[i]=n.read(p.spectrumControlPointBits);t.drumsetSpectrumWaves[e].markCustomWaveDirty()}i+=s}}}break;case 72:{const t=this.channels[B].instruments[$],s=Math.ceil(p.harmonicsControlPoints*p.harmonicsControlPointBits/6),n=new re(e,i,i+s);for(let e=0;e<p.harmonicsControlPoints;e++)t.harmonicsWave.harmonics[e]=n.read(p.harmonicsControlPointBits);t.harmonicsWave.markCustomWaveDirty(),i+=s}break;case 89:{const t=this.channels[B].instruments[$],s=Math.ceil(p.additiveControlPoints*p.additiveControlPointBits/6),n=new re(e,i,i+s);for(let e=0;e<p.additiveControlPoints;e++)t.additiveWave.additives[e]=n.read(p.additiveControlPointBits);t.additiveWave.markCustomWaveDirty(),i+=s;for(let s=0;s<p.additiveControlPoints;s++)t.additiveWave.waveTypes[s]=oe[e.charCodeAt(i++)]}break;case 88:if(l&&b||u&&v){const t=this.channels[B].instruments[$];t.aliases=!!oe[e.charCodeAt(i++)],t.aliases&&(t.distortion=0,t.effects|=8)}else if(c||f){this.channels[B].instruments[$].decimalOffset=Y(0,51,oe[e.charCodeAt(i++)])}break;case 98:{let t;if(y&&r){const s=oe[e.charCodeAt(i++)],n=oe[e.charCodeAt(i++)];t=Math.ceil(.5*n);const a=new re(e,i,i+t);for(let e=0;e<n;e++)this.channels[s].bars[e]=a.read(3)+1}else if(b&&r){let s=0;for(;1<<s<this.patternsPerChannel;)s++;t=Math.ceil(this.getChannelCount()*this.barCount*s/6);const n=new re(e,i,i+t);for(let e=0;e<this.getChannelCount();e++)for(let t=0;t<this.barCount;t++)this.channels[e].bars[t]=n.read(s)+1}else{let s=0;for(;1<<s<this.patternsPerChannel+1;)s++;t=Math.ceil(this.getChannelCount()*this.barCount*s/6);const n=new re(e,i,i+t);for(let e=0;e<this.getChannelCount();e++)for(let t=0;t<this.barCount;t++)this.channels[e].bars[t]=n.read(s)}i+=t}break;case 112:{let t,s=0,n=!(v&&l||r),a=n?4:3,o=n?16:8;if(y&&r)t=oe[e.charCodeAt(i++)],i++,s=oe[e.charCodeAt(i++)],s<<=6,s+=oe[e.charCodeAt(i++)];else{t=0;let n=X(1,4,oe[e.charCodeAt(i++)]);for(;n>0;)s<<=6,s+=oe[e.charCodeAt(i++)],n--}const h=new re(e,i,i+s);i+=s;const m=qe.getNeededBits(p.noteSizeMax);let d=-1,g=-1,w=-1;const M=l,k=30;for(;;){const e=this.channels[t],i=this.getChannelIsNoise(t),s=this.getChannelIsMod(t),x=this.getMaxInstrumentsPerPattern(t),F=qe.getNeededBits(x-p.instrumentCountMin),q=qe.getNeededBits(e.instruments.length-1);if(s){let i=b&&l||v&&u;const s=i?q:qe.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let n=0;n<e.instruments.length;n++){let a=e.instruments[n];for(let e=0;e<p.modCount;e++){let o=h.read(2);switch(o){case 0:a.modChannels[e]=Y(0,this.pitchChannelCount+this.noiseChannelCount+1,h.read(8)),a.modInstruments[e]=Y(0,this.channels[a.modChannels[e]].instruments.length+2,h.read(s));break;case 1:a.modChannels[e]=this.pitchChannelCount+Y(0,this.noiseChannelCount+1,h.read(8)),a.modInstruments[e]=Y(0,this.channels[a.modChannels[e]].instruments.length+2,h.read(q));break;case 2:a.modChannels[e]=-1;break;case 3:a.modChannels[e]=-2}if(3!=o&&(a.modulators[e]=h.read(6)),i||"eq filter"!=p.modulators[a.modulators[e]].name&&"note filter"!=p.modulators[a.modulators[e]].name&&"song eq"!=p.modulators[a.modulators[e]].name||(a.modFilterTypes[e]=h.read(6)),"individual envelope speed"==p.modulators[a.modulators[e]].name&&(a.modEnvelopeNumbers[e]=h.read(6)),i&&a.modChannels[e]>=0){let t=P(this.channels[a.modChannels[e]].instruments[a.modInstruments[e]].effects);7==a.modulators[e]?(a.modulators[e]=t?p.modulators.dictionary["note filt cut"].index:p.modulators.dictionary["eq filt cut"].index,a.modFilterTypes[e]=1):8==a.modulators[e]&&(a.modulators[e]=t?p.modulators.dictionary["note filt peak"].index:p.modulators.dictionary["eq filt peak"].index,a.modFilterTypes[e]=2)}else i&&a.modulators[e]==p.modulators.dictionary["song reverb"].index&&(d=t,g=n,w=e);i&&12!=p.modulators[a.modulators[e]].associatedEffect&&(this.channels[a.modChannels[e]].instruments[a.modInstruments[e]].effects|=1<<p.modulators[a.modulators[e]].associatedEffect)}}}const I=[];for(let t=0;t<e.instruments.length;t++){I[t]=[];for(let i=0;i<p.modCount;i++)I[t][p.modCount-1-i]=1+3*+((b&&l||v&&u)&&s&&e.instruments[t].modulators[i]==p.modulators.dictionary.detune.index)}const T=i||s?0:12*e.octave;let D=i||s?4:T;const z=s?[0,1,2,3,4,5]:i?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],H=[];for(let e=0;e<z.length;e++)z[e]+=T;for(let t=0;t<this.patternsPerChannel;t++){const i=e.patterns[t];if(R&&r||b&&l||v&&u)i.instruments[0]=X(0,e.instruments.length-1,h.read(q)),i.instruments.length=1;else if(this.patternInstruments){const t=X(p.instrumentCountMin,x,h.read(F)+p.instrumentCountMin);for(let n=0;n<t;n++)i.instruments[n]=X(0,e.instruments.length-1+2*+s,h.read(q));i.instruments.length=t}else i.instruments[0]=0,i.instruments.length=p.instrumentCountMin;if(!(r&&y||0!=h.read(1))){i.notes.length=0;continue}let d=0;const g=i.notes;let w=0;for(;d<this.beatsPerBar*p.partsPerBeat+ +s;){const t=1==h.read(1);let y=!1,x=0;if(t?x=X(0,H.length-1,h.readLongTail(0,0)):y=1==h.read(1),t||y){let y,F,q;if(t)y=H[x],H.splice(x,1);else{if(y={},n)1==h.read(1)?y.pitchCount=h.read(3)+2:y.pitchCount=1;else for(y.pitchCount=1;y.pitchCount<4&&1==h.read(1);)y.pitchCount++;y.pinCount=h.readPinCount(),y.initialSize=r?2*h.read(2):s?h.read(9):h.read(m),y.pins=[],y.length=0,y.bendCount=0;for(let e=0;e<y.pinCount;e++){let e={};e.pitchBend=1==h.read(1),e.pitchBend&&y.bendCount++,y.length+=S&&r?h.readLegacyPartDuration()*p.partsPerBeat/p.rhythms[this.rhythm].stepsPerBeat:h.readPartDuration(),e.time=y.length,e.size=r?2*h.read(2):s?h.read(9):h.read(m),y.pins.push(e)}}H.unshift(y),H.length>10&&H.pop(),g.length<=w?(F=new pe(0,d,d+y.length,y.initialSize),g[w++]=F):(F=g[w++],F.start=d,F.end=d+y.length,F.pins[0].size=y.initialSize);let P=0;const T=[];for(let e=0;e<y.pitchCount+y.bendCount;e++){if(1==h.read(1)){const e=X(0,z.length-1,h.read(a));q=z[e],z.splice(e,1)}else{q=D;let e=h.readPitchInterval();for(;e>0;){for(q++;-1!=z.indexOf(q);)q++;e--}for(;e<0;){for(q--;-1!=z.indexOf(q);)q--;e++}}z.unshift(q),z.length>o&&z.pop(),e<y.pitchCount?F.pitches[P++]=q:T.push(q),D=e==y.pitchCount-1?F.pitches[0]:q}F.pitches.length=P,T.unshift(F.pitches[0]);const O=s&&e.instruments[i.instruments[0]].modulators[p.modCount-1-F.pitches[0]]===p.modulators.dictionary.tempo.index;let E=0;M&&O&&(E=k-p.tempoMin),s&&(F.pins[0].size+=E,F.pins[0].size*=I[i.instruments[0]][F.pitches[0]]);let C=1;for(const e of y.pins){e.pitchBend&&T.shift();const t=T[0]-F.pitches[0];if(F.pins.length<=C)F.pins[C++]=he(t,e.time,s?e.size*I[i.instruments[0]][F.pitches[0]]+E:e.size);else{const n=F.pins[C++];n.interval=t,n.time=e.time,n.size=s?e.size*I[i.instruments[0]][F.pitches[0]]+E:e.size}}F.pins.length=C,0==F.start&&(F.continuesLastPattern=R&&r||b&&l||v&&u?!(v&&!c&&!f||r)&&e.instruments[i.instruments[0]].legacyTieOver:1==h.read(1)),d=X(0,this.beatsPerBar*p.partsPerBeat,F.end)}else if(s){const e=1==h.read(1),t=h.readPartDuration();e?d-=t:d+=t}else{d+=S&&r?h.readLegacyPartDuration()*p.partsPerBeat/p.rhythms[this.rhythm].stepsPerBeat:h.readPartDuration()}}g.length=w}if(y&&r)break;if(t++,t>=this.getChannelCount())break}if((l&&b||v&&u)&&w>=0)for(let e=0;e<this.channels.length;e++)for(let t=0;t<this.channels[e].instruments.length;t++){const i=this.channels[e].instruments[t];if(O(i.effects)&&(i.reverb=p.reverbRange-1),d==e&&g==t){const t=this.channels[e].bars[0];if(t>0){const i=this.channels[e].patterns[t-1];let s=6;for(const e of i.notes)e.pitches[0]==p.modCount-1-w&&(s=Math.min(s,e.start));s>0&&i.notes.push(new pe(p.modCount-1-w,0,s,V))}else if(this.channels[e].patterns.length<p.barCountMax){const t=new ue;if(this.channels[e].patterns.push(t),this.channels[e].bars[0]=this.channels[e].patterns.length,this.channels[e].patterns.length>this.patternsPerChannel){for(let e=0;e<this.channels.length;e++)this.channels[e].patterns.length<=this.patternsPerChannel&&this.channels[e].patterns.push(new ue);this.patternsPerChannel++}t.instruments.length=1,t.instruments[0]=g,t.notes.length=0,t.notes.push(new pe(p.modCount-1-w,0,6,V))}}}}break;default:throw new Error("Unrecognized song tag code "+String.fromCharCode(W)+" at index "+(i-1)+" "+e.substring(0,i))}p.willReloadForCustomSamples&&(window.location.hash=this.toBase64String(),setTimeout((()=>{location.reload()}),50))}static _(e){try{return Boolean(new URL(e))}catch(e){return!1}}static U(e,t,i,s,n){const a=p.chipWaves[0].samples,o=p.rawRawChipWaves[0].samples,l=t.length;t.push(e);const h=p.chipWaves.length;let u=e,c=44100,f=!1,m=60,d=!1,y=null,v=null,b=null,g=null,S=!1,w=!1,M=e.indexOf("!"),k=-1;if(0===M&&(k=e.indexOf("!",M+1),-1!==k)){const F=e.slice(M+1,k).split(",");for(const q of F){const P=q.charAt(0),I=q.slice(1,q.length);"s"===P?c=Y(8e3,96001,Z(I,44100)):"r"===P?m=Z(I,60):"p"===P?f=!0:"a"===P?(y=ee(I,null),null!=y&&(d=!0)):"b"===P?(v=ee(I,null),null!=v&&(d=!0)):"c"===P?(b=ee(I,null),null!=b&&(d=!0)):"d"===P?(g=ee(I,null),null!=g&&(g=Y(0,4,g),d=!0)):"e"===P&&(S=!0,d=!0)}u=e.slice(k+1,e.length),w=!0}let x=null;if(!qe._(u))return alert(e+" is not a valid url"),!1;if(x=new URL(u),n&&!w&&null!=x){function T(){u=e.slice(0,e.indexOf(",")),x=new URL(u),c=Y(8e3,96001,Z(e.slice(e.indexOf(",")+1),44100))}function D(){u=e.slice(0,e.indexOf("!")),x=new URL(u),m=Z(e.slice(e.indexOf("!")+1),60)}-1!=e.indexOf("@")&&(u=e.replaceAll("@",""),x=new URL(u),f=!0),-1!=e.indexOf(",")&&-1!=e.indexOf("!")?e.indexOf(",")<e.indexOf("!")?(D(),T()):(T(),D()):(-1!=e.indexOf(",")&&T(),-1!=e.indexOf("!")&&D())}if(null!=x){let z=u;const H=[];let O;44100!==c&&H.push("s"+c),60!==m&&H.push("r"+m),f&&H.push("p"),d&&(null!=y&&H.push("a"+y),null!=v&&H.push("b"+v),null!=b&&H.push("c"+b),null!=g&&H.push("d"+g),S&&H.push("e")),H.length>0&&(z="!"+H.join(",")+"!"+u),t[l]=z,O=decodeURIComponent(x.pathname.replace(/^([^\/]*\/)+/,""));const E=1;p.chipWaves[h]={name:O,expression:E,isCustomSampled:!0,isPercussion:f,rootKey:m,sampleRate:c,samples:a,index:h},p.rawChipWaves[h]={name:O,expression:E,isCustomSampled:!0,isPercussion:f,rootKey:m,sampleRate:c,samples:o,index:h},p.rawRawChipWaves[h]={name:O,expression:E,isCustomSampled:!0,isPercussion:f,rootKey:m,sampleRate:c,samples:o,index:h};const C={type:"chip",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"harmony",wave:O,unison:"none",envelopes:[]};d&&(C.isUsingAdvancedLoopControls=!0,C.chipWaveLoopStart=null!=y?y:0,C.chipWaveLoopEnd=null!=v?v:2,C.chipWaveLoopMode=null!=g?g:0,C.chipWavePlayBackwards=S,C.chipWaveStartOffset=null!=b?b:0);const R={index:0,name:O,midiProgram:80,settings:C};if(i.push(R),!p.willReloadForCustomSamples){r(u,h,C,{isUsingAdvancedLoopControls:d,chipWaveLoopStart:y,chipWaveLoopEnd:v,chipWaveLoopMode:g,chipWavePlayBackwards:S,chipWaveStartOffset:b},c)}s.statusTable[h]=0,s.urlTable[h]=u,s.totalSamples++}return!0}static j(){p.chipWaves=w(p.chipWaves.slice(0,p.firstIndexForSamplesInChipWaveList)),p.rawChipWaves=w(p.rawChipWaves.slice(0,p.firstIndexForSamplesInChipWaveList)),p.rawRawChipWaves=w(p.rawRawChipWaves.slice(0,p.firstIndexForSamplesInChipWaveList))}static I(){E.customSamples=null,qe.j(),s.statusTable={},s.urlTable={},s.totalSamples=0,s.samplesLoaded=0,o.dispatchEvent(new n(s.totalSamples,s.samplesLoaded))}toJsonObject(e=!0,t=1,i=!0){const s=[];for(let n=0;n<this.getChannelCount();n++){const a=this.channels[n],o=[],r=this.getChannelIsNoise(n),l=this.getChannelIsMod(n);for(const e of a.instruments)o.push(e.toJsonObject());const h=[];for(const e of a.patterns)h.push(e.toJsonObject(this,a,l));const p=[];if(e)for(let e=0;e<this.loopStart;e++)p.push(a.bars[e]);for(let e=0;e<t;e++)for(let e=this.loopStart;e<this.loopStart+this.loopLength;e++)p.push(a.bars[e]);if(i)for(let e=this.loopStart+this.loopLength;e<this.barCount;e++)p.push(a.bars[e]);const u={type:l?"mod":r?"drum":"pitch",name:a.name,instruments:o,patterns:h,sequence:p};r||(u.octaveScrollBar=a.octave-1),s.push(u)}const n={name:this.title,format:qe.K,version:qe.q,scale:p.scales[this.scale].name,customScale:this.scaleCustom,key:p.keys[this.key].name,keyOctave:this.octave,introBars:this.loopStart,loopBars:this.loopLength,beatsPerBar:this.beatsPerBar,ticksPerBeat:p.rhythms[this.rhythm].stepsPerBeat,beatsPerMinute:this.tempo,reverb:this.reverb,masterGain:this.masterGain,compressionThreshold:this.compressionThreshold,limitThreshold:this.limitThreshold,limitDecay:this.limitDecay,limitRise:this.limitRise,limitRatio:this.limitRatio,compressionRatio:this.compressionRatio,songEq:this.eqFilter.toJsonObject(),layeredInstruments:this.layeredInstruments,patternInstruments:this.patternInstruments,channels:s};for(let e=0;e<p.filterMorphCount-1;e++)n["songEq"+e]=this.eqSubFilters[e];return null!=E.customSamples&&E.customSamples.length>0&&(n.customSamples=E.customSamples),n}fromJsonObject(e,t="auto"){if(this.initToDefault(!0),!e)return;"auto"==t&&"BeepBox"==e.format&&(null!=e.riff&&(t="modbox"),null!=e.masterGain&&(t="jummbox"));const i=("auto"==t?e.format:t).toLowerCase();if(null!=e.name&&(this.title=e.name),null!=e.customSamples){const t=e.customSamples;if(null==E.customSamples||E.customSamples.join(", ")!=t.join(", ")){p.willReloadForCustomSamples=!0,qe.j();let e=!1,i=!1,n=!1;const a=[],o=[];for(const r of t)if("legacysamples"===r.toLowerCase())e||(e=!0,a.push(r),h(0));else if("nintariboxsamples"===r.toLowerCase())i||(i=!0,a.push(r),h(1));else if("mariopaintboxsamples"===r.toLowerCase())n||(n=!0,a.push(r),h(2));else{const e=!1;qe.U(r,a,o,s,e)}if(a.length>0&&(E.customSamples=a),o.length>0){const e=w(o);E.presetCategories[E.presetCategories.length]={name:"Custom Sample Presets",presets:e,index:E.presetCategories.length}}}}else{let t=!1;if(null!=e.channels)for(let s=0;s<e.channels.length;s++){const n=e.channels[s];if("pitch"===n.type&&Array.isArray(n.instruments)){const e=n.instruments;for(let s=0;s<e.length;s++){const n=e[s];if("chip"!==n.type)continue;if(null==n.wave)continue;const a=n.wave,o=["paandorasbox kick","paandorasbox snare","paandorasbox piano1","paandorasbox WOW","paandorasbox overdrive","paandorasbox trumpet","paandorasbox saxophone","paandorasbox orchestrahit","paandorasbox detatched violin","paandorasbox synth","paandorasbox sonic3snare","paandorasbox come on","paandorasbox choir","paandorasbox overdriveguitar","paandorasbox flute","paandorasbox legato violin","paandorasbox tremolo violin","paandorasbox amen break","paandorasbox pizzicato violin","paandorasbox tim allen grunt","paandorasbox tuba","paandorasbox loopingcymbal","paandorasbox standardkick","paandorasbox standardsnare","paandorasbox closedhihat","paandorasbox foothihat","paandorasbox openhihat","paandorasbox crashcymbal","paandorasbox pianoC4","paandorasbox liver pad","paandorasbox marimba","paandorasbox susdotwav","paandorasbox wackyboxtts","paandorasbox peppersteak_1","paandorasbox peppersteak_2","paandorasbox vinyl_noise","paandorasbeta slap bass","paandorasbeta HD EB overdrive guitar","paandorasbeta sunsoft bass","paandorasbeta masculine choir","paandorasbeta feminine choir","paandorasbeta tololoche","paandorasbeta harp","paandorasbeta pan flute","paandorasbeta krumhorn","paandorasbeta timpani","paandorasbeta crowd hey","paandorasbeta wario land 4 brass","paandorasbeta wario land 4 rock organ","paandorasbeta wario land 4 DAOW","paandorasbeta wario land 4 hour chime","paandorasbeta wario land 4 tick","paandorasbeta kirby kick","paandorasbeta kirby snare","paandorasbeta kirby bongo","paandorasbeta kirby click","paandorasbeta sonor kick","paandorasbeta sonor snare","paandorasbeta sonor snare (left hand)","paandorasbeta sonor snare (right hand)","paandorasbeta sonor high tom","paandorasbeta sonor low tom","paandorasbeta sonor hihat (closed)","paandorasbeta sonor hihat (half opened)","paandorasbeta sonor hihat (open)","paandorasbeta sonor hihat (open tip)","paandorasbeta sonor hihat (pedal)","paandorasbeta sonor crash","paandorasbeta sonor crash (tip)","paandorasbeta sonor ride"],r=["pandoraasbox kick","pandoraasbox snare","pandoraasbox piano1","pandoraasbox WOW","pandoraasbox overdrive","pandoraasbox trumpet","pandoraasbox saxophone","pandoraasbox orchestrahit","pandoraasbox detatched violin","pandoraasbox synth","pandoraasbox sonic3snare","pandoraasbox come on","pandoraasbox choir","pandoraasbox overdriveguitar","pandoraasbox flute","pandoraasbox legato violin","pandoraasbox tremolo violin","pandoraasbox amen break","pandoraasbox pizzicato violin","pandoraasbox tim allen grunt","pandoraasbox tuba","pandoraasbox loopingcymbal","pandoraasbox standardkick","pandoraasbox standardsnare","pandoraasbox closedhihat","pandoraasbox foothihat","pandoraasbox openhihat","pandoraasbox crashcymbal","pandoraasbox pianoC4","pandoraasbox liver pad","pandoraasbox marimba","pandoraasbox susdotwav","pandoraasbox wackyboxtts","pandoraasbox peppersteak_1","pandoraasbox peppersteak_2","pandoraasbox vinyl_noise","pandoraasbeta slap bass","pandoraasbeta HD EB overdrive guitar","pandoraasbeta sunsoft bass","pandoraasbeta masculine choir","pandoraasbeta feminine choir","pandoraasbeta tololoche","pandoraasbeta harp","pandoraasbeta pan flute","pandoraasbeta krumhorn","pandoraasbeta timpani","pandoraasbeta crowd hey","pandoraasbeta wario land 4 brass","pandoraasbeta wario land 4 rock organ","pandoraasbeta wario land 4 DAOW","pandoraasbeta wario land 4 hour chime","pandoraasbeta wario land 4 tick","pandoraasbeta kirby kick","pandoraasbeta kirby snare","pandoraasbeta kirby bongo","pandoraasbeta kirby click","pandoraasbeta sonor kick","pandoraasbeta sonor snare","pandoraasbeta sonor snare (left hand)","pandoraasbeta sonor snare (right hand)","pandoraasbeta sonor high tom","pandoraasbeta sonor low tom","pandoraasbeta sonor hihat (closed)","pandoraasbeta sonor hihat (half opened)","pandoraasbeta sonor hihat (open)","pandoraasbeta sonor hihat (open tip)","pandoraasbeta sonor hihat (pedal)","pandoraasbeta sonor crash","pandoraasbeta sonor crash (tip)","pandoraasbeta sonor ride"],l=["kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","detatched violin","synth","sonic3snare","come on","choir","overdriveguitar","flute","legato violin","tremolo violin","amen break","pizzicato violin","tim allen grunt","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","liver pad","marimba","susdotwav","wackyboxtts"];o.includes(a)?t=!0:r.includes(a)?(t=!0,n.wave=o[r.findIndex((e=>e===a))]):l.includes(a)&&("trumpet"!==a&&"flute"!==a||"paandorasbox"==i)&&(t=!0,n.wave=o[l.findIndex((e=>e===a))])}}}t?(p.willReloadForCustomSamples=!0,qe.j(),h(0),E.customSamples=["legacySamples"]):null!=E.customSamples&&E.customSamples.length>0&&(p.willReloadForCustomSamples=!0,qe.I())}if(this.scale=0,null!=e.scale){const t={"romani :)":"double harmonic :)","romani :(":"double harmonic :(","dbl harmonic :)":"double harmonic :)","dbl harmonic :(":"double harmonic :(",enigma:"strange"},i=null!=t[e.scale]?t[e.scale]:e.scale,s=p.scales.findIndex((e=>e.name==i));if(-1!=s&&(this.scale=s),this.scale==p.scales.dictionary.Custom.index&&null!=e.customScale)for(var n of e.customScale.keys())this.scaleCustom[n]=e.customScale[n]}if(null!=e.key)if("number"==typeof e.key)this.key=(e.key+1200>>>0)%p.keys.length;else if("string"==typeof e.key){const t=e.key;if("C+"===t)this.key=0,this.octave=1;else if("G- (actually F#-)"===t)this.key=6,this.octave=-1;else if("C-"===t)this.key=0,this.octave=-1;else if("oh no (F-)"===t)this.key=5,this.octave=-1;else{const e=t.charAt(0).toUpperCase(),i=t.charAt(1).toLowerCase();let s={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[e];const n={"#":1,"♯":1,b:-1,"♭":-1}[i];null!=s&&(null!=n&&(s+=n),s<0&&(s+=12),s%=12,this.key=s)}}null!=e.beatsPerMinute&&(this.tempo=Y(p.tempoMin,p.tempoMax+1,0|e.beatsPerMinute)),null!=e.keyOctave&&(this.octave=Y(p.octaveMin,p.octaveMax+1,0|e.keyOctave));let a=0;null!=e.reverb&&(a=Y(0,32,0|e.reverb)),null!=e.beatsPerBar&&(this.beatsPerBar=Math.max(p.beatsPerBarMin,Math.min(p.beatsPerBarMax,0|e.beatsPerBar)));let o=4;null!=e.ticksPerBeat&&(o=0|e.ticksPerBeat||4,this.rhythm=p.rhythms.findIndex((e=>e.stepsPerBeat==o)),-1==this.rhythm&&(this.rhythm=1)),null!=e.masterGain?this.masterGain=Math.max(0,Math.min(5,e.masterGain||0)):this.masterGain=1,null!=e.limitThreshold?this.limitThreshold=Math.max(0,Math.min(2,e.limitThreshold||0)):this.limitThreshold=1,null!=e.compressionThreshold?this.compressionThreshold=Math.max(0,Math.min(1.1,e.compressionThreshold||0)):this.compressionThreshold=1,null!=e.limitRise?this.limitRise=Math.max(2e3,Math.min(1e4,e.limitRise||0)):this.limitRise=4e3,null!=e.limitDecay?this.limitDecay=Math.max(1,Math.min(30,e.limitDecay||0)):this.limitDecay=4,null!=e.limitRatio?this.limitRatio=Math.max(0,Math.min(11,e.limitRatio||0)):this.limitRatio=1,null!=e.compressionRatio?this.compressionRatio=Math.max(0,Math.min(1.168,e.compressionRatio||0)):this.compressionRatio=1,null!=e.songEq?this.eqFilter.fromJsonObject(e.songEq):this.eqFilter.reset();for(let t=0;t<p.filterMorphCount-1;t++)e["songEq"+t]?this.eqSubFilters[t]=e["songEq"+t]:this.eqSubFilters[t]=null;let r=1,l=1,u=1;if(null!=e.channels)for(const t of e.channels)t.instruments&&(r=Math.max(r,0|t.instruments.length)),t.patterns&&(l=Math.max(l,0|t.patterns.length)),t.sequence&&(u=Math.max(u,0|t.sequence.length));null!=e.layeredInstruments?this.layeredInstruments=!!e.layeredInstruments:this.layeredInstruments=!1,null!=e.patternInstruments?this.patternInstruments=!!e.patternInstruments:this.patternInstruments=r>1,this.patternsPerChannel=Math.min(l,p.barCountMax),this.barCount=Math.min(u,p.barCountMax),null!=e.introBars&&(this.loopStart=Y(0,this.barCount,0|e.introBars)),null!=e.loopBars&&(this.loopLength=Y(1,this.barCount-this.loopStart+1,0|e.loopBars));const c=[],f=[],m=[];if(null!=e.channels)for(let t=0;t<e.channels.length;t++){let s=e.channels[t];const n=new Fe;let r=!1,l=!1;if(null!=s.type?(r="drum"==s.type,l="mod"==s.type):r=t>=3,r?f.push(n):l?m.push(n):c.push(n),null!=s.octaveScrollBar&&(n.octave=Y(0,p.pitchOctaves,1+(0|s.octaveScrollBar)),r&&(n.octave=0)),null!=s.name?n.name=s.name:n.name="",Array.isArray(s.instruments)){const e=s.instruments;for(let t=0;t<e.length&&!(t>=this.getMaxInstrumentsPerChannel());t++){const s=new xe(r,l);n.instruments[t]=s,s.fromJsonObject(e[t],r,l,!1,!1,a,i)}}for(let e=0;e<this.patternsPerChannel;e++){const t=new ue;let a;n.patterns[e]=t,s.patterns&&(a=s.patterns[e]),null!=a&&t.fromJsonObject(a,this,n,o,r,l,i)}n.patterns.length=this.patternsPerChannel;for(let e=0;e<this.barCount;e++)n.bars[e]=null!=s.sequence?Math.min(this.patternsPerChannel,s.sequence[e]>>>0):0;n.bars.length=this.barCount}c.length>p.pitchChannelCountMax&&(c.length=p.pitchChannelCountMax),f.length>p.noiseChannelCountMax&&(f.length=p.noiseChannelCountMax),m.length>p.modChannelCountMax&&(m.length=p.modChannelCountMax),this.pitchChannelCount=c.length,this.noiseChannelCount=f.length,this.modChannelCount=m.length,this.channels.length=0,Array.prototype.push.apply(this.channels,c),Array.prototype.push.apply(this.channels,f),Array.prototype.push.apply(this.channels,m),p.willReloadForCustomSamples&&(window.location.hash=this.toBase64String(),setTimeout((()=>{location.reload()}),50))}getPattern(e,t){if(t<0||t>=this.barCount)return null;const i=this.channels[e].bars[t];return 0==i?null:this.channels[e].patterns[i-1]}getBeatsPerMinute(){return this.tempo}static getNeededBits(e){return 32-Math.clz32(Math.ceil(e+1)-1)}restoreLimiterDefaults(){this.compressionRatio=1,this.limitRatio=1,this.limitRise=4e3,this.limitDecay=4,this.limitThreshold=1,this.compressionThreshold=1,this.masterGain=1}}qe.K=p.jsonFormat,qe.H=2,qe.T=9,qe.R=1,qe.O=6,qe.L=1,qe.N=4,qe.V=1,qe.W=5,qe.$=1,qe.q=4,qe.k=115;class Pe{constructor(){this.delayLine=null,this.allPassG=0,this.allPassGDelta=0,this.sustainFilterA1=0,this.sustainFilterA1Delta=0,this.sustainFilterA2=0,this.sustainFilterA2Delta=0,this.sustainFilterB0=0,this.sustainFilterB0Delta=0,this.sustainFilterB1=0,this.sustainFilterB1Delta=0,this.sustainFilterB2=0,this.sustainFilterB2Delta=0,this.reset()}reset(){this.delayIndex=-1,this.allPassSample=0,this.allPassPrevInput=0,this.sustainFilterSample=0,this.sustainFilterPrevOutput2=0,this.sustainFilterPrevInput1=0,this.sustainFilterPrevInput2=0,this.fractionalDelaySample=0,this.prevDelayLength=-1,this.delayResetOffset=0}update(e,t,i,s,n,a,o,r){const l=2*Math.PI*p.pickedStringDispersionCenterFreq/e.samplesPerSecond,h=this.prevDelayLength,u=i.phaseDeltas[s],c=i.phaseDeltaScales[s],f=u*Math.pow(c,n),m=2*Math.PI*u,d=2*Math.PI*f,y=2*m,v=2*d,b=Math.min(Math.PI,m*p.pickedStringDispersionFreqMult*Math.pow(l/m,p.pickedStringDispersionFreqScale)),g=Math.min(Math.PI,d*p.pickedStringDispersionFreqMult*Math.pow(l/d,p.pickedStringDispersionFreqScale)),S=2*Math.PI*p.pickedStringShelfHz/e.samplesPerSecond,w=(Math.pow(100,a)-1)/99,M=(Math.pow(100,o)-1)/99,k=1==r?.25:0,x=15.6,F=3*e.samplesPerSecond/48e3,q=Math.pow(.5,w*Math.pow(S/(m*x),1+2*k)*x),P=Math.pow(.5,M*Math.pow(S/(d*x),1+2*k)*x),I=Math.pow(q,.002),T=Math.pow(P,.002);He.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(b),e.tempFrequencyResponse.analyze(He.tempFilterStartCoefficients,y);const D=He.tempFilterStartCoefficients.b[0],z=-e.tempFrequencyResponse.angle()/y;He.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(g),e.tempFrequencyResponse.analyze(He.tempFilterEndCoefficients,v);const H=He.tempFilterEndCoefficients.b[0],O=-e.tempFrequencyResponse.angle()/v,E=0==r?0:1;if(0==E){const e=Math.pow(q,p.stringDecayRate),t=Math.pow(P,p.stringDecayRate);He.tempFilterStartCoefficients.highShelf2ndOrder(S,e,.5),He.tempFilterEndCoefficients.highShelf2ndOrder(S,t,.5)}else{const t=Math.pow(1==E?0:1,.25),i=Math.pow(F*F*m*3.3*48e3/e.samplesPerSecond,.5+k)/F/Math.pow(w,.5),s=Math.pow(F*F*d*3.3*48e3/e.samplesPerSecond,.5+k)/F/Math.pow(M,.5),n=i*Math.pow(2,.5-1.75*(1-Math.pow(1-t,.85))),a=s*Math.pow(2,.5-1.75*(1-Math.pow(1-t,.85))),o=Math.pow(2,-Math.pow(2,-Math.pow(t,.9))),r=Math.pow(2,-Math.pow(2,-Math.pow(t,.9)));He.tempFilterStartCoefficients.lowPass2ndOrderButterworth(B(n),o),He.tempFilterEndCoefficients.lowPass2ndOrderButterworth(B(a),r)}e.tempFrequencyResponse.analyze(He.tempFilterStartCoefficients,y);const C=He.tempFilterStartCoefficients.a[1],R=He.tempFilterStartCoefficients.a[2],A=He.tempFilterStartCoefficients.b[0]*I,G=He.tempFilterStartCoefficients.b[1]*I,N=He.tempFilterStartCoefficients.b[2]*I,L=-e.tempFrequencyResponse.angle()/y;e.tempFrequencyResponse.analyze(He.tempFilterEndCoefficients,v);const W=He.tempFilterEndCoefficients.a[1],V=He.tempFilterEndCoefficients.a[2],$=He.tempFilterEndCoefficients.b[0]*T,j=He.tempFilterEndCoefficients.b[1]*T,U=He.tempFilterEndCoefficients.b[2]*T,Q=-e.tempFrequencyResponse.angle()/v,_=1/u,K=1/f,J=Math.ceil(2*Math.max(_,K)),Y=_-z-L,X=K-O-Q;this.prevDelayLength=Y,this.delayLengthDelta=(X-Y)/n,this.allPassG=D,this.sustainFilterA1=C,this.sustainFilterA2=R,this.sustainFilterB0=A,this.sustainFilterB1=G,this.sustainFilterB2=N,this.allPassGDelta=(H-D)/n,this.sustainFilterA1Delta=(W-C)/n,this.sustainFilterA2Delta=(V-R)/n,this.sustainFilterB0Delta=($-A)/n,this.sustainFilterB1Delta=(j-G)/n,this.sustainFilterB2Delta=(U-N)/n;const Z=Math.abs(Math.log2(Y/h))>.01,ee=-1==this.delayIndex||Z;if(null==this.delayLine||this.delayLine.length<=J){const t=Math.ceil(2*e.samplesPerSecond/xe.frequencyFromPitch(12)),i=new Float32Array(He.fittingPowerOfTwo(Math.max(t,J)));if(!ee&&null!=this.delayLine){const e=this.delayLine.length-1>>0,t=this.delayIndex+this.delayResetOffset;this.delayIndex=this.delayLine.length-this.delayResetOffset;for(let s=0;s<this.delayLine.length;s++)i[s]=this.delayLine[t+s&e]}this.delayLine=i}const te=this.delayLine,ie=te.length-1>>0;if(ee){this.delayIndex=0,this.allPassSample=0,this.allPassPrevInput=0,this.sustainFilterSample=0,this.sustainFilterPrevOutput2=0,this.sustainFilterPrevInput1=0,this.sustainFilterPrevInput2=0,this.fractionalDelaySample=0;const i=-Y,s=Math.floor(i-_/2),n=Math.ceil(s+2*_);this.delayResetOffset=n;for(let e=s;e<=n;e++)te[e&ie]=0;const a=t.wave,o=a.length-1,r=o/_,l=Math.min(.2*_,.003*e.samplesPerSecond),h=Math.ceil(i),p=i+_+l,u=p;let c=(h-i)*r,f=0;for(let e=h;e<=u;e++){const t=0|c,s=t%o;let n=a[s];const h=c-t;n+=(a[s+1]-n)*h;const u=(n-f)/r,m=Math.min(1,(e-i)/l)*Math.min(1,(p-e)/l),d=m*m*(3-2*m);te[e&ie]+=u*d,f=n,c+=r}}}}class Ie{constructor(){this.noteSecondsStart=[],this.noteSecondsStartUnscaled=0,this.noteSecondsEnd=[],this.noteSecondsEndUnscaled=0,this.noteTicksStart=0,this.noteTicksEnd=0,this.noteSizeStart=p.noteSizeMax,this.noteSizeEnd=p.noteSizeMax,this.prevNoteSize=p.noteSizeMax,this.nextNoteSize=p.noteSizeMax,this.J=p.noteSizeMax,this.prevNoteSecondsStart=[],this.prevNoteSecondsStartUnscaled=0,this.prevNoteSecondsEnd=[],this.prevNoteSecondsEndUnscaled=0,this.prevNoteTicksStart=0,this.prevNoteTicksEnd=0,this.Y=p.noteSizeMax,this.tickTimeEnd=[],this.drumsetFilterEnvelopeStart=0,this.drumsetFilterEnvelopeEnd=0,this.prevSlideStart=!1,this.prevSlideEnd=!1,this.nextSlideStart=!1,this.nextSlideEnd=!1,this.prevSlideRatioStart=0,this.prevSlideRatioEnd=0,this.nextSlideRatioStart=0,this.nextSlideRatioEnd=0,this.envelopeStarts=[],this.envelopeEnds=[],this.X=[],this.Z=0,this.lowpassCutoffDecayVolumeCompensation=1;for(let e=0;e<49;e++)this.envelopeStarts[e]=1,this.envelopeEnds[e]=1;this.reset()}reset(){for(let e=0;e<p.maxEnvelopeCount+1;e++)this.noteSecondsEnd[e]=0,this.prevNoteSecondsEnd[e]=0;this.noteSecondsEndUnscaled=0,this.noteTicksEnd=0,this.J=p.noteSizeMax,this.prevNoteSecondsEndUnscaled=0,this.prevNoteTicksEnd=0,this.Y=p.noteSizeMax,this.Z=0,this.drumsetFilterEnvelopeStart=0,this.drumsetFilterEnvelopeEnd=0}computeEnvelopes(e,t,i,s,n,a,o,r,l){const h=n,u=e.getTransition();if(null!=a&&a.atNoteStart&&!u.continues&&!a.forceContinueAtStart){this.prevNoteSecondsEndUnscaled=this.noteSecondsEndUnscaled,this.prevNoteTicksEnd=this.noteTicksEnd,this.Y=this.J,this.noteSecondsEndUnscaled=0,this.noteTicksEnd=0;for(let e=0;e<p.maxEnvelopeCount+1;e++)this.prevNoteSecondsEnd[e]=this.noteSecondsEnd[e],this.noteSecondsEnd[e]=0}null!=a&&(null!=a.note?this.J=a.note.pins[a.note.pins.length-1].size:this.J=p.noteSizeMax);const c=[],f=s+1,m=[],d=this.noteSecondsEndUnscaled,y=[],v=d+h,b=this.noteTicksEnd,g=b+1,S=[],w=[],M=this.prevNoteSecondsEndUnscaled,k=M+h,x=this.prevNoteTicksEnd,F=x+1,q=1/(p.ticksPerPart*p.partsPerBeat),P=[],I=[];let T=this.J,D=this.J,z=this.Y,H=0,O=!1,E=!1,C=!1,R=!1,A=0,G=0,N=0,L=0;if(null!=a&&null!=a.note&&!a.passedEndOfNote){const e=a.note.getEndPinIndex(t),i=a.note.pins[e-1],n=a.note.pins[e],o=(a.note.start+i.time)*p.ticksPerPart,r=(a.note.start+n.time)*p.ticksPerPart,l=(s-o)/(r-o),h=(f-o)/(r-o);if(T=i.size+(n.size-i.size)*l,D=i.size+(n.size-i.size)*h,u.slides){const e=a.noteStartPart*p.ticksPerPart,t=a.noteEndPart*p.ticksPerPart,i=.5*(t-e),n=Math.min(i,u.slideTicks);null==a.prevNote||a.forceContinueAtStart||(s-e<n&&(O=!0,A=.5*(1-(s-e)/n)),f-e<n&&(E=!0,G=.5*(1-(f-e)/n))),null==a.nextNote||a.forceContinueAtEnd||(H=a.nextNote.pins[0].size,t-s<n&&(C=!0,N=.5*(1-(t-s)/n)),t-f<n&&(R=!0,L=.5*(1-(t-f)/n)))}}let W=1,V=!1;for(let t=0;t<=e.envelopeCount;t++){let s,h,u,f=!1,b=1,g=1,x=b*g,F=0,B=1,$=0,j=2,U=2,Q=0;if(t==e.envelopeCount){if(V)break;s=p.instrumentAutomationTargets.dictionary.noteVolume,h=0,u=p.newEnvelopes.dictionary["note size"]}else{let a=e.envelopes[t];s=p.instrumentAutomationTargets[a.target],h=a.index,u=p.newEnvelopes[a.envelope],f=e.envelopes[t].inverse,b=e.envelopes[t].perEnvelopeSpeed,g=Math.pow(e.envelopeSpeed,2)/144,x=0==b||0==g?b+g:b*g,F=e.envelopes[t].perEnvelopeLowerBound,B=e.envelopes[t].perEnvelopeUpperBound,$=l.computeTicksSinceStart(),j=e.envelopes[t].steps,U=e.envelopes[t].seed,Q=e.envelopes[t].waveform,o[t]||(o[t]=0);const r=n*o[t];i[t]||(i[t]=0),c[t]=i[t]?i[t]+o[t]:o[t],m[t]=this.noteSecondsEnd[t]?this.noteSecondsEnd[t]:0,S[t]=this.prevNoteSecondsEnd[t]?this.prevNoteSecondsEnd[t]:0,y[t]=m[t]?m[t]+r:r,w[t]=S[t]?S[t]+r:r,P[t]=i[t]?q*i[t]:q,I[t]=c[t]?q*c[t]:q,1==u.type&&(V=!0)}const _=this.computePitchEnvelope(e,t,a,r);if(null!=s.computeIndex){const i=s.computeIndex+h;let n=Ie.computeEnvelope(u,x,d,m[t],P[t],$,T,_,f,F,B,!1,j,U,Q);if(O){n+=(Ie.computeEnvelope(u,x,M,S[t],P[t],$,z,_,f,F,B,!1,j,U,Q)-n)*A}if(C){n+=(Ie.computeEnvelope(u,x,0,0,P[t],$,H,_,f,F,B,!1,j,U,Q)-n)*N}let a=n;if(0==e.discreteEnvelope){if(a=Ie.computeEnvelope(u,x,v,y[t],I[t],$,D,_,f,F,B,!1,j,U,Q),E){a+=(Ie.computeEnvelope(u,x,k,w[t],I[t],$,z,_,f,F,B,!1,j,U,Q)-a)*G}if(R){a+=(Ie.computeEnvelope(u,x,0,0,I[t],$,H,_,f,F,B,!1,j,U,Q)-a)*L}}if(this.envelopeStarts[i]*=n,this.envelopeEnds[i]*=a,this.X[this.Z++]=i,s.isFilter){const t=null!=e.tmpNoteFilterStart?e.tmpNoteFilterStart:e.noteFilter;t.controlPointCount>h&&0==t.controlPoints[h].type&&(W=Math.max(W,Ie.getLowpassCutoffDecayVolumeCompensation(u,b)))}}}this.noteSecondsStartUnscaled=d,this.noteSecondsEndUnscaled=v,this.noteTicksStart=b,this.noteTicksEnd=g,this.prevNoteSecondsStartUnscaled=M,this.prevNoteSecondsEndUnscaled=k,this.prevNoteTicksStart=x,this.prevNoteTicksEnd=F;for(let e=0;e<p.maxEnvelopeCount+1;e++)this.noteSecondsStart[e]=m[e],this.noteSecondsEnd[e]=y[e],this.prevNoteSecondsStart[e]=S[e],this.prevNoteSecondsEnd[e]=w[e];this.prevNoteSize=z,this.nextNoteSize=H,this.noteSizeStart=T,this.noteSizeEnd=D,this.prevSlideStart=O,this.prevSlideEnd=E,this.nextSlideStart=C,this.nextSlideEnd=R,this.prevSlideRatioStart=A,this.prevSlideRatioEnd=G,this.nextSlideRatioStart=N,this.nextSlideRatioEnd=L,this.lowpassCutoffDecayVolumeCompensation=W}clearEnvelopes(){for(let e=0;e<this.Z;e++){const t=this.X[e];this.envelopeStarts[t]=1,this.envelopeEnds[t]=1}this.Z=0}static computeEnvelope(e,t,i,s,n,a,o,r,l,h,p,u=!1,c,f,m){const d=u?e.speed:1,y=p-h;switch(e.type){case 0:return p;case 1:return l?p-y*He.noteSizeToVolumeMult(o):y*He.noteSizeToVolumeMult(o)+h;case 2:return r;case 3:const e=c,u=function(e,t=0){const i="string"==typeof e?(K??=new TextEncoder).encode(e):e,s=i;let n=t+_&4294967295,a=0;if(s.length>=16){const e=[t+$+j&4294967295,t+j&4294967295,t+0&4294967295,t-$&4294967295],s=i,o=s.length-16;let r=0;for(a=0;(4294967280&a)<=o;a+=4){const t=a,i=s[t+0]+(s[t+1]<<8),n=s[t+2]+(s[t+3]<<8),o=i*j+(n*j<<16);let l=e[r]+o&4294967295;l=l<<13|l>>>19;const h=65535&l,p=l>>>16;e[r]=h*$+(p*$<<16)&4294967295,r=r+1&3}n=(e[0]<<1|e[0]>>>31)+(e[1]<<7|e[1]>>>25)+(e[2]<<12|e[2]>>>20)+(e[3]<<18|e[3]>>>14)&4294967295}n=n+i.length&4294967295;const o=i.length-4;for(;a<=o;a+=4){const e=a,t=s[e+0]+(s[e+1]<<8),i=s[e+2]+(s[e+3]<<8);n=n+(t*U+(i*U<<16))&4294967295,n=n<<17|n>>>15,n=(65535&n)*Q+((n>>>16)*Q<<16)&4294967295}for(;a<s.length;++a)n+=s[a]*_,n=n<<11|n>>>21,n=(65535&n)*$+((n>>>16)*$<<16)&4294967295;return n^=n>>>15,n=((65535&n)*j&4294967295)+((n>>>16)*j<<16),n^=n>>>13,n=((65535&n)*U&4294967295)+((n>>>16)*U<<16),n^=n>>>16,n<0?n+4294967296:n}((0==t?0:Math.floor(a*t/256))+"",f),v=4294967295;return l?p-y*(e/(e-1))*Math.floor(u*e/(v+1))/e:y*(e/(e-1))*Math.floor(u*e/(v+1))/e+h;case 6:return l?p-y*(1/(1+s*d)):y/(1+s*d)+h;case 7:return l?y/(1+s*d)+h:p-y/(1+s*d);case 8:switch(m){case 0:return l?p/2+y*Math.cos(2*n*Math.PI*d)*.5+h/2:p/2-y*Math.cos(2*n*Math.PI*d)*.5+h/2;case 1:return l?Math.cos(2*n*Math.PI*d)<0?p:h:Math.cos(2*n*Math.PI*d)<0?h:p;case 2:return l?p/2-y/Math.PI*Math.asin(Math.sin(Math.PI/2+n*Math.PI*2*d))+h/2:p/2+y/Math.PI*Math.asin(Math.sin(Math.PI/2+n*Math.PI*2*d))+h/2;default:throw new Error("Unrecognized operator envelope waveform type.")}case 9:return l?p/4+y*Math.cos(2*n*Math.PI*d)*.25+h/4:.5+p/4-y*Math.cos(2*n*Math.PI*d)*.25-h/4;case 4:return l?Math.max(0,p+1-Math.max(1-h,1-p-i*t*10)):Math.max(1+h,1+p-i*t*10);case 5:const b=.25/Math.sqrt(d*t);return l?p-y*(i<b?i/b:1/(1+(i-b)*d*t)):y*(i<b?i/b:1/(1+(i-b)*d*t))+h;case 10:return l?p-y*Math.pow(2,-d*s):y*Math.pow(2,-d*s)+h;case 14:return l?p-y*+(i<.25/Math.sqrt(d*t)):y*+(i<.25/Math.sqrt(d*t))+h;case 11:let g=.5-.5*Math.cos(n*d);return g=1/(1+s*(d-g/(1.5/d))),g=g>0?g:0,l?p-y*g:y*g+h;case 12:{let e=1-s/(16/d);return e=e>0?e:0,l?p-y*e:y*e+h}case 13:{let e=s/(16/d);return e=e<1?e:1,l?p-y*e:y*e+h}case 15:return l?Math.min(Math.max(h,p-y*Math.sqrt(Math.max(1-d*s/2,0))),p):Math.max(h,y*Math.sqrt(Math.max(1-d*s/2,0))+h);default:throw new Error("Unrecognized operator envelope type.")}}computePitchEnvelope(e,t,i,s){let n=0,a=p.maxPitch,o=0,r=!1,l=0,h=1;if(e.isNoiseInstrument&&(a=p.drumCount-1),t<e.envelopeCount&&-2!==t&&(n=e.envelopes[t].pitchEnvelopeStart,a=e.envelopes[t].pitchEnvelopeEnd,r=e.envelopes[t].inverse,l=e.envelopes[t].perEnvelopeLowerBound,h=e.envelopes[t].perEnvelopeUpperBound),i&&i.pitchCount>=1){const t=e.getChord().arpeggiates,n=Math.floor(s.arpTime/p.ticksPerArpeggio),a=i.pitches[t?S(i.pitchCount,e.fastTwoNoteArp,n):0];o=i.lastInterval!=a?a+i.lastInterval:a}n>a&&(n=0,a=e.isNoiseInstrument?p.drumCount-1:p.maxPitch);const u=a-n+1;return r?o<=n?h:o>=a?l:h-(o-n)*(h-l)/u:o<=n?l:o>=a?h:(o-n)*(h-l)/u+l}static getLowpassCutoffDecayVolumeCompensation(e,t=1){return 10==e.type?1.25+.025*t:6==e.type?1+.02*t:1}computeDrumsetEnvelopes(e,t,i,s,n){let a=Ie.computeEnvelope(t,1,this.noteSecondsStartUnscaled,this.noteSecondsStartUnscaled,i*s,0,this.noteSizeStart,1,!1,0,1,!0,2,2,0);if(this.prevSlideStart){a+=(Ie.computeEnvelope(t,1,this.prevNoteSecondsStartUnscaled,this.prevNoteSecondsStartUnscaled,i*s,0,this.prevNoteSize,1,!1,0,1,!0,2,2,0)-a)*this.prevSlideRatioStart}if(this.nextSlideStart){a+=(Ie.computeEnvelope(t,1,0,0,i*s,0,this.nextNoteSize,1,!1,0,1,!0,2,2,0)-a)*this.nextSlideRatioStart}let o=a;if(0==e.discreteEnvelope){if(o=Ie.computeEnvelope(t,1,this.noteSecondsEndUnscaled,this.noteSecondsEndUnscaled,i*n,0,this.noteSizeEnd,1,!1,0,1,!0,2,2,0),this.prevSlideEnd){o+=(Ie.computeEnvelope(t,1,this.prevNoteSecondsEndUnscaled,this.prevNoteSecondsEndUnscaled,i*n,0,this.prevNoteSize,1,!1,0,1,!0,2,2,0)-o)*this.prevSlideRatioEnd}if(this.nextSlideEnd){o+=(Ie.computeEnvelope(t,1,0,0,i*n,0,this.nextNoteSize,1,!1,0,1,!0,2,2,0)-o)*this.nextSlideRatioEnd}}this.drumsetFilterEnvelopeStart=a,this.drumsetFilterEnvelopeEnd=o}}class Te{constructor(){this.pitches=Array(p.maxChordSize+2).fill(0),this.pitchCount=0,this.chordSize=0,this.drumsetPitch=null,this.note=null,this.prevNote=null,this.nextNote=null,this.prevNotePitchIndex=0,this.nextNotePitchIndex=0,this.freshlyAllocated=!0,this.atNoteStart=!1,this.isOnLastTick=!1,this.passedEndOfNote=!1,this.forceContinueAtStart=!1,this.forceContinueAtEnd=!1,this.noteStartPart=0,this.noteEndPart=0,this.ticksSinceReleased=0,this.liveInputSamplesHeld=0,this.lastInterval=0,this.noiseSample=0,this.noiseSampleA=0,this.noiseSampleB=0,this.stringSustainStart=0,this.stringSustainEnd=0,this.phases=[],this.operatorWaves=[],this.phaseDeltas=[],this.directions=[],this.chipWaveCompletions=[],this.chipWavePrevWaves=[],this.chipWaveCompletionsLastWave=[],this.phaseDeltaScales=[],this.expression=0,this.expressionDelta=0,this.operatorExpressions=[],this.operatorExpressionDeltas=[],this.prevPitchExpressions=Array(p.maxPitchOrOperatorCount).fill(null),this.prevVibrato=null,this.prevStringDecay=null,this.pulseWidth=0,this.pulseWidthDelta=0,this.decimalOffset=0,this.supersawDynamism=0,this.supersawDynamismDelta=0,this.supersawUnisonDetunes=[],this.supersawShape=0,this.supersawShapeDelta=0,this.supersawDelayLength=0,this.supersawDelayLengthDelta=0,this.supersawDelayLine=null,this.supersawDelayIndex=-1,this.supersawPrevPhaseDelta=null,this.pickedStrings=[],this.noteFilters=[],this.noteFilterCount=0,this.initialNoteFilterInput1=0,this.initialNoteFilterInput2=0,this.specialIntervalExpressionMult=1,this.feedbackOutputs=[],this.feedbackMult=0,this.feedbackDelta=0,this.stereoVolumeLStart=0,this.stereoVolumeRStart=0,this.stereoVolumeLDelta=0,this.stereoVolumeRDelta=0,this.stereoDelayStart=0,this.stereoDelayEnd=0,this.stereoDelayDelta=0,this.customVolumeStart=0,this.customVolumeEnd=0,this.filterResonanceStart=0,this.filterResonanceDelta=0,this.isFirstOrder=!1,this.envelopeComputer=new Ie,this.reset()}reset(){this.noiseSample=0,this.noiseSampleA=0,this.noiseSampleB=0;for(let e=0;e<p.maxPitchOrOperatorCount;e++)this.phases[e]=0,this.directions[e]=1,this.chipWaveCompletions[e]=0,this.chipWavePrevWaves[e]=0,this.chipWaveCompletionsLastWave[e]=0,this.operatorWaves[e]=p.operatorWaves[0],this.feedbackOutputs[e]=0,this.prevPitchExpressions[e]=null;for(let e=0;e<this.noteFilterCount;e++)this.noteFilters[e].resetOutput();this.noteFilterCount=0,this.initialNoteFilterInput1=0,this.initialNoteFilterInput2=0,this.liveInputSamplesHeld=0,this.supersawDelayIndex=-1;for(const e of this.pickedStrings)e.reset();this.envelopeComputer.reset(),this.prevVibrato=null,this.prevStringDecay=null,this.supersawPrevPhaseDelta=null,this.drumsetPitch=null}}class De{constructor(){this.awake=!1,this.computed=!1,this.tonesAddedInThisTick=!1,this.flushingDelayLines=!1,this.deactivateAfterThisTick=!1,this.attentuationProgress=0,this.flushedSamples=0,this.activeTones=new G,this.activeModTones=new G,this.releasedTones=new G,this.liveInputTones=new G,this.type=0,this.synthesizer=null,this.wave=null,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=0,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0,this.noisePitchFilterMult=1,this.unison=null,this.unisonVoices=1,this.unisonSpread=0,this.unisonOffset=0,this.unisonExpression=1.4,this.unisonSign=1,this.chord=null,this.effects=0,this.volumeScale=0,this.aliases=!1,this.arpTime=0,this.vibratoTime=0,this.nextVibratoTime=0,this.envelopeTime=[],this.eqFilterVolume=1,this.eqFilterVolumeDelta=0,this.mixVolume=1,this.mixVolumeDelta=0,this.delayInputMult=0,this.delayInputMultDelta=0,this.distortion=0,this.distortionDelta=0,this.distortionDrive=0,this.distortionDriveDelta=0,this.distortionFractionalInput1=0,this.distortionFractionalInput2=0,this.distortionFractionalInput3=0,this.distortionPrevInput=0,this.distortionNextOutput=0,this.bitcrusherPrevInput=0,this.bitcrusherCurrentOutput=0,this.bitcrusherPhase=1,this.bitcrusherPhaseDelta=0,this.bitcrusherPhaseDeltaScale=1,this.bitcrusherScale=1,this.bitcrusherScaleScale=1,this.bitcrusherFoldLevel=1,this.bitcrusherFoldLevelScale=1,this.eqFilters=[],this.eqFilterCount=0,this.initialEqFilterInput1=0,this.initialEqFilterInput2=0,this.panningDelayLine=null,this.panningDelayPos=0,this.panningVolumeL=0,this.panningVolumeR=0,this.panningVolumeDeltaL=0,this.panningVolumeDeltaR=0,this.panningOffsetL=0,this.panningOffsetR=0,this.panningOffsetDeltaL=0,this.panningOffsetDeltaR=0,this.chorusDelayLineL=null,this.chorusDelayLineR=null,this.chorusDelayLineDirty=!1,this.chorusDelayPos=0,this.chorusPhase=0,this.chorusVoiceMult=0,this.chorusVoiceMultDelta=0,this.chorusCombinedMult=0,this.chorusCombinedMultDelta=0,this.echoDelayLineL=null,this.echoDelayLineR=null,this.echoDelayLineDirty=!1,this.echoDelayPos=0,this.echoDelayOffsetStart=0,this.echoDelayOffsetEnd=null,this.echoDelayOffsetRatio=0,this.echoDelayOffsetRatioDelta=0,this.echoMult=0,this.echoMultDelta=0,this.echoShelfA1=0,this.echoShelfB0=0,this.echoShelfB1=0,this.echoShelfSampleL=0,this.echoShelfSampleR=0,this.echoShelfPrevInputL=0,this.echoShelfPrevInputR=0,this.reverbDelayLine=null,this.reverbDelayLineDirty=!1,this.reverbDelayPos=0,this.reverbMult=0,this.reverbMultDelta=0,this.reverbShelfA1=0,this.reverbShelfB0=0,this.reverbShelfB1=0,this.reverbShelfSample0=0,this.reverbShelfSample1=0,this.reverbShelfSample2=0,this.reverbShelfSample3=0,this.reverbShelfPrevInput0=0,this.reverbShelfPrevInput1=0,this.reverbShelfPrevInput2=0,this.reverbShelfPrevInput3=0,this.spectrumWave=new ye,this.harmonicsWave=new be,this.additiveWave=new Se,this.drumsetSpectrumWaves=[],this.envelopeComputer=new Ie;for(let e=0;e<p.drumCount;e++)this.drumsetSpectrumWaves[e]=new ye}allocateNecessaryBuffers(e,t,i){if(D(t.effects)&&(null==this.panningDelayLine||this.panningDelayLine.length<e.panningDelayBufferSize)&&(this.panningDelayLine=new Float32Array(e.panningDelayBufferSize)),z(t.effects)&&((null==this.chorusDelayLineL||this.chorusDelayLineL.length<e.chorusDelayBufferSize)&&(this.chorusDelayLineL=new Float32Array(e.chorusDelayBufferSize)),(null==this.chorusDelayLineR||this.chorusDelayLineR.length<e.chorusDelayBufferSize)&&(this.chorusDelayLineR=new Float32Array(e.chorusDelayBufferSize))),H(t.effects)){const e=Math.max(p.echoDelayRange>>1,t.echoDelay+1),s=2*He.fittingPowerOfTwo(e*p.echoDelayStepTicks*i);if(null==this.echoDelayLineL||null==this.echoDelayLineR)this.echoDelayLineL=new Float32Array(s),this.echoDelayLineR=new Float32Array(s);else if(this.echoDelayLineL.length<s||this.echoDelayLineR.length<s){const e=new Float32Array(s),t=new Float32Array(s),i=this.echoDelayLineL.length-1;for(let s=0;s<this.echoDelayLineL.length;s++)e[s]=this.echoDelayLineL[this.echoDelayPos+s&i],t[s]=this.echoDelayLineL[this.echoDelayPos+s&i];this.echoDelayPos=this.echoDelayLineL.length,this.echoDelayLineL=e,this.echoDelayLineR=t}}O(t.effects)&&null==this.reverbDelayLine&&(this.reverbDelayLine=new Float32Array(p.reverbDelayBufferSize))}deactivate(){this.bitcrusherPrevInput=0,this.bitcrusherCurrentOutput=0,this.bitcrusherPhase=1;for(let e=0;e<this.eqFilterCount;e++)this.eqFilters[e].resetOutput();if(this.eqFilterCount=0,this.initialEqFilterInput1=0,this.initialEqFilterInput2=0,this.distortionFractionalInput1=0,this.distortionFractionalInput2=0,this.distortionFractionalInput3=0,this.distortionPrevInput=0,this.distortionNextOutput=0,this.panningDelayPos=0,null!=this.panningDelayLine)for(let e=0;e<this.panningDelayLine.length;e++)this.panningDelayLine[e]=0;this.echoDelayOffsetEnd=null,this.echoShelfSampleL=0,this.echoShelfSampleR=0,this.echoShelfPrevInputL=0,this.echoShelfPrevInputR=0,this.reverbShelfSample0=0,this.reverbShelfSample1=0,this.reverbShelfSample2=0,this.reverbShelfSample3=0,this.reverbShelfPrevInput0=0,this.reverbShelfPrevInput1=0,this.reverbShelfPrevInput2=0,this.reverbShelfPrevInput3=0,this.volumeScale=1,this.aliases=!1,this.awake=!1,this.flushingDelayLines=!1,this.deactivateAfterThisTick=!1,this.attentuationProgress=0,this.flushedSamples=0}resetAllEffects(){this.deactivate(),this.vibratoTime=0,this.nextVibratoTime=0,this.arpTime=0;for(let e=0;e<p.maxEnvelopeCount+1;e++)this.envelopeTime[e]=0;if(this.envelopeComputer.reset(),this.chorusDelayLineDirty){for(let e=0;e<this.chorusDelayLineL.length;e++)this.chorusDelayLineL[e]=0;for(let e=0;e<this.chorusDelayLineR.length;e++)this.chorusDelayLineR[e]=0}if(this.echoDelayLineDirty){for(let e=0;e<this.echoDelayLineL.length;e++)this.echoDelayLineL[e]=0;for(let e=0;e<this.echoDelayLineR.length;e++)this.echoDelayLineR[e]=0}if(this.reverbDelayLineDirty)for(let e=0;e<this.reverbDelayLine.length;e++)this.reverbDelayLine[e]=0;this.chorusPhase=0}compute(e,t,i,s,n,a,o){this.computed=!0,this.type=t.type,this.synthesizer=He.getInstrumentSynthFunction(t),this.unison=p.unisons[t.unison],this.chord=t.getChord(),this.noisePitchFilterMult=p.chipNoises[t.chipNoise].pitchFilterMult,this.effects=t.effects,this.aliases=t.aliases,this.volumeScale=1,this.allocateNecessaryBuffers(e,t,i);const r=e.samplesPerSecond;this.updateWaves(t,r);const l=e.getTicksIntoBar(),h=i/e.samplesPerSecond,u=e.getCurrentPart(),c=[];for(let e=0;e<p.maxEnvelopeCount;e++)c[e]=0;let f=p.arpSpeedScale[t.envelopeSpeed];e.isModActive(p.modulators.dictionary["envelope speed"].index,a,o)&&(f=Math.max(0,Math.min(p.arpSpeedScale.length-1,e.getModValue(p.modulators.dictionary["envelope speed"].index,a,o,!1))),f=Number.isInteger(f)?p.arpSpeedScale[f]:(1-f%1)*p.arpSpeedScale[Math.floor(f)]+f%1*p.arpSpeedScale[Math.ceil(f)]);for(let i=0;i<t.envelopeCount;i++){let s=t.envelopes[i].perEnvelopeSpeed;e.isModActive(p.modulators.dictionary["individual envelope speed"].index,a,o)&&null!=t.envelopes[i].tempEnvelopeSpeed&&(s=t.envelopes[i].tempEnvelopeSpeed),c[i]=f*s}this.envelopeComputer.computeEnvelopes(t,u,this.envelopeTime,l,h,n,c,this,e);const m=this.envelopeComputer.envelopeStarts,d=this.envelopeComputer.envelopeEnds,y=I(this.effects),v=T(this.effects),b=D(this.effects),g=z(this.effects),S=H(this.effects),w=O(this.effects);if(y){let i=t.distortion,n=t.distortion;e.isModActive(p.modulators.dictionary.distortion.index,a,o)&&(i=e.getModValue(p.modulators.dictionary.distortion.index,a,o,!1),n=e.getModValue(p.modulators.dictionary.distortion.index,a,o,!0));const r=Math.min(1,m[42]*i/(p.distortionRange-1)),l=Math.min(1,d[42]*n/(p.distortionRange-1)),h=Math.pow(1-.895*(Math.pow(20,r)-1)/19,2),u=Math.pow(1-.895*(Math.pow(20,l)-1)/19,2),c=(1+2*r)/p.distortionBaseVolume,f=(1+2*l)/p.distortionBaseVolume;this.distortion=h,this.distortionDelta=(u-h)/s,this.distortionDrive=c,this.distortionDriveDelta=(f-c)/s}if(v){let i=t.bitcrusherFreq*Math.sqrt(m[44]),n=t.bitcrusherFreq*Math.sqrt(d[44]);e.isModActive(p.modulators.dictionary["freq crush"].index,a,o)&&(i=e.getModValue(p.modulators.dictionary["freq crush"].index,a,o,!1),n=e.getModValue(p.modulators.dictionary["freq crush"].index,a,o,!0));let l=t.bitcrusherQuantization*Math.sqrt(m[43]),h=t.bitcrusherQuantization*Math.sqrt(d[43]);e.isModActive(p.modulators.dictionary["bit crush"].index,a,o)&&(l=e.getModValue(p.modulators.dictionary["bit crush"].index,a,o,!1),h=e.getModValue(p.modulators.dictionary["bit crush"].index,a,o,!0));const u=p.keys[e.song.key].basePitch+p.pitchesPerOctave*e.song.octave,c=xe.frequencyFromPitch(u+60)*Math.pow(2,(p.bitcrusherFreqRange-1-i)*p.bitcrusherOctaveStep),f=xe.frequencyFromPitch(u+60)*Math.pow(2,(p.bitcrusherFreqRange-1-n)*p.bitcrusherOctaveStep),y=Math.min(1,c/r),v=Math.min(1,f/r);this.bitcrusherPhaseDelta=y,this.bitcrusherPhaseDeltaScale=Math.pow(v/y,1/s);const b=2*p.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,.5*(p.bitcrusherQuantizationRange-1-l))),g=2*p.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,.5*(p.bitcrusherQuantizationRange-1-h)));this.bitcrusherScale=b,this.bitcrusherScaleScale=Math.pow(g/b,1/s);const S=2*p.bitcrusherBaseVolume*Math.pow(1.5,p.bitcrusherQuantizationRange-1-l),w=2*p.bitcrusherBaseVolume*Math.pow(1.5,p.bitcrusherQuantizationRange-1-h);this.bitcrusherFoldLevel=S,this.bitcrusherFoldLevelScale=Math.pow(w/S,1/s)}let M=1;if(t.eqFilterType){const i=t.eqFilter;null==t.eqSubFilters[1]&&(t.eqSubFilters[1]=new Me);const n=t.eqSubFilters[1];let l,h=t.eqFilterSimpleCut,u=t.eqFilterSimplePeak,c=t.eqFilterSimpleCut,f=t.eqFilterSimplePeak,m=!1;if(e.isModActive(p.modulators.dictionary["eq filt cut"].index,a,o)&&(h=e.getModValue(p.modulators.dictionary["eq filt cut"].index,a,o,!1),c=e.getModValue(p.modulators.dictionary["eq filt cut"].index,a,o,!0),m=!0),e.isModActive(p.modulators.dictionary["eq filt peak"].index,a,o)&&(u=e.getModValue(p.modulators.dictionary["eq filt peak"].index,a,o,!1),f=e.getModValue(p.modulators.dictionary["eq filt peak"].index,a,o,!0),m=!0),m){i.convertLegacySettingsForSynth(h,u),n.convertLegacySettingsForSynth(c,f),l=i.controlPoints[0];let e=n.controlPoints[0];l.toCoefficients(He.tempFilterStartCoefficients,r,1,1),e.toCoefficients(He.tempFilterEndCoefficients,r,1,1),this.eqFilters.length<1&&(this.eqFilters[0]=new V),this.eqFilters[0].loadCoefficientsWithGradient(He.tempFilterStartCoefficients,He.tempFilterEndCoefficients,1/s,0==l.type)}else i.convertLegacySettingsForSynth(h,u,!0),l=i.controlPoints[0],l.toCoefficients(He.tempFilterStartCoefficients,r,1,1),this.eqFilters.length<1&&(this.eqFilters[0]=new V),this.eqFilters[0].loadCoefficientsWithGradient(He.tempFilterStartCoefficients,He.tempFilterStartCoefficients,1/s,0==l.type);M*=l.getVolumeCompensationMult(),this.eqFilterCount=1,M=Math.min(3,M)}else{const e=null!=t.tmpEqFilterStart?t.tmpEqFilterStart:t.eqFilter;for(let i=0;i<e.controlPointCount;i++){let n=e.controlPoints[i],a=null!=t.tmpEqFilterEnd&&null!=t.tmpEqFilterEnd.controlPoints[i]?t.tmpEqFilterEnd.controlPoints[i]:e.controlPoints[i];n.type!=a.type&&(n=a),n.toCoefficients(He.tempFilterStartCoefficients,r,1,1),a.toCoefficients(He.tempFilterEndCoefficients,r,1,1),this.eqFilters.length<=i&&(this.eqFilters[i]=new V),this.eqFilters[i].loadCoefficientsWithGradient(He.tempFilterStartCoefficients,He.tempFilterEndCoefficients,1/s,0==n.type),M*=n.getVolumeCompensationMult()}this.eqFilterCount=e.controlPointCount,M=Math.min(3,M)}const k=He.instrumentVolumeToVolumeMult(t.volume);this.mixVolume=k;let x=k;if(e.isModActive(p.modulators.dictionary["mix volume"].index,a,o)){const t=e.getModValue(p.modulators.dictionary["mix volume"].index,a,o,!1),i=e.getModValue(p.modulators.dictionary["mix volume"].index,a,o,!0);this.mixVolume*=t<=0?(t+p.volumeRange/2)/(p.volumeRange/2):He.instrumentVolumeToVolumeMult(t),x*=i<=0?(i+p.volumeRange/2)/(p.volumeRange/2):He.instrumentVolumeToVolumeMult(i)}e.isModActive(p.modulators.dictionary["song volume"].index)&&(this.mixVolume*=e.getModValue(p.modulators.dictionary["song volume"].index,void 0,void 0,!1)/100,x*=e.getModValue(p.modulators.dictionary["song volume"].index,void 0,void 0,!0)/100),this.mixVolumeDelta=(x-this.mixVolume)/s;let F=M,q=M,P=1,E=1;if(b){const i=2*m[41]-1,n=2*d[41]-1;let l=t.pan,h=t.pan;e.isModActive(p.modulators.dictionary.pan.index,a,o)&&(l=e.getModValue(p.modulators.dictionary.pan.index,a,o,!1),h=e.getModValue(p.modulators.dictionary.pan.index,a,o,!0));let u=Math.max(-1,Math.min(1,(l-p.panCenter)/p.panCenter*i)),c=Math.max(-1,Math.min(1,(h-p.panCenter)/p.panCenter*n));const f=1.414*Math.cos((1+u)*Math.PI*.25),y=1.414*Math.cos((1-u)*Math.PI*.25),v=1.414*Math.cos((1+c)*Math.PI*.25),b=1.414*Math.cos((1-c)*Math.PI*.25),g=r*p.panDelaySecondsMax;let S=t.panDelay,w=t.panDelay;e.isModActive(p.modulators.dictionary["pan delay"].index,a,o)&&(S=e.getModValue(p.modulators.dictionary["pan delay"].index,a,o,!1),w=e.getModValue(p.modulators.dictionary["pan delay"].index,a,o,!0));const M=u*S*g/10,k=c*w*g/10,x=Math.max(0,M),F=Math.max(0,-M),q=Math.max(0,k),P=Math.max(0,-k);this.panningVolumeL=f,this.panningVolumeR=y,this.panningVolumeDeltaL=(v-f)/s,this.panningVolumeDeltaR=(b-y)/s,this.panningOffsetL=this.panningDelayPos-x+e.panningDelayBufferSize,this.panningOffsetR=this.panningDelayPos-F+e.panningDelayBufferSize,this.panningOffsetDeltaL=(q-x)/s,this.panningOffsetDeltaR=(P-F)/s}if(g){const i=m[45],n=d[45];let r=t.chorus,l=t.chorus;e.isModActive(p.modulators.dictionary.chorus.index,a,o)&&(r=e.getModValue(p.modulators.dictionary.chorus.index,a,o,!1),l=e.getModValue(p.modulators.dictionary.chorus.index,a,o,!0));let h=Math.min(1,i*r/(p.chorusRange-1)),u=Math.min(1,n*l/(p.chorusRange-1));h=.6*h+.4*Math.pow(h,6),u=.6*u+.4*Math.pow(u,6);const c=1/Math.sqrt(3*h*h+1),f=1/Math.sqrt(3*u*u+1);this.chorusVoiceMult=h,this.chorusVoiceMultDelta=(u-h)/s,this.chorusCombinedMult=c,this.chorusCombinedMultDelta=(f-c)/s}let C=0,R=0;if(S){const n=m[46],l=d[46];let h=t.echoSustain,u=t.echoSustain;e.isModActive(p.modulators.dictionary.echo.index,a,o)&&(h=Math.max(0,e.getModValue(p.modulators.dictionary.echo.index,a,o,!1)),u=Math.max(0,e.getModValue(p.modulators.dictionary.echo.index,a,o,!0)));const c=.9*Math.min(1,Math.pow(n*h/p.echoSustainRange,1.1)),f=.9*Math.min(1,Math.pow(l*u/p.echoSustainRange,1.1));this.echoMult=c,this.echoMultDelta=Math.max(0,(f-c)/s),C=Math.max(c,f);let y=t.echoDelay,v=t.echoDelay,b=!1;e.isModActive(p.modulators.dictionary["echo delay"].index,a,o)&&(y=e.getModValue(p.modulators.dictionary["echo delay"].index,a,o,!1),v=e.getModValue(p.modulators.dictionary["echo delay"].index,a,o,!0),b=!0);const g=Math.round((y+1)*p.echoDelayStepTicks*i),S=Math.round((v+1)*p.echoDelayStepTicks*i);null==this.echoDelayOffsetEnd||b?this.echoDelayOffsetStart=g:this.echoDelayOffsetStart=this.echoDelayOffsetEnd,this.echoDelayOffsetEnd=S,R=.5*(this.echoDelayOffsetStart+this.echoDelayOffsetEnd)/r,this.echoDelayOffsetRatio=0,this.echoDelayOffsetRatioDelta=1/s;const w=2*Math.PI*p.echoShelfHz/e.samplesPerSecond;He.tempFilterStartCoefficients.highShelf1stOrder(w,p.echoShelfGain),this.echoShelfA1=He.tempFilterStartCoefficients.a[1],this.echoShelfB0=He.tempFilterStartCoefficients.b[0],this.echoShelfB1=He.tempFilterStartCoefficients.b[1]}let A=0;if(w){const i=m[47],n=d[47];let r=t.reverb,l=t.reverb;e.isModActive(p.modulators.dictionary.reverb.index,a,o)&&(r=e.getModValue(p.modulators.dictionary.reverb.index,a,o,!1),l=e.getModValue(p.modulators.dictionary.reverb.index,a,o,!0)),e.isModActive(p.modulators.dictionary["song reverb"].index,a,o)&&(r*=(e.getModValue(p.modulators.dictionary["song reverb"].index,void 0,void 0,!1)-p.modulators.dictionary["song reverb"].convertRealFactor)/p.reverbRange,l*=(e.getModValue(p.modulators.dictionary["song reverb"].index,void 0,void 0,!0)-p.modulators.dictionary["song reverb"].convertRealFactor)/p.reverbRange);const h=.425*Math.min(1,Math.pow(i*r/p.reverbRange,.667)),u=.425*Math.min(1,Math.pow(n*l/p.reverbRange,.667));this.reverbMult=h,this.reverbMultDelta=(u-h)/s,A=Math.max(h,u);const c=2*Math.PI*p.reverbShelfHz/e.samplesPerSecond;He.tempFilterStartCoefficients.highShelf1stOrder(c,p.reverbShelfGain),this.reverbShelfA1=He.tempFilterStartCoefficients.a[1],this.reverbShelfB0=He.tempFilterStartCoefficients.b[0],this.reverbShelfB1=He.tempFilterStartCoefficients.b[1]}if(this.tonesAddedInThisTick)this.attentuationProgress=0,this.flushedSamples=0,this.flushingDelayLines=!1;else if(this.flushingDelayLines){F=0,q=0,P=0,E=0;let t=0;g&&(t+=e.chorusDelayBufferSize),S&&(t+=this.echoDelayLineL.length),w&&(t+=p.reverbDelayBufferSize),this.flushedSamples+=s,this.flushedSamples>=t&&(this.deactivateAfterThisTick=!0)}else{0==this.attentuationProgress||(F=0),q=0;const e=1/256,t=-Math.log2(e);let s=0;if(g&&(s+=p.chorusMaxDelay),S){const e=Math.pow(C,1/R);s+=-1/Math.log2(e)*t}if(w){const e=2*A,i=p.reverbDelayBufferSize/4/r,n=Math.pow(e,1/i);s+=-1/Math.log2(n)*t}const n=i/r/s,a=this.attentuationProgress+n;a>=1&&(E=0),this.attentuationProgress=a,this.attentuationProgress>=1&&(this.flushingDelayLines=!0)}this.eqFilterVolume=F,this.eqFilterVolumeDelta=(q-F)/s,this.delayInputMult=P,this.delayInputMultDelta=(E-P)/s,this.envelopeComputer.clearEnvelopes()}updateWaves(e,t){if(this.volumeScale=1,0==e.type)this.wave=this.aliases?p.rawChipWaves[e.chipWave].samples:p.chipWaves[e.chipWave].samples,this.isUsingAdvancedLoopControls=e.isUsingAdvancedLoopControls,this.chipWaveLoopStart=e.chipWaveLoopStart,this.chipWaveLoopEnd=e.chipWaveLoopEnd,this.chipWaveLoopMode=e.chipWaveLoopMode,this.chipWavePlayBackwards=e.chipWavePlayBackwards,this.chipWaveStartOffset=e.chipWaveStartOffset,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(6==e.type)this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(9==e.type)this.wave=this.aliases?e.customChipWave:e.customChipWaveIntegral,this.volumeScale=.05,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(2==e.type)this.wave=y(e.chipNoise,A,C),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(5==e.type)this.wave=this.harmonicsWave.getCustomWave(e.harmonicsWave,e.type),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(7==e.type)this.wave=this.harmonicsWave.getCustomWave(e.harmonicsWave,e.type),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(3==e.type)this.wave=this.spectrumWave.getCustomWave(e.spectrumWave,8),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(4==e.type){for(let t=0;t<p.drumCount;t++)this.drumsetSpectrumWaves[t].getCustomWave(e.drumsetSpectrumWaves[t],De.ee(t));this.wave=null}else 12==e.type?this.wave=this.additiveWave.getCustomWave(e.additiveWave):this.wave=null}getDrumsetWave(e){if(4==this.type)return this.drumsetSpectrumWaves[e].wave;throw new Error("Unhandled instrument type in getDrumsetWave")}static drumsetIndexReferenceDelta(e){return xe.frequencyFromPitch(p.spectrumBasePitch+6*e)/44100}static ee(e){return 15+Math.log2(De.drumsetIndexReferenceDelta(e))}}class ze{constructor(){this.instruments=[],this.muted=!1,this.singleSeamlessInstrument=null}}class He{syncSongState(){const e=this.song.getChannelCount();for(let t=this.channels.length;t<e;t++)this.channels[t]=new ze;this.channels.length=e;for(let t=0;t<e;t++){const e=this.song.channels[t],i=this.channels[t];for(let t=i.instruments.length;t<e.instruments.length;t++)i.instruments[t]=new De;if(i.instruments.length=e.instruments.length,i.muted!=e.muted&&(i.muted=e.muted,i.muted))for(const e of i.instruments)e.resetAllEffects()}}initModFilters(e){if(null!=e){e.tmpEqFilterStart=e.eqFilter,e.tmpEqFilterEnd=null;for(let t=0;t<e.getChannelCount();t++)for(let i=0;i<e.channels[t].instruments.length;i++){const s=e.channels[t].instruments[i];s.tmpEqFilterStart=s.eqFilter,s.tmpEqFilterEnd=null,s.tmpNoteFilterStart=s.noteFilter,s.tmpNoteFilterEnd=null}}}warmUpSynthesizer(e){if(null!=e){this.syncSongState();const t=this.getSamplesPerTick();for(let i=0;i<e.getChannelCount();i++)for(let s=0;s<e.channels[i].instruments.length;s++){const n=e.channels[i].instruments[s],a=this.channels[i].instruments[s];He.getInstrumentSynthFunction(n),a.vibratoTime=0,a.nextVibratoTime=0;for(let e=0;e<p.maxEnvelopeCount+1;e++)a.envelopeTime[e]=0;a.arpTime=0,a.updateWaves(n,this.samplesPerSecond),a.allocateNecessaryBuffers(this,n,t)}}var t=new Float32Array(1);this.isPlayingSong=!0,this.synthesize(t,t,1,!0),this.isPlayingSong=!1}computeLatestModValues(){if(null!=this.song&&this.song.modChannelCount>0){let e=[],t=[];this.modValues=[],this.nextModValues=[],this.modInsValues=[],this.nextModInsValues=[],this.heldMods=[];for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++){t[e]=[],this.modInsValues[e]=[],this.nextModInsValues[e]=[];for(let i=0;i<this.song.channels[e].instruments.length;i++)this.modInsValues[e][i]=[],this.nextModInsValues[e][i]=[],t[e][i]=[]}let i=this.beat*p.partsPerBeat+this.part;for(let s=this.song.pitchChannelCount+this.song.noiseChannelCount;s<this.song.getChannelCount();s++)if(!this.song.channels[s].muted){let n;for(let a=this.bar;a>=0;a--)if(n=this.song.getPattern(s,a),null!=n){let o=n.instruments[0],r=this.song.channels[s].instruments[o],l=[],h=[],u=a==this.bar?i:this.findPartsInBar(a);for(const e of n.notes)if(e.start<=u&&(null==l[p.modCount-1-e.pitches[0]]||e.end>l[p.modCount-1-e.pitches[0]]))if(e.start==u&&(l[p.modCount-1-e.pitches[0]]=e.start,h[p.modCount-1-e.pitches[0]]=e.pins[0].size),e.end<=u)l[p.modCount-1-e.pitches[0]]=e.end,h[p.modCount-1-e.pitches[0]]=e.pins[e.pins.length-1].size;else{l[p.modCount-1-e.pitches[0]]=u;for(let t=0;t<e.pins.length;t++)if(e.pins[t].time+e.start>u){const i=e.pins[t].time-e.pins[t-1].time,s=u-e.start-e.pins[t-1].time,n=e.pins[t].size-e.pins[t-1].size;h[p.modCount-1-e.pitches[0]]=Math.round(e.pins[t-1].size+n*s/i),t=e.pins.length}}for(let i=0;i<p.modCount;i++)if(null!=l[i])if(p.modulators[r.modulators[i]].forSong)(null==e[r.modulators[i]]||a*p.partsPerBeat*this.song.beatsPerBar+l[i]>e[r.modulators[i]])&&(this.setModValue(h[i],h[i],r.modChannels[i],r.modInstruments[i],r.modulators[i]),e[r.modulators[i]]=a*p.partsPerBeat*this.song.beatsPerBar+l[i]);else{let e=[];if(r.modInstruments[i]==this.song.channels[r.modChannels[i]].instruments.length)for(let t=0;t<this.song.channels[r.modChannels[i]].instruments.length;t++)e.push(t);else if(r.modInstruments[i]>this.song.channels[r.modChannels[i]].instruments.length){const t=this.song.getPattern(r.modChannels[i],a);null!=t&&(e=t.instruments)}else e.push(r.modInstruments[i]);for(let s=0;s<e.length;s++){const n=r.modulators[i]==p.modulators.dictionary["eq filter"].index,o=r.modulators[i]==p.modulators.dictionary["note filter"].index,u=r.modulators[i]==p.modulators.dictionary["song eq"].index;let c=r.modulators[i];if(n||u?c=p.modulators.length+(0|r.modFilterTypes[i]):o&&(c=p.modulators.length+1+2*p.filterMaxPoints+(0|r.modFilterTypes[i])),null==t[r.modChannels[i]][e[s]][c]||a*p.partsPerBeat*this.song.beatsPerBar+l[i]>t[r.modChannels[i]][e[s]][c]){if(u){let e=this.song;if(0==r.modFilterTypes[i])e.tmpEqFilterStart=e.eqSubFilters[h[i]];else{for(let t=0;t<p.filterMorphCount;t++)null!=e.tmpEqFilterStart&&e.tmpEqFilterStart==e.eqSubFilters[t]&&(e.tmpEqFilterStart=new Me,e.tmpEqFilterStart.fromJsonObject(e.eqSubFilters[t].toJsonObject()),t=p.filterMorphCount);null!=e.tmpEqFilterStart&&Math.floor((r.modFilterTypes[i]-1)/2)<e.tmpEqFilterStart.controlPointCount&&(r.modFilterTypes[i]%2?e.tmpEqFilterStart.controlPoints[Math.floor((r.modFilterTypes[i]-1)/2)].freq=h[i]:e.tmpEqFilterStart.controlPoints[Math.floor((r.modFilterTypes[i]-1)/2)].gain=h[i])}e.tmpEqFilterEnd=e.tmpEqFilterStart}else if(n){let t=this.song.channels[r.modChannels[i]].instruments[e[s]];if(0==r.modFilterTypes[i])t.tmpEqFilterStart=t.eqSubFilters[h[i]];else{for(let e=0;e<p.filterMorphCount;e++)null!=t.tmpEqFilterStart&&t.tmpEqFilterStart==t.eqSubFilters[e]&&(t.tmpEqFilterStart=new Me,t.tmpEqFilterStart.fromJsonObject(t.eqSubFilters[e].toJsonObject()),e=p.filterMorphCount);null!=t.tmpEqFilterStart&&Math.floor((r.modFilterTypes[i]-1)/2)<t.tmpEqFilterStart.controlPointCount&&(r.modFilterTypes[i]%2?t.tmpEqFilterStart.controlPoints[Math.floor((r.modFilterTypes[i]-1)/2)].freq=h[i]:t.tmpEqFilterStart.controlPoints[Math.floor((r.modFilterTypes[i]-1)/2)].gain=h[i])}t.tmpEqFilterEnd=t.tmpEqFilterStart}else if(o){let t=this.song.channels[r.modChannels[i]].instruments[e[s]];if(0==r.modFilterTypes[i])t.tmpNoteFilterStart=t.noteSubFilters[h[i]];else{for(let e=0;e<p.filterMorphCount;e++)null!=t.tmpNoteFilterStart&&t.tmpNoteFilterStart==t.noteSubFilters[e]&&(t.tmpNoteFilterStart=new Me,t.tmpNoteFilterStart.fromJsonObject(t.noteSubFilters[e].toJsonObject()),e=p.filterMorphCount);null!=t.tmpNoteFilterStart&&Math.floor((r.modFilterTypes[i]-1)/2)<t.tmpNoteFilterStart.controlPointCount&&(r.modFilterTypes[i]%2?t.tmpNoteFilterStart.controlPoints[Math.floor((r.modFilterTypes[i]-1)/2)].freq=h[i]:t.tmpNoteFilterStart.controlPoints[Math.floor((r.modFilterTypes[i]-1)/2)].gain=h[i])}t.tmpNoteFilterEnd=t.tmpNoteFilterStart}else this.setModValue(h[i],h[i],r.modChannels[i],e[s],c);t[r.modChannels[i]][e[s]][c]=a*p.partsPerBeat*this.song.beatsPerBar+l[i]}}}}}}}determineInvalidModulators(e){if(null!=this.song)for(let t=0;t<p.modCount;t++){if(e.invalidModulators[t]=!0,-1==e.modChannels[t]){0!=e.modulators[t]&&(e.invalidModulators[t]=!1);continue}const i=this.song.channels[e.modChannels[t]];if(null==i)continue;let s=[];s=e.modInstruments[t]>=i.instruments.length?i.instruments:[i.instruments[e.modInstruments[t]]];for(let i=0;i<s.length;i++){const n=s[i];if(null==n)continue;const a=p.modulators[e.modulators[t]].name;12!=p.modulators[e.modulators[t]].associatedEffect&&!(n.effects&1<<p.modulators[e.modulators[t]].associatedEffect)||1!=n.type&&11!=n.type&&("fm slider 1"==a||"fm slider 2"==a||"fm slider 3"==a||"fm slider 4"==a||"fm feedback"==a)||11!=n.type&&("fm slider 5"==a||"fm slider 6"==a)||6!=n.type&&8!=n.type&&("pulse width"==a||"decimal offset"==a)||8!=n.type&&("dynamism"==a||"spread"==a||"saw shape"==a)||!n.getChord().arpeggiates&&("arp speed"==a||"reset arp"==a)||n.eqFilterType&&"eq filter"==a||!n.eqFilterType&&("eq filt cut"==a||"eq filt peak"==a)||"eq filter"==a&&Math.floor((e.modFilterTypes[t]+1)/2)>n.getLargestControlPointCount(!1)||n.noteFilterType&&"note filter"==a||!n.noteFilterType&&("note filt cut"==a||"note filt peak"==a)||"note filter"==a&&Math.floor((e.modFilterTypes[t]+1)/2)>n.getLargestControlPointCount(!0)||(e.invalidModulators[t]=!1,i=s.length)}}}static operatorAmplitudeCurve(e){return(Math.pow(16,e/15)-1)/15}get playing(){return this.isPlayingSong}get recording(){return this.isRecording}get playhead(){return this.playheadInternal}set playhead(e){if(null!=this.song){this.playheadInternal=Math.max(0,Math.min(this.song.barCount,e));let t=this.playheadInternal;this.bar=Math.floor(t),t=this.song.beatsPerBar*(t-this.bar),this.beat=Math.floor(t),t=p.partsPerBeat*(t-this.beat),this.part=Math.floor(t),t=p.ticksPerPart*(t-this.part),this.tick=Math.floor(t),this.tickSampleCountdown=0,this.isAtStartOfTick=!0,this.prevBar=null}}getSamplesPerBar(){if(null==this.song)throw new Error;return this.getSamplesPerTick()*p.ticksPerPart*p.partsPerBeat*this.song.beatsPerBar}getTicksIntoBar(){return(this.beat*p.partsPerBeat+this.part)*p.ticksPerPart+this.tick}getCurrentPart(){return this.beat*p.partsPerBeat+this.part}findPartsInBar(e){if(null==this.song)return 0;let t=p.partsPerBeat*this.song.beatsPerBar;for(let i=this.song.pitchChannelCount+this.song.noiseChannelCount;i<this.song.getChannelCount();i++){let s=this.song.getPattern(i,e);if(null!=s){let e=this.song.channels[i].instruments[s.instruments[0]];for(let i=0;i<p.modCount;i++)if(e.modulators[i]==p.modulators.dictionary["next bar"].index)for(const e of s.notes)e.pitches[0]==p.modCount-1-i&&t>e.start&&(t=e.start)}}return t}getTotalSamples(e,t,i){if(null==this.song)return-1;let s=e?0:this.song.loopStart,n=t?this.song.barCount:this.song.loopStart+this.song.loopLength,a=!1,o=!1,r=this.song.tempo;for(let e=this.song.getChannelCount()-1;e>=this.song.pitchChannelCount+this.song.noiseChannelCount;e--)for(let t=s;t<n;t++){let i=this.song.getPattern(e,t);if(null!=i){let t=this.song.channels[e].instruments[i.instruments[0]];for(let e=0;e<p.modCount;e++)t.modulators[e]==p.modulators.dictionary.tempo.index&&(a=!0),t.modulators[e]==p.modulators.dictionary["next bar"].index&&(o=!0)}}if(s>0){let e=null,t=0;for(let i=s-1;i>=0;i--){for(let s=this.song.getChannelCount()-1;s>=this.song.pitchChannelCount+this.song.noiseChannelCount;s--){let n=this.song.getPattern(s,i);if(null!=n){let a=n.instruments[0],o=this.song.channels[s].instruments[a],r=this.findPartsInBar(i);for(const i of n.notes)if(o.modulators[p.modCount-1-i.pitches[0]]==p.modulators.dictionary.tempo.index&&i.start<r&&(null==e||i.end>e))if(i.end<=r)e=i.end,t=i.pins[i.pins.length-1].size;else{e=r;for(let e=0;e<i.pins.length;e++)if(i.pins[e].time+i.start>r){const s=i.pins[e].time-i.pins[e-1].time,n=r-i.start-i.pins[e-1].time,a=i.pins[e].size-i.pins[e-1].size;t=Math.round(i.pins[e-1].size+a*n/s),e=i.pins.length}}}}null!=e&&(r=t+p.modulators.dictionary.tempo.convertRealFactor,i=-1)}}if(a||o){let e=s,t=!1,l=0;for(;!t;){let s=p.partsPerBeat*this.song.beatsPerBar,h=0;if(o&&(s=this.findPartsInBar(e)),a){let t=!1;for(let i=this.song.getChannelCount()-1;i>=this.song.pitchChannelCount+this.song.noiseChannelCount;i--)if(0==t){let n=this.song.getPattern(i,e);if(null!=n){let e=this.song.channels[i].instruments[n.instruments[0]];for(let i=0;i<p.modCount;i++)if(0==t&&e.modulators[i]==p.modulators.dictionary.tempo.index&&n.notes.find((e=>e.pitches[0]==p.modCount-1-i))){t=!0,n.notes.sort((function(e,t){return e.start==t.start?e.pitches[0]-t.pitches[0]:e.start-t.start}));for(const e of n.notes)if(e.pitches[0]==p.modCount-1-i&&(l+=Math.min(s-h,e.start-h)*p.ticksPerPart*this.getSamplesPerTickSpecificBPM(r),e.start<s))for(let t=1;t<e.pins.length;t++){if(e.pins[t-1].time+e.start<=s){const i=p.ticksPerPart*Math.min(s-(e.start+e.pins[t-1].time),e.pins[t].time-e.pins[t-1].time),n=e.pins[t-1].size+p.modulators.dictionary.tempo.convertRealFactor;let a=e.pins[t].size+p.modulators.dictionary.tempo.convertRealFactor;e.pins[t].time+e.start>s&&(a=e.pins[t-1].size+(e.pins[t].size-e.pins[t-1].size)*(s-(e.start+e.pins[t-1].time))/(e.pins[t].time-e.pins[t-1].time)+p.modulators.dictionary.tempo.convertRealFactor);let o=p.partsPerBeat*p.ticksPerPart/60;l+=a!=n?-this.samplesPerSecond*i*(Math.log(o*a*i)-Math.log(o*n*i))/(o*(n-a)):i*this.getSamplesPerTickSpecificBPM(a),r=a}h=Math.min(e.start+e.pins[t].time,s)}}}}}l+=(s-h)*p.ticksPerPart*this.getSamplesPerTickSpecificBPM(r),e++,0!=i&&e==this.song.loopStart+this.song.loopLength&&(e=this.song.loopStart,i>0&&i--),e>=n&&(t=!0)}return Math.ceil(l)}return this.getSamplesPerBar()*this.getTotalBars(e,t,i)}getTotalBars(e,t,i=this.loopRepeatCount){if(null==this.song)throw new Error;let s=this.song.loopLength*(i+1);return e&&(s+=this.song.loopStart),t&&(s+=this.song.barCount-(this.song.loopStart+this.song.loopLength)),s}constructor(e=null){this.samplesPerSecond=44100,this.song=null,this.preferLowerLatency=!1,this.anticipatePoorPerformance=!1,this.liveInputDuration=0,this.liveBassInputDuration=0,this.liveInputStarted=!1,this.liveBassInputStarted=!1,this.liveInputPitches=[],this.liveBassInputPitches=[],this.liveInputChannel=0,this.liveBassInputChannel=0,this.liveInputInstruments=[],this.liveBassInputInstruments=[],this.loopRepeatCount=-1,this.volume=1,this.oscRefreshEventTimer=0,this.oscEnabled=!0,this.enableMetronome=!1,this.countInMetronome=!1,this.renderingSong=!1,this.heldMods=[],this.wantToSkip=!1,this.playheadInternal=0,this.bar=0,this.prevBar=null,this.nextBar=null,this.beat=0,this.part=0,this.tick=0,this.isAtStartOfTick=!0,this.isAtEndOfTick=!0,this.tickSampleCountdown=0,this.modValues=[],this.modInsValues=[],this.nextModValues=[],this.nextModInsValues=[],this.isPlayingSong=!1,this.isRecording=!1,this.liveInputEndTime=0,this.browserAutomaticallyClearsAudioBuffer=!0,this.tempDrumSetControlPoint=new we,this.tempFrequencyResponse=new W,this.loopBarStart=-1,this.loopBarEnd=-1,this.channels=[],this.tonePool=new G,this.tempMatchedPitchTones=Array(p.maxChordSize).fill(null),this.startedMetronome=!1,this.metronomeSamplesRemaining=-1,this.metronomeAmplitude=0,this.metronomePrevAmplitude=0,this.metronomeFilter=0,this.limit=0,this.songEqFilterVolume=1,this.songEqFilterVolumeDelta=0,this.songEqFiltersL=[],this.songEqFiltersR=[],this.songEqFilterCount=0,this.initialSongEqFilterInput1L=0,this.initialSongEqFilterInput2L=0,this.initialSongEqFilterInput1R=0,this.initialSongEqFilterInput2R=0,this.tempMonoInstrumentSampleBuffer=null,this.audioCtx=null,this.scriptNode=null,this.audioProcessCallback=e=>{const t=e.outputBuffer,i=t.getChannelData(0),s=t.getChannelData(1);if(!this.browserAutomaticallyClearsAudioBuffer||0==i[0]&&0==s[0]&&0==i[t.length-1]&&0==s[t.length-1]||(this.browserAutomaticallyClearsAudioBuffer=!1),!this.browserAutomaticallyClearsAudioBuffer){const e=t.length;for(let t=0;t<e;t++)i[t]=0,s[t]=0}!this.isPlayingSong&&performance.now()>=this.liveInputEndTime?this.deactivateAudio():(this.synthesize(i,s,t.length,this.isPlayingSong),this.oscEnabled&&(this.oscRefreshEventTimer<=0?(N.raise("oscillascopeUpdate",i,s),this.oscRefreshEventTimer=2):this.oscRefreshEventTimer--))},this.computeDelayBufferSizes(),null!=e&&this.setSong(e)}setSong(e){"string"==typeof e?this.song=new qe(e):e instanceof qe&&(this.song=e),this.prevBar=null}computeDelayBufferSizes(){this.panningDelayBufferSize=He.fittingPowerOfTwo(this.samplesPerSecond*p.panDelaySecondsMax),this.panningDelayBufferMask=this.panningDelayBufferSize-1,this.chorusDelayBufferSize=He.fittingPowerOfTwo(this.samplesPerSecond*p.chorusMaxDelay),this.chorusDelayBufferMask=this.chorusDelayBufferSize-1}activateAudio(){const e=this.anticipatePoorPerformance?this.preferLowerLatency?2048:4096:this.preferLowerLatency?512:2048;if(null==this.audioCtx||null==this.scriptNode||this.scriptNode.bufferSize!=e){null!=this.scriptNode&&this.deactivateAudio();const t=this.anticipatePoorPerformance?this.preferLowerLatency?"balanced":"playback":this.preferLowerLatency?"interactive":"balanced";this.audioCtx=this.audioCtx||new(window.AudioContext||window.webkitAudioContext)({latencyHint:t}),this.samplesPerSecond=this.audioCtx.sampleRate,this.scriptNode=this.audioCtx.createScriptProcessor?this.audioCtx.createScriptProcessor(e,0,2):this.audioCtx.createJavaScriptNode(e,0,2),this.scriptNode.onaudioprocess=this.audioProcessCallback,this.scriptNode.channelCountMode="explicit",this.scriptNode.channelInterpretation="speakers",this.scriptNode.connect(this.audioCtx.destination),this.computeDelayBufferSizes()}this.audioCtx.resume()}deactivateAudio(){null!=this.audioCtx&&null!=this.scriptNode&&(this.scriptNode.disconnect(this.audioCtx.destination),this.scriptNode=null,this.audioCtx.close&&this.audioCtx.close(),this.audioCtx=null)}maintainLiveInput(){this.activateAudio(),this.liveInputEndTime=performance.now()+1e4}play(){this.isPlayingSong||(this.initModFilters(this.song),this.computeLatestModValues(),this.activateAudio(),this.warmUpSynthesizer(this.song),this.isPlayingSong=!0)}pause(){if(this.isPlayingSong&&(this.isPlayingSong=!1,this.isRecording=!1,this.modValues=[],this.nextModValues=[],this.heldMods=[],null!=this.song)){this.song.inVolumeCap=0,this.song.outVolumeCap=0;for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)this.modInsValues[e]=[],this.nextModInsValues[e]=[]}}startRecording(){this.preferLowerLatency=!0,this.isRecording=!0,this.play()}resetEffects(){if(this.limit=0,this.freeAllTones(),null!=this.song)for(const e of this.channels)for(const t of e.instruments)t.resetAllEffects()}setModValue(e,t,i,s,n){let a=e+p.modulators[n].convertRealFactor,o=t+p.modulators[n].convertRealFactor;return p.modulators[n].forSong?null!=this.modValues[n]&&this.modValues[n]==a&&this.nextModValues[n]==o||(this.modValues[n]=a,this.nextModValues[n]=o):null!=this.modInsValues[i][s][n]&&this.modInsValues[i][s][n]==a&&this.nextModInsValues[i][s][n]==o||(this.modInsValues[i][s][n]=a,this.nextModInsValues[i][s][n]=o),a}getModValue(e,t,i,s){if(p.modulators[e].forSong){if(null!=this.modValues[e]&&null!=this.nextModValues[e])return s?this.nextModValues[e]:this.modValues[e]}else if(null!=t&&null!=i&&null!=this.modInsValues[t][i][e]&&null!=this.nextModInsValues[t][i][e])return s?this.nextModInsValues[t][i][e]:this.modInsValues[t][i][e];return-1}isAnyModActive(e,t){for(let i=0;i<p.modulators.length;i++)if(null!=this.modValues&&null!=this.modValues[i]||null!=this.modInsValues&&null!=this.modInsValues[e]&&null!=this.modInsValues[e][t]&&null!=this.modInsValues[e][t][i])return!0;return!1}unsetMod(e,t,i){if(this.isModActive(e)||null!=t&&null!=i&&this.isModActive(e,t,i)){this.modValues[e]=null,this.nextModValues[e]=null;for(let s=0;s<this.heldMods.length;s++)null!=t&&null!=i?this.heldMods[s].channelIndex==t&&this.heldMods[s].instrumentIndex==i&&this.heldMods[s].setting==e&&this.heldMods.splice(s,1):this.heldMods[s].setting==e&&this.heldMods.splice(s,1);null!=t&&null!=i&&(this.modInsValues[t][i][e]=null,this.nextModInsValues[t][i][e]=null)}}isFilterModActive(e,t,i,s){var n;const a=this.song.channels[t].instruments[i];if(e){if(a.noteFilterType)return!1;if(null!=a.tmpNoteFilterEnd)return!0}else if(s){if(null!=(null===(n=null==this?void 0:this.song)||void 0===n?void 0:n.tmpEqFilterEnd))return!0}else{if(a.eqFilterType)return!1;if(null!=a.tmpEqFilterEnd)return!0}return!1}isModActive(e,t,i){return p.modulators[e].forSong?null!=this.modValues&&null!=this.modValues[e]:null!=t&&null!=i&&null!=this.modInsValues&&null!=this.modInsValues[t]&&null!=this.modInsValues[t][i]&&null!=this.modInsValues[t][i][e]}forceHoldMods(e,t,i,s){let n=!1;for(let a=0;a<this.heldMods.length;a++)this.heldMods[a].channelIndex==t&&this.heldMods[a].instrumentIndex==i&&this.heldMods[a].setting==s&&(this.heldMods[a].volume=e,this.heldMods[a].holdFor=24,n=!0);n||this.heldMods.push({volume:e,channelIndex:t,instrumentIndex:i,setting:s,holdFor:24})}snapToStart(){this.bar=0,this.resetEffects(),this.snapToBar()}goToBar(e){this.bar=e,this.resetEffects(),this.playheadInternal=this.bar}snapToBar(){this.playheadInternal=this.bar,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0}jumpIntoLoop(){if(this.song&&(this.bar<this.song.loopStart||this.bar>=this.song.loopStart+this.song.loopLength)){const e=this.bar;this.bar=this.song.loopStart,this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}}goToNextBar(){if(!this.song)return;this.prevBar=this.bar;const e=this.bar;this.bar++,this.bar>=this.song.barCount&&(this.bar=0),this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}goToPrevBar(){if(!this.song)return;this.prevBar=null;const e=this.bar;this.bar--,(this.bar<0||this.bar>=this.song.barCount)&&(this.bar=this.song.barCount-1),this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}getNextBar(){let e=this.bar+1;return this.isRecording?e>=this.song.barCount&&(e=this.song.barCount-1):this.bar!=this.loopBarEnd||this.renderingSong?0!=this.loopRepeatCount&&e==Math.max(this.loopBarEnd+1,this.song.loopStart+this.song.loopLength)&&(e=this.song.loopStart):e=this.loopBarStart,e}skipBar(){if(!this.song)return;const e=this.getSamplesPerTick();this.prevBar=this.bar,this.loopBarEnd!=this.bar?this.bar++:this.bar=this.loopBarStart,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=e,this.isAtStartOfTick=!0,0!=this.loopRepeatCount&&this.bar==Math.max(this.song.loopStart+this.song.loopLength,this.loopBarEnd)&&(this.bar=this.song.loopStart,-1!=this.loopBarStart&&(this.bar=this.loopBarStart),this.loopRepeatCount>0&&this.loopRepeatCount--)}computeSongState(e){if(null==this.song)return;const t=Math.ceil(e),i=this.samplesPerSecond;let s=1;if(this.song.eqFilterType){const e=this.song.eqFilter;null==this.song.eqSubFilters[1]&&(this.song.eqSubFilters[1]=new Me),this.song.eqSubFilters[1];let n,a=this.song.eqFilterSimpleCut,o=this.song.eqFilterSimplePeak;this.song.eqFilterSimpleCut,this.song.eqFilterSimplePeak,e.convertLegacySettingsForSynth(a,o,!0),n=e.controlPoints[0],n.toCoefficients(He.tempFilterStartCoefficients,i,1,1),this.songEqFiltersL.length<1&&(this.songEqFiltersL[0]=new V),this.songEqFiltersL[0].loadCoefficientsWithGradient(He.tempFilterStartCoefficients,He.tempFilterStartCoefficients,1/t,0==n.type),this.songEqFiltersR.length<1&&(this.songEqFiltersR[0]=new V),this.songEqFiltersR[0].loadCoefficientsWithGradient(He.tempFilterStartCoefficients,He.tempFilterStartCoefficients,1/t,0==n.type),s*=n.getVolumeCompensationMult(),this.songEqFilterCount=1,s=Math.min(3,s)}else{const e=null!=this.song.tmpEqFilterStart?this.song.tmpEqFilterStart:this.song.eqFilter;for(let n=0;n<e.controlPointCount;n++){let a=e.controlPoints[n],o=null!=this.song.tmpEqFilterEnd&&null!=this.song.tmpEqFilterEnd.controlPoints[n]?this.song.tmpEqFilterEnd.controlPoints[n]:e.controlPoints[n];a.type!=o.type&&(a=o),a.toCoefficients(He.tempFilterStartCoefficients,i,1,1),o.toCoefficients(He.tempFilterEndCoefficients,i,1,1),this.songEqFiltersL.length<=n&&(this.songEqFiltersL[n]=new V),this.songEqFiltersL[n].loadCoefficientsWithGradient(He.tempFilterStartCoefficients,He.tempFilterEndCoefficients,1/t,0==a.type),this.songEqFiltersR.length<=n&&(this.songEqFiltersR[n]=new V),this.songEqFiltersR[n].loadCoefficientsWithGradient(He.tempFilterStartCoefficients,He.tempFilterEndCoefficients,1/t,0==a.type),s*=a.getVolumeCompensationMult()}this.songEqFilterCount=e.controlPointCount,s=Math.min(3,s)}let n=s,a=s;this.songEqFilterVolume=n,this.songEqFilterVolumeDelta=(a-n)/t}synthesize(e,t,i,s=!0){if(null==this.song){for(let s=0;s<i;s++)e[s]=0,t[s]=0;return void this.deactivateAudio()}const n=this.song;this.song.inVolumeCap=0,this.song.outVolumeCap=0;let a=this.getSamplesPerTick(),o=!1;(this.tickSampleCountdown<=0||this.tickSampleCountdown>a)&&(this.tickSampleCountdown=a,this.isAtStartOfTick=!0),s&&(this.beat>=n.beatsPerBar&&(this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=a,this.isAtStartOfTick=!0,this.prevBar=this.bar,this.bar=this.getNextBar(),this.bar<=this.prevBar&&this.loopRepeatCount>0&&this.loopRepeatCount--),this.bar>=n.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(o=!0,this.pause()))),this.syncSongState(),(null==this.tempMonoInstrumentSampleBuffer||this.tempMonoInstrumentSampleBuffer.length<i)&&(this.tempMonoInstrumentSampleBuffer=new Float32Array(i));const r=+this.volume,l=1-Math.pow(.5,this.song.limitDecay/this.samplesPerSecond),h=1-Math.pow(.5,this.song.limitRise/this.samplesPerSecond);let u=+this.limit,c=[],f=-1,m=0;for(;m<i&&!o;){this.nextBar=this.getNextBar(),this.nextBar>=n.barCount&&(this.nextBar=null);const d=i-m,y=Math.ceil(this.tickSampleCountdown),v=Math.min(y,d),b=m+v;if(this.isPlayingSong||this.renderingSong){for(let e=n.pitchChannelCount+n.noiseChannelCount;e<n.getChannelCount();e++){const t=n.channels[e],i=this.channels[e];this.determineCurrentActiveTones(n,e,a,s);for(let s=0;s<t.instruments.length;s++){const t=i.instruments[s];for(let i=0;i<t.activeModTones.count();i++){const s=t.activeModTones.get(i),o=n.channels[e].instruments[s.instrumentIndex];let r=p.modCount-1-s.pitches[0];(o.modulators[r]==p.modulators.dictionary["note filter"].index||o.modulators[r]==p.modulators.dictionary["eq filter"].index)&&null!=o.modFilterTypes[r]&&o.modFilterTypes[r]>0||this.playModTone(n,e,a,m,v,s,!1,!1)}}}for(let e=n.pitchChannelCount+n.noiseChannelCount;e<n.getChannelCount();e++){const t=n.channels[e],i=this.channels[e];for(let s=0;s<t.instruments.length;s++){const t=i.instruments[s];for(let i=0;i<t.activeModTones.count();i++){const s=t.activeModTones.get(i),o=n.channels[e].instruments[s.instrumentIndex];let r=p.modCount-1-s.pitches[0];(o.modulators[r]==p.modulators.dictionary["note filter"].index||o.modulators[r]==p.modulators.dictionary["eq filter"].index)&&null!=o.modFilterTypes[r]&&o.modFilterTypes[r]>0&&this.playModTone(n,e,a,m,v,s,!1,!1)}}}}if(this.wantToSkip){let e=c.includes(this.bar);if(e&&m==f)return void this.pause();-1==f&&(f=m),e||c.push(this.bar),this.wantToSkip=!1,this.skipBar()}else{this.computeSongState(a);for(let i=0;i<n.pitchChannelCount+n.noiseChannelCount;i++){const o=n.channels[i],r=this.channels[i];this.isAtStartOfTick&&(this.determineCurrentActiveTones(n,i,a,s&&!this.countInMetronome),this.determineLiveInputTones(n,i,a));for(let s=0;s<o.instruments.length;s++){const l=o.instruments[s],h=r.instruments[s];if(this.isAtStartOfTick){let e=h.activeTones.count()+h.liveInputTones.count();for(let t=0;t<h.releasedTones.count();t++){const s=h.releasedTones.get(t);if(s.ticksSinceReleased>=Math.abs(l.getFadeOutTicks())){this.freeReleasedTone(h,t),t--;continue}const o=e>=p.maximumTonesPerChannel;this.computeTone(n,i,a,s,!0,o),e++}h.awake&&(h.computed||h.compute(this,l,a,Math.ceil(a),null,i,s),h.computed=!1,h.envelopeComputer.clearEnvelopes())}for(let e=0;e<h.activeTones.count();e++){const t=h.activeTones.get(e);this.playTone(i,m,v,t)}for(let e=0;e<h.liveInputTones.count();e++){const t=h.liveInputTones.get(e);this.playTone(i,m,v,t)}for(let e=0;e<h.releasedTones.count();e++){const t=h.releasedTones.get(e);this.playTone(i,m,v,t)}h.awake&&He.effectsSynth(this,e,t,m,v,h);const u=this.tickSampleCountdown,c=1-u/a,f=1-(u-v)/a,d=(this.beat*p.partsPerBeat+this.part)*p.ticksPerPart+this.tick,y=d/p.ticksPerPart,b=(d+1)/p.ticksPerPart,g=y+(b-y)*c,S=y+(b-y)*f;let w=l.vibratoSpeed;h.vibratoTime=h.nextVibratoTime,this.isModActive(p.modulators.dictionary["vibrato speed"].index,i,s)&&(w=this.getModValue(p.modulators.dictionary["vibrato speed"].index,i,s)),0==w?(h.vibratoTime=0,h.nextVibratoTime=0):h.nextVibratoTime+=.1*w*(S-g)}}if(this.enableMetronome||this.countInMetronome)if(0==this.part){if(!this.startedMetronome){const e=n.beatsPerBar>4&&n.beatsPerBar%2==0&&this.beat==n.beatsPerBar/2,t=0==this.beat?8:e?6:4,i=0==this.beat?1600:e?1200:800,s=0==this.beat?.06:e?.05:.04,a=this.samplesPerSecond/i,o=2*Math.PI/a;this.metronomeSamplesRemaining=Math.floor(a*t),this.metronomeFilter=2*Math.cos(o),this.metronomeAmplitude=s*Math.sin(o),this.metronomePrevAmplitude=0,this.startedMetronome=!0}if(this.metronomeSamplesRemaining>0){const i=Math.min(b,m+this.metronomeSamplesRemaining);this.metronomeSamplesRemaining-=i-m;for(let s=m;s<i;s++){e[s]+=this.metronomeAmplitude,t[s]+=this.metronomeAmplitude;const i=this.metronomeFilter*this.metronomeAmplitude-this.metronomePrevAmplitude;this.metronomePrevAmplitude=this.metronomeAmplitude,this.metronomeAmplitude=i}}}else this.startedMetronome=!1;for(let i=m;i<b;i++){{let s=this.songEqFiltersL,n=this.songEqFiltersR;const a=0|this.songEqFilterCount;let o=+this.initialSongEqFilterInput1L,r=+this.initialSongEqFilterInput2L,l=+this.initialSongEqFilterInput1R,h=+this.initialSongEqFilterInput2R;const p=He.applyFilters;let u=+this.songEqFilterVolume;const c=+this.songEqFilterVolumeDelta,f=e[i];let m=f;m=p(m,o,r,a,s),r=o,o=f,m*=u,e[i]=m;const d=t[i];let y=d;y=p(y,l,h,a,n),h=l,l=d,y*=u,t[i]=y,u+=c,this.sanitizeFilters(s),o<100&&r<100||(o=0,r=0),Math.abs(o)<J&&(o=0),Math.abs(r)<J&&(r=0),this.initialSongEqFilterInput1L=o,this.initialSongEqFilterInput2L=r,this.sanitizeFilters(n),l<100&&h<100||(l=0,h=0),Math.abs(l)<J&&(l=0),Math.abs(h)<J&&(h=0),this.initialSongEqFilterInput1R=l,this.initialSongEqFilterInput2R=h}const s=e[i]*n.masterGain*n.masterGain,a=t[i]*n.masterGain*n.masterGain,o=s<0?-s:s,p=a<0?-a:a,c=o>p?o:p;this.song.inVolumeCap=this.song.inVolumeCap>c?this.song.inVolumeCap:c;const f=+(c>n.compressionThreshold)+ +(c>n.limitThreshold),m=+(0==f)*((.8*(c+1-n.compressionThreshold)+.25)*n.compressionRatio+1.05*(1-n.compressionRatio))+1.05*+(1==f)+ +(2==f)*(1.05*((c+1-n.limitThreshold)*n.limitRatio+(1-n.limitThreshold)));u+=(m-u)*(u<m?h:l);const d=r/(u>=1?1.05*u:.8*u+.25);e[i]=s*d,t[i]=a*d,this.song.outVolumeCap=this.song.outVolumeCap>c*d?this.song.outVolumeCap:c*d}if(m+=v,this.isAtStartOfTick=!1,this.tickSampleCountdown-=v,this.tickSampleCountdown<=0){this.isAtStartOfTick=!0;for(const e of this.channels)for(const t of e.instruments){for(let e=0;e<t.releasedTones.count();e++){const i=t.releasedTones.get(e);i.isOnLastTick?(this.freeReleasedTone(t,e),e--):i.ticksSinceReleased++}t.deactivateAfterThisTick&&t.deactivate(),t.tonesAddedInThisTick=!1}const e=this.getTicksIntoBar(),t=a/this.samplesPerSecond,i=this.getCurrentPart();for(let s=0;s<this.song.pitchChannelCount+this.song.noiseChannelCount;s++)for(let n=0;n<this.song.channels[s].instruments.length;n++){let a=this.song.channels[s].instruments[n],o=this.channels[s].instruments[n];const r=o.envelopeComputer,l=[];for(let e=0;e<p.maxEnvelopeCount;e++)l[e]=0;for(let e=0;e<a.envelopeCount;e++){let t=a.envelopeSpeed,i=a.envelopes[e].perEnvelopeSpeed;this.isModActive(p.modulators.dictionary["individual envelope speed"].index,s,n)&&null!=a.envelopes[e].tempEnvelopeSpeed&&(i=a.envelopes[e].tempEnvelopeSpeed),this.isModActive(p.modulators.dictionary["envelope speed"].index,s,n)?(t=Math.max(0,Math.min(p.arpSpeedScale.length-1,this.getModValue(p.modulators.dictionary["envelope speed"].index,s,n,!1))),Number.isInteger(t)?o.envelopeTime[e]+=p.arpSpeedScale[t]*i:o.envelopeTime[e]+=((1-t%1)*p.arpSpeedScale[Math.floor(t)]+t%1*p.arpSpeedScale[Math.ceil(t)])*i):o.envelopeTime[e]+=p.arpSpeedScale[t]*i}let h=new Te;h=o.activeTones.count()>0?o.activeTones.peakBack():new Te,r.computeEnvelopes(a,i,o.envelopeTime,e,t,h,l,o,this);const u=r.envelopeStarts;let c=a.arpeggioSpeed;if(this.isModActive(p.modulators.dictionary["arp speed"].index,s,n))c=Y(0,p.arpSpeedScale.length,this.getModValue(p.modulators.dictionary["arp speed"].index,s,n,!1)),Number.isInteger(c)?o.arpTime+=p.arpSpeedScale[c]:o.arpTime+=(1-c%1)*p.arpSpeedScale[Math.floor(c)]+c%1*p.arpSpeedScale[Math.ceil(c)];else{const e=u[48];c=Y(0,p.arpSpeedScale.length,e*c),Number.isInteger(c)?o.arpTime+=p.arpSpeedScale[c]:o.arpTime+=(1-c%1)*p.arpSpeedScale[Math.floor(c)]+c%1*p.arpSpeedScale[Math.ceil(c)]}r.clearEnvelopes()}for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)for(let t=0;t<this.song.channels[e].instruments.length;t++){let i=this.song.channels[e].instruments[t];null!=i.tmpEqFilterEnd?i.tmpEqFilterStart=i.tmpEqFilterEnd:i.tmpEqFilterStart=i.eqFilter,null!=i.tmpNoteFilterEnd?i.tmpNoteFilterStart=i.tmpNoteFilterEnd:i.tmpNoteFilterStart=i.noteFilter}if(null!=n.tmpEqFilterEnd?n.tmpEqFilterStart=n.tmpEqFilterEnd:n.tmpEqFilterStart=n.eqFilter,this.tick++,this.tickSampleCountdown+=a,this.tick==p.ticksPerPart){this.tick=0,this.part++,this.liveInputDuration--,this.liveBassInputDuration--;for(let e=0;e<this.heldMods.length;e++)this.heldMods[e].holdFor--,this.heldMods[e].holdFor<=0&&this.heldMods.splice(e,1);this.part==p.partsPerBeat&&(this.part=0,s&&(this.beat++,this.beat==n.beatsPerBar&&(this.beat=0,this.countInMetronome?this.countInMetronome=!1:(this.prevBar=this.bar,this.bar=this.getNextBar(),this.bar<=this.prevBar&&this.loopRepeatCount>0&&this.loopRepeatCount--,this.bar>=n.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(o=!0,this.resetEffects(),this.pause()))))))}}for(let e=0;e<p.modulators.length;e++)null!=this.nextModValues&&null!=this.nextModValues[e]&&(this.modValues[e]=this.nextModValues[e]);this.isModActive(p.modulators.dictionary.tempo.index)&&(a=this.getSamplesPerTick(),this.tickSampleCountdown=Math.min(this.tickSampleCountdown,a));for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)for(let t=0;t<this.channels[e].instruments.length;t++){const i=this.channels[e].instruments[t],s=this.song.channels[e].instruments[t];i.nextVibratoTime=i.nextVibratoTime%(p.vibratoTypes[s.vibratoType].period/(p.ticksPerPart*a/this.samplesPerSecond)),i.arpTime=i.arpTime%(2520*p.ticksPerArpeggio);for(let e=0;e<s.envelopeCount;e++)i.envelopeTime[e]=i.envelopeTime[e]%(p.partsPerBeat*p.ticksPerPart*this.song.beatsPerBar)}for(let e=0;e<p.modulators.length;e++)for(let t=0;t<this.song.pitchChannelCount+this.song.noiseChannelCount;t++)for(let i=0;i<this.song.getMaxInstrumentsPerChannel();i++)null!=this.nextModInsValues&&null!=this.nextModInsValues[t]&&null!=this.nextModInsValues[t][i]&&null!=this.nextModInsValues[t][i][e]&&(this.modInsValues[t][i][e]=this.nextModInsValues[t][i][e])}}(!Number.isFinite(u)||Math.abs(u)<J)&&(u=0),this.limit=u,s&&!this.countInMetronome&&(this.playheadInternal=(((this.tick+1-this.tickSampleCountdown/a)/2+this.part)/p.partsPerBeat+this.beat)/n.beatsPerBar+this.bar)}freeTone(e){this.tonePool.pushBack(e)}newTone(){if(this.tonePool.count()>0){const e=this.tonePool.popBack();return e.freshlyAllocated=!0,e}return new Te}releaseTone(e,t){e.releasedTones.pushFront(t),t.atNoteStart=!1,t.passedEndOfNote=!0}freeReleasedTone(e,t){this.freeTone(e.releasedTones.get(t)),e.releasedTones.remove(t)}freeAllTones(){for(const e of this.channels)for(const t of e.instruments){for(;t.activeTones.count()>0;)this.freeTone(t.activeTones.popBack());for(;t.activeModTones.count()>0;)this.freeTone(t.activeModTones.popBack());for(;t.releasedTones.count()>0;)this.freeTone(t.releasedTones.popBack());for(;t.liveInputTones.count()>0;)this.freeTone(t.liveInputTones.popBack())}}determineLiveInputTones(e,t,i){const s=e.channels[t],n=this.channels[t],a=this.liveInputPitches,o=this.liveBassInputPitches;for(let r=0;r<s.instruments.length;r++){const l=n.instruments[r],h=l.liveInputTones;let p=0;if(this.liveInputDuration>0&&t==this.liveInputChannel&&a.length>0&&-1!=this.liveInputInstruments.indexOf(r)){const n=s.instruments[r];if(n.getChord().singleTone){let s;h.count()<=p?(s=this.newTone(),h.pushBack(s)):!n.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(l,h.get(p)),s=this.newTone(),h.set(p,s)):s=h.get(p),p++;for(let e=0;e<a.length;e++)s.pitches[e]=a[e];s.pitchCount=a.length,s.chordSize=1,s.instrumentIndex=r,s.note=s.prevNote=s.nextNote=null,s.atNoteStart=this.liveInputStarted,s.forceContinueAtStart=!1,s.forceContinueAtEnd=!1,this.computeTone(e,t,i,s,!1,!1)}else{this.moveTonesIntoOrderedTempMatchedList(h,a);for(let s=0;s<a.length;s++){let n;null!=this.tempMatchedPitchTones[p]?(n=this.tempMatchedPitchTones[p],this.tempMatchedPitchTones[p]=null,1==n.pitchCount&&n.pitches[0]==a[s]||(this.releaseTone(l,n),n=this.newTone()),h.pushBack(n)):(n=this.newTone(),h.pushBack(n)),p++,n.pitches[0]=a[s],n.pitchCount=1,n.chordSize=a.length,n.instrumentIndex=r,n.note=n.prevNote=n.nextNote=null,n.atNoteStart=this.liveInputStarted,n.forceContinueAtStart=!1,n.forceContinueAtEnd=!1,this.computeTone(e,t,i,n,!1,!1)}}}if(this.liveBassInputDuration>0&&t==this.liveBassInputChannel&&o.length>0&&-1!=this.liveBassInputInstruments.indexOf(r)){const n=s.instruments[r];if(n.getChord().singleTone){let s;h.count()<=p?(s=this.newTone(),h.pushBack(s)):!n.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(l,h.get(p)),s=this.newTone(),h.set(p,s)):s=h.get(p),p++;for(let e=0;e<o.length;e++)s.pitches[e]=o[e];s.pitchCount=o.length,s.chordSize=1,s.instrumentIndex=r,s.note=s.prevNote=s.nextNote=null,s.atNoteStart=this.liveBassInputStarted,s.forceContinueAtStart=!1,s.forceContinueAtEnd=!1,this.computeTone(e,t,i,s,!1,!1)}else{this.moveTonesIntoOrderedTempMatchedList(h,o);for(let s=0;s<o.length;s++){let n;null!=this.tempMatchedPitchTones[p]?(n=this.tempMatchedPitchTones[p],this.tempMatchedPitchTones[p]=null,1==n.pitchCount&&n.pitches[0]==o[s]||(this.releaseTone(l,n),n=this.newTone()),h.pushBack(n)):(n=this.newTone(),h.pushBack(n)),p++,n.pitches[0]=o[s],n.pitchCount=1,n.chordSize=o.length,n.instrumentIndex=r,n.note=n.prevNote=n.nextNote=null,n.atNoteStart=this.liveBassInputStarted,n.forceContinueAtStart=!1,n.forceContinueAtEnd=!1,this.computeTone(e,t,i,n,!1,!1)}}}for(;h.count()>p;)this.releaseTone(l,h.popBack());this.clearTempMatchedPitchTones(p,l)}this.liveInputStarted=!1,this.liveBassInputStarted=!1}adjacentPatternHasCompatibleInstrumentTransition(e,t,i,s,n,a,o,r,l,h){if(e.patternInstruments&&-1==s.instruments.indexOf(n)){if(i.instruments.length>1||s.instruments.length>1)return null;const e=t.instruments[s.instruments[0]];if(h)return e.getChord();const n=e.getTransition();return a.includeAdjacentPatterns&&n.includeAdjacentPatterns&&n.slides==a.slides?e.getChord():null}return h||a.includeAdjacentPatterns?o:null}static adjacentNotesHaveMatchingPitches(e,t){if(e.pitches.length!=t.pitches.length)return!1;const i=e.pins[e.pins.length-1].interval;for(const s of e.pitches)if(-1==t.pitches.indexOf(s+i))return!1;return!0}moveTonesIntoOrderedTempMatchedList(e,t){for(let i=0;i<e.count();i++){const s=e.get(i),n=s.pitches[0]+s.lastInterval;for(let a=0;a<t.length;a++)if(t[a]==n){this.tempMatchedPitchTones[a]=s,e.remove(i),i--;break}}for(;e.count()>0;){const t=e.popFront();for(let e=0;e<this.tempMatchedPitchTones.length;e++)if(null==this.tempMatchedPitchTones[e]){this.tempMatchedPitchTones[e]=t;break}}}determineCurrentActiveTones(e,t,i,s){const n=e.channels[t],a=this.channels[t],o=e.getPattern(t,this.bar),r=this.getCurrentPart(),l=this.tick+p.ticksPerPart*r;if(s&&e.getChannelIsMod(t)){let i=[],s=[],h=[],u=p.modCount;for(;u--;)i.push(null),s.push(null),h.push(null);if(null!=o&&!n.muted)for(let e=0;e<o.notes.length;e++)o.notes[e].end<=r?(null==s[o.notes[e].pitches[0]]||o.notes[e].end>s[o.notes[e].pitches[0]].start)&&(s[o.notes[e].pitches[0]]=o.notes[e]):o.notes[e].start<=r&&o.notes[e].end>r?i[o.notes[e].pitches[0]]=o.notes[e]:o.notes[e].start>r&&(null==h[o.notes[e].pitches[0]]||o.notes[e].start<h[o.notes[e].pitches[0]].start)&&(h[o.notes[e].pitches[0]]=o.notes[e]);let c=0;const f=e.patternInstruments&&null!=o?o.instruments[0]:0,m=a.instruments[f],d=m.activeModTones;for(let e=0;e<p.modCount;e++){if(null!=i[e]&&(null!=s[e]&&s[e].end!=i[e].start&&(s[e]=null),null!=h[e]&&h[e].start!=i[e].end&&(h[e]=null)),null!=a.singleSeamlessInstrument&&a.singleSeamlessInstrument!=f&&a.singleSeamlessInstrument<a.instruments.length){const e=a.instruments[a.singleSeamlessInstrument],t=a.instruments[f];for(;e.activeModTones.count()>0;)t.activeModTones.pushFront(e.activeModTones.popBack())}if(a.singleSeamlessInstrument=f,null!=i[e]){let t=s[e],n=h[e],a=!1,o=!1;const r=p.ticksPerPart*i[e].start==l&&this.isAtStartOfTick;let u;if(d.count()<=c)u=this.newTone(),d.pushBack(u);else if(r&&null==t){const e=d.get(c);e.isOnLastTick?this.freeTone(e):this.releaseTone(m,e),u=this.newTone(),d.set(c,u)}else u=d.get(c);c++;for(let t=0;t<i[e].pitches.length;t++)u.pitches[t]=i[e].pitches[t];u.pitchCount=i[e].pitches.length,u.chordSize=1,u.instrumentIndex=f,u.note=i[e],u.noteStartPart=i[e].start,u.noteEndPart=i[e].end,u.prevNote=t,u.nextNote=n,u.prevNotePitchIndex=0,u.nextNotePitchIndex=0,u.atNoteStart=r,u.passedEndOfNote=!1,u.forceContinueAtStart=a,u.forceContinueAtEnd=o}}for(;d.count()>c;){const i=d.popBack(),s=e.channels[t];if(i.instrumentIndex<s.instruments.length&&!i.isOnLastTick){const e=this.channels[t].instruments[i.instrumentIndex];this.releaseTone(e,i)}else this.freeTone(i)}}else if(!e.getChannelIsMod(t)){let h=null,u=null,c=null;if(s&&null!=o&&!n.muted&&(!this.isRecording||this.liveInputChannel!=t)){for(let e=0;e<o.notes.length;e++)if(o.notes[e].end<=r)u=o.notes[e];else if(o.notes[e].start<=r&&o.notes[e].end>r)h=o.notes[e];else if(o.notes[e].start>r){c=o.notes[e];break}null!=h&&(null!=u&&u.end!=h.start&&(u=null),null!=c&&c.start!=h.end&&(c=null))}if(null!=o&&(!e.layeredInstruments||1==n.instruments.length||e.patternInstruments&&1==o.instruments.length)){const t=e.patternInstruments?o.instruments[0]:0;if(null!=a.singleSeamlessInstrument&&a.singleSeamlessInstrument!=t&&a.singleSeamlessInstrument<a.instruments.length){const e=a.instruments[a.singleSeamlessInstrument],i=a.instruments[t];for(;e.activeTones.count()>0;)i.activeTones.pushFront(e.activeTones.popBack())}a.singleSeamlessInstrument=t}else a.singleSeamlessInstrument=null;for(let s=0;s<n.instruments.length;s++){const f=a.instruments[s],m=f.activeTones;let d=0;if(null!=h&&(!e.patternInstruments||-1!=o.instruments.indexOf(s))){const a=n.instruments[s];let y=u,v=c;const b=p.partsPerBeat*e.beatsPerBar,g=a.getTransition(),S=a.getChord();let w=!1,M=!1,k=0,x=0;if(0==h.start){let i=null==this.prevBar?null:e.getPattern(t,this.prevBar);if(null!=i){const t=i.notes.length<=0?null:i.notes[i.notes.length-1];if(null!=t&&t.end==b){const a=h.continuesLastPattern&&He.adjacentNotesHaveMatchingPitches(t,h),r=this.adjacentPatternHasCompatibleInstrumentTransition(e,n,o,i,s,g,S,h,t,a);null!=r&&(y=t,k=r.singleTone?1:y.pitches.length,w=a)}}}else null!=y&&(k=S.singleTone?1:y.pitches.length);if(h.end==b){let i=null==this.nextBar?null:e.getPattern(t,this.nextBar);if(null!=i){const t=i.notes.length<=0?null:i.notes[0];if(null!=t&&0==t.start){const a=t.continuesLastPattern&&He.adjacentNotesHaveMatchingPitches(h,t),r=this.adjacentPatternHasCompatibleInstrumentTransition(e,n,o,i,s,g,S,h,t,a);null!=r&&(v=t,x=r.singleTone?1:v.pitches.length,M=a)}}}else null!=v&&(x=S.singleTone?1:v.pitches.length);if(S.singleTone){const n=p.ticksPerPart*h.start==l;let o;if(m.count()<=d)o=this.newTone(),m.pushBack(o);else if(!n||(g.isSeamless||a.clicklessTransition||w)&&null!=y)o=m.get(d);else{const e=m.get(d);e.isOnLastTick?this.freeTone(e):this.releaseTone(f,e),o=this.newTone(),m.set(d,o)}d++;for(let e=0;e<h.pitches.length;e++)o.pitches[e]=h.pitches[e];o.pitchCount=h.pitches.length,o.chordSize=1,o.instrumentIndex=s,o.note=h,o.noteStartPart=h.start,o.noteEndPart=h.end,o.prevNote=y,o.nextNote=v,o.prevNotePitchIndex=0,o.nextNotePitchIndex=0,o.atNoteStart=n,o.passedEndOfNote=!1,o.forceContinueAtStart=w,o.forceContinueAtEnd=M,this.computeTone(e,t,i,o,!1,!1)}else{const n=a.getTransition();(n.isSeamless&&!n.slides&&0==S.strumParts||w)&&p.ticksPerPart*h.start==l&&null!=y&&this.moveTonesIntoOrderedTempMatchedList(m,h.pitches);let o=0;for(let a=0;a<h.pitches.length;a++){let u=k>a?y:null,c=h,b=x>a?v:null,g=c.start+o,F=!1;if(g>r){if(!(m.count()>a&&(n.isSeamless||w)&&null!=u))break;b=c,c=u,u=null,g=c.start+o,F=!0}let q=c.end;(n.isSeamless||w)&&null!=b&&(q=Math.min(p.partsPerBeat*this.song.beatsPerBar,q+o)),(n.continues||w)&&null!=u||(o+=S.strumParts);const P=p.ticksPerPart*g==l;let I;if(null!=this.tempMatchedPitchTones[d])I=this.tempMatchedPitchTones[d],this.tempMatchedPitchTones[d]=null,m.pushBack(I);else if(m.count()<=d)I=this.newTone(),m.pushBack(I);else if(!P||(n.isSeamless||w)&&null!=u)I=m.get(d);else{const e=m.get(d);e.isOnLastTick?this.freeTone(e):this.releaseTone(f,e),I=this.newTone(),m.set(d,I)}d++,I.pitches[0]=c.pitches[a],I.pitchCount=1,I.chordSize=c.pitches.length,I.instrumentIndex=s,I.note=c,I.noteStartPart=g,I.noteEndPart=q,I.prevNote=u,I.nextNote=b,I.prevNotePitchIndex=a,I.nextNotePitchIndex=a,I.atNoteStart=P,I.passedEndOfNote=F,I.forceContinueAtStart=w&&null!=u,I.forceContinueAtEnd=M&&null!=b,this.computeTone(e,t,i,I,!1,!1)}}(g.continues&&m.count()<=0||h.pitches.length<=0)&&f.envelopeComputer.reset()}for(;m.count()>d;){const i=m.popBack(),s=e.channels[t];if(i.instrumentIndex<s.instruments.length&&!i.isOnLastTick){const e=a.instruments[i.instrumentIndex];this.releaseTone(e,i)}else this.freeTone(i)}this.clearTempMatchedPitchTones(d,f)}}}clearTempMatchedPitchTones(e,t){for(let i=e;i<this.tempMatchedPitchTones.length;i++){const e=this.tempMatchedPitchTones[i];null!=e&&(e.isOnLastTick?this.freeTone(e):this.releaseTone(t,e),this.tempMatchedPitchTones[i]=null)}}playTone(e,t,i,s){const n=this.channels[e].instruments[s.instrumentIndex];null!=n.synthesizer&&n.synthesizer(this,t,i,s,n),s.envelopeComputer.clearEnvelopes(),n.envelopeComputer.clearEnvelopes()}playModTone(e,t,i,s,n,a,o,r){const l=e.channels[t].instruments[a.instrumentIndex];if(null!=a.note){const e=this.getTicksIntoBar(),t=e/p.ticksPerPart,o=(e+1)/p.ticksPerPart,r=this.tickSampleCountdown,h=t+(o-t)*(1-r/i),u=t+(o-t)*(1-(r-n)/i),c=p.ticksPerPart*h,f=p.ticksPerPart*u,m=a.note.getEndPinIndex(this.getCurrentPart()),d=a.note.pins[m-1],y=a.note.pins[m],v=(a.note.start+d.time)*p.ticksPerPart,b=(a.note.start+y.time)*p.ticksPerPart,g=(c-v)/(b-v),S=(f-v)/(b-v);a.expression=d.size+(y.size-d.size)*g,a.expressionDelta=d.size+(y.size-d.size)*S-a.expression,He.modSynth(this,s,n,a,l)}}static computeChordExpression(e){return 1/(.25*(e-1)+1)}computeTone(e,t,i,s,n,a){const o=Math.ceil(i),r=e.channels[t],l=this.channels[t],h=r.instruments[s.instrumentIndex],u=l.instruments[s.instrumentIndex];u.awake=!0,u.tonesAddedInThisTick=!0,u.computed||u.compute(this,h,i,o,s,t,s.instrumentIndex);const c=h.getTransition(),f=h.getChord(),m=f.singleTone?1:He.computeChordExpression(s.chordSize),y=e.getChannelIsNoise(t),v=y?p.noiseInterval:1,b=p.ticksPerPart*i/this.samplesPerSecond,g=1/this.samplesPerSecond,w=1/p.partsPerBeat,M=this.getTicksIntoBar(),k=M/p.ticksPerPart,I=(M+1)/p.ticksPerPart,T=this.getCurrentPart();let D=1;s.specialIntervalExpressionMult=1;let z=a,H=0,O=0,E=1,C=1,R=m,A=m,G=16,N=p.keys[e.key].basePitch+p.pitchesPerOctave*e.octave,L=1,W=48;if(3==h.type)L=p.spectrumBaseExpression,y&&(N=p.spectrumBasePitch,L*=2),G=p.spectrumBasePitch,W=28;else if(4==h.type)N=p.spectrumBasePitch,L=p.drumsetBaseExpression,G=N;else if(2==h.type)N=y?p.chipNoises[h.chipNoise].basePitch:N+p.chipNoises[h.chipNoise].basePitch-12,L=p.noiseBaseExpression,G=N,W=p.chipNoises[h.chipNoise].isSoft?24:60;else if(1==h.type||11==h.type)L=p.fmBaseExpression;else if(0==h.type)L=p.chipBaseExpression,p.chipWaves[h.chipWave].isCustomSampled?p.chipWaves[h.chipWave].isPercussion?N=-12*Math.log2(p.chipWaves[h.chipWave].samples.length/p.chipWaves[h.chipWave].sampleRate)-84.37-(-60+p.chipWaves[h.chipWave].rootKey):N+=-12*Math.log2(p.chipWaves[h.chipWave].samples.length/p.chipWaves[h.chipWave].sampleRate)-96.37-(-60+p.chipWaves[h.chipWave].rootKey):p.chipWaves[h.chipWave].isSampled&&!p.chipWaves[h.chipWave].isPercussion?N=N-63+p.chipWaves[h.chipWave].extraSampleDetune:p.chipWaves[h.chipWave].isSampled&&p.chipWaves[h.chipWave].isPercussion&&(N=-51+p.chipWaves[h.chipWave].extraSampleDetune);else if(9==h.type)L=p.chipBaseExpression;else if(5==h.type)L=p.harmonicsBaseExpression;else if(12==h.type)L=p.additiveBaseExpression;else if(6==h.type)L=p.pwmBaseExpression;else if(8==h.type)L=p.supersawBaseExpression;else if(7==h.type)L=p.pickedStringBaseExpression;else{if(10!=h.type)throw new Error("Unknown instrument type in computeTone.");L=1,G=0,W=1,N=0}if((s.atNoteStart&&!c.isSeamless&&!s.forceContinueAtStart||s.freshlyAllocated)&&(s.reset(),u.envelopeComputer.reset(),0==h.type&&h.isUsingAdvancedLoopControls)){const e=p.rawRawChipWaves[h.chipWave].samples.length-1,t=h.chipWaveStartOffset/e,i=.999999999999999;for(let e=0;e<p.maxPitchOrOperatorCount;e++)s.phases[e]=h.chipWavePlayBackwards?Math.max(0,Math.min(i,t)):Math.max(0,t),s.directions[e]=h.chipWavePlayBackwards?-1:1,s.chipWaveCompletions[e]=0,s.chipWavePrevWaves[e]=0,s.chipWaveCompletionsLastWave[e]=0}s.freshlyAllocated=!1;for(let e=0;e<p.maxPitchOrOperatorCount;e++)s.phaseDeltas[e]=0,s.phaseDeltaScales[e]=0,s.operatorExpressions[e]=0,s.operatorExpressionDeltas[e]=0;s.expression=0,s.expressionDelta=0;for(let e=0;e<(11==h.type?6:p.operatorCount);e++)s.operatorWaves[e]=He.getOperatorWave(h.operators[e].waveform,h.operators[e].pulseWidth);if(n){const e=s.ticksSinceReleased,t=s.ticksSinceReleased+1;H=O=s.lastInterval;const i=Math.abs(h.getFadeOutTicks());E=He.noteSizeToVolumeMult((1-e/i)*p.noteSizeMax),C=He.noteSizeToVolumeMult((1-t/i)*p.noteSizeMax),a&&(C=0),s.ticksSinceReleased+1>=i&&(z=!0)}else if(null==s.note)E=C=1,s.lastInterval=0,s.ticksSinceReleased=0,s.liveInputSamplesHeld+=o;else{const e=s.note,t=s.nextNote,i=s.noteStartPart,n=s.noteEndPart,a=e.getEndPinIndex(T),o=e.pins[a-1],r=e.pins[a],l=i*p.ticksPerPart,u=n*p.ticksPerPart,f=(e.start+o.time)*p.ticksPerPart,m=(e.start+r.time)*p.ticksPerPart;s.ticksSinceReleased=0;const d=T*p.ticksPerPart+this.tick,y=d+1,v=d-l,b=y-l,g=Math.min(1,(d-f)/(m-f)),S=Math.min(1,(y-f)/(m-f));if(E=1,C=1,H=o.interval+(r.interval-o.interval)*g,O=o.interval+(r.interval-o.interval)*S,s.lastInterval=O,!c.isSeamless&&!s.forceContinueAtEnd||null==t){const e=-h.getFadeOutTicks();if(e>0){const t=u-l;E*=Math.min(1,(t-v)/e),C*=Math.min(1,(t-b)/e),y>=l+t&&(z=!0)}}}s.isOnLastTick=z;let B,$,j=h.noteFilter;if(h.noteFilterType){const e=h.noteFilter;null==h.noteSubFilters[1]&&(h.noteSubFilters[1]=new Me);const i=h.noteSubFilters[1];let n=h.noteFilterSimpleCut,a=h.noteFilterSimplePeak,o=h.noteFilterSimpleCut,r=h.noteFilterSimplePeak,l=!1;this.isModActive(p.modulators.dictionary["note filt cut"].index,t,s.instrumentIndex)&&(n=this.getModValue(p.modulators.dictionary["note filt cut"].index,t,s.instrumentIndex,!1),o=this.getModValue(p.modulators.dictionary["note filt cut"].index,t,s.instrumentIndex,!0),l=!0),this.isModActive(p.modulators.dictionary["note filt peak"].index,t,s.instrumentIndex)&&(a=this.getModValue(p.modulators.dictionary["note filt peak"].index,t,s.instrumentIndex,!1),r=this.getModValue(p.modulators.dictionary["note filt peak"].index,t,s.instrumentIndex,!0),l=!0),e.convertLegacySettingsForSynth(n,a,!l),i.convertLegacySettingsForSynth(o,r,!l),B=e.controlPoints[0],$=i.controlPoints[0],h.noteFilter=e,h.tmpNoteFilterStart=e}const U=s.envelopeComputer,Q=[];for(let e=0;e<p.maxEnvelopeCount;e++)Q[e]=0;for(let e=0;e<h.envelopeCount;e++){let i=h.envelopes[e].perEnvelopeSpeed;this.isModActive(p.modulators.dictionary["individual envelope speed"].index,t,s.instrumentIndex)&&null!=h.envelopes[e].tempEnvelopeSpeed&&(i=h.envelopes[e].tempEnvelopeSpeed);let n=p.arpSpeedScale[h.envelopeSpeed]*i;this.isModActive(p.modulators.dictionary["envelope speed"].index,t,s.instrumentIndex)&&(n=Math.max(0,Math.min(p.arpSpeedScale.length-1,this.getModValue(p.modulators.dictionary["envelope speed"].index,t,s.instrumentIndex,!1))),n=Number.isInteger(n)?p.arpSpeedScale[n]*i:(1-n%1)*p.arpSpeedScale[Math.floor(n)]+n%1*p.arpSpeedScale[Math.ceil(n)]*i),Q[e]=n}U.computeEnvelopes(h,T,u.envelopeTime,p.ticksPerPart*k,i/this.samplesPerSecond,s,Q,u,this);const _=s.envelopeComputer.envelopeStarts,K=s.envelopeComputer.envelopeEnds;if(h.noteFilter=j,!c.continues||null!=s.prevNote&&null!=s.note||u.envelopeComputer.reset(),null!=s.note&&c.slides){const e=s.prevNote,t=s.nextNote;if(null!=e){const t=e.pitches[s.prevNotePitchIndex]+e.pins[e.pins.length-1].interval-s.pitches[0];if(U.prevSlideStart&&(H+=t*U.prevSlideRatioStart),U.prevSlideEnd&&(O+=t*U.prevSlideRatioEnd),!f.singleTone){const t=e.pitches.length-s.chordSize;U.prevSlideStart&&(R=He.computeChordExpression(s.chordSize+t*U.prevSlideRatioStart)),U.prevSlideEnd&&(A=He.computeChordExpression(s.chordSize+t*U.prevSlideRatioEnd))}}if(null!=t){const e=t.pitches[s.nextNotePitchIndex]-(s.pitches[0]+s.note.pins[s.note.pins.length-1].interval);if(U.nextSlideStart&&(H+=e*U.nextSlideRatioStart),U.nextSlideEnd&&(O+=e*U.nextSlideRatioEnd),!f.singleTone){const e=t.pitches.length-s.chordSize;U.nextSlideStart&&(R=He.computeChordExpression(s.chordSize+e*U.nextSlideRatioStart)),U.nextSlideEnd&&(A=He.computeChordExpression(s.chordSize+e*U.nextSlideRatioEnd))}}}if(x(h.effects)){let e=p.justIntonationSemitones[h.pitchShift]/v,i=1,n=1;this.isModActive(p.modulators.dictionary["pitch shift"].index,t,s.instrumentIndex)&&(e=p.justIntonationSemitones[p.justIntonationSemitones.length-1],i=this.getModValue(p.modulators.dictionary["pitch shift"].index,t,s.instrumentIndex,!1)/p.pitchShiftCenter,n=this.getModValue(p.modulators.dictionary["pitch shift"].index,t,s.instrumentIndex,!0)/p.pitchShiftCenter);H+=e*_[18]*i,O+=e*K[18]*n}if(F(h.effects)||this.isModActive(p.modulators.dictionary["song detune"].index,t,s.instrumentIndex)){const e=_[19],i=K[19];let n=h.detune,a=h.detune;this.isModActive(p.modulators.dictionary.detune.index,t,s.instrumentIndex)&&(n=this.getModValue(p.modulators.dictionary.detune.index,t,s.instrumentIndex,!1)+p.detuneCenter,a=this.getModValue(p.modulators.dictionary.detune.index,t,s.instrumentIndex,!0)+p.detuneCenter),this.isModActive(p.modulators.dictionary["song detune"].index,t,s.instrumentIndex)&&(n+=4*this.getModValue(p.modulators.dictionary["song detune"].index,t,s.instrumentIndex,!1),a+=4*this.getModValue(p.modulators.dictionary["song detune"].index,t,s.instrumentIndex,!0)),H+=He.detuneToCents(n)*e*p.pitchesPerOctave/1200,O+=He.detuneToCents(a)*i*p.pitchesPerOctave/1200}if(q(h.effects)){let e,i,n,a;if(h.vibrato==p.vibratos.length?(e=2*h.vibratoDelay,h.vibratoDelay==p.modulators.dictionary["vibrato delay"].maxRawVol&&(e=Number.POSITIVE_INFINITY),i=h.vibratoDepth,n=i):(e=p.vibratos[h.vibrato].delayTicks,i=p.vibratos[h.vibrato].amplitude,n=i),this.isModActive(p.modulators.dictionary["vibrato delay"].index,t,s.instrumentIndex)&&(e=2*this.getModValue(p.modulators.dictionary["vibrato delay"].index,t,s.instrumentIndex,!1),e==2*p.modulators.dictionary["vibrato delay"].maxRawVol&&(e=Number.POSITIVE_INFINITY)),this.isModActive(p.modulators.dictionary["vibrato depth"].index,t,s.instrumentIndex)&&(i=this.getModValue(p.modulators.dictionary["vibrato depth"].index,t,s.instrumentIndex,!1)/25,n=this.getModValue(p.modulators.dictionary["vibrato depth"].index,t,s.instrumentIndex,!0)/25),null!=s.prevVibrato)a=s.prevVibrato;else{if(a=i*He.getLFOAmplitude(h,b*u.vibratoTime)*_[20],e>0){const t=e-U.noteTicksStart;a*=Math.max(0,Math.min(1,1-t/2))}}let o=He.getLFOAmplitude(h,b*u.nextVibratoTime);const r=K[20];if(10!=h.type){let t=n*o*r;if(e>0){const i=e-U.noteTicksEnd;t*=Math.max(0,Math.min(1,1-i/2))}s.prevVibrato=t,H+=a,O+=t}}if(!c.isSeamless&&!s.forceContinueAtStart||null==s.prevNote){const e=h.getFadeInSeconds();e>0&&(E*=Math.min(1,U.noteSecondsStartUnscaled/e),C*=Math.min(1,U.noteSecondsEndUnscaled/e))}4==h.type&&null==s.drumsetPitch&&(s.drumsetPitch=s.pitches[0],null!=s.note&&(s.drumsetPitch+=s.note.pickMainInterval()),s.drumsetPitch=Math.max(0,Math.min(p.drumCount-1,s.drumsetPitch)));let J=U.lowpassCutoffDecayVolumeCompensation;if(P(h.effects)){const e=_[1],t=K[1];if(h.noteFilterType){const i=_[21],n=K[21],a=_[29],r=K[29];B.toCoefficients(He.tempFilterStartCoefficients,this.samplesPerSecond,e*i,a),$.toCoefficients(He.tempFilterEndCoefficients,this.samplesPerSecond,t*n,r),s.noteFilters.length<1&&(s.noteFilters[0]=new V),s.noteFilters[0].loadCoefficientsWithGradient(He.tempFilterStartCoefficients,He.tempFilterEndCoefficients,1/o,0==B.type),J*=B.getVolumeCompensationMult(),s.noteFilterCount=1}else{const i=null!=h.tmpNoteFilterStart?h.tmpNoteFilterStart:h.noteFilter;for(let n=0;n<i.controlPointCount;n++){const a=_[21+n],r=K[21+n],l=_[29+n],p=K[29+n];let u=i.controlPoints[n];const c=null!=h.tmpNoteFilterEnd&&null!=h.tmpNoteFilterEnd.controlPoints[n]?h.tmpNoteFilterEnd.controlPoints[n]:i.controlPoints[n];u.type!=c.type&&(u=c),u.toCoefficients(He.tempFilterStartCoefficients,this.samplesPerSecond,e*a,l),c.toCoefficients(He.tempFilterEndCoefficients,this.samplesPerSecond,t*r,p),s.noteFilters.length<=n&&(s.noteFilters[n]=new V),s.noteFilters[n].loadCoefficientsWithGradient(He.tempFilterStartCoefficients,He.tempFilterEndCoefficients,1/o,0==u.type),J*=u.getVolumeCompensationMult()}s.noteFilterCount=i.controlPointCount}}else s.noteFilterCount=0;if(4==h.type){const e=s.envelopeComputer,t=h.getDrumsetEnvelope(s.drumsetPitch);J*=Ie.getLowpassCutoffDecayVolumeCompensation(t),e.computeDrumsetEnvelopes(h,t,w,k,I);const i=e.drumsetFilterEnvelopeStart,n=e.drumsetFilterEnvelopeEnd,a=this.tempDrumSetControlPoint;a.type=0,a.gain=we.getRoundedSettingValueFromLinearGain(.5),a.freq=we.getRoundedSettingValueFromHz(8e3),a.toCoefficients(He.tempFilterStartCoefficients,this.samplesPerSecond,i*(1+i),1),a.toCoefficients(He.tempFilterEndCoefficients,this.samplesPerSecond,n*(1+n),1),s.noteFilters.length==s.noteFilterCount&&(s.noteFilters[s.noteFilterCount]=new V),s.noteFilters[s.noteFilterCount].loadCoefficientsWithGradient(He.tempFilterStartCoefficients,He.tempFilterEndCoefficients,1/o,!0),s.noteFilterCount++}if(J=Math.min(3,J),1==h.type||11==h.type){let e=1,i=0,n=0;const a=f.arpeggiates;if(s.pitchCount>1&&a){const e=Math.floor(u.arpTime/p.ticksPerArpeggio);n=s.pitches[S(s.pitchCount,h.fastTwoNoteArp,e)]-s.pitches[0]}const r=11==h.type?h.customAlgorithm.carrierCount:p.algorithms[h.algorithm].carrierCount;for(let l=0;l<(11==h.type?6:p.operatorCount);l++){const u=11==h.type?h.customAlgorithm.associatedCarrier[l]-1:p.algorithms[h.algorithm].associatedCarrier[l]-1,c=s.pitches[a?0:l<s.pitchCount?l:u<s.pitchCount?u:0],f=p.operatorFrequencies[h.operators[l].frequency].mult,m=p.operatorCarrierInterval[u]+n,d=N+(c+H)*v+m,y=N+(c+O)*v+m,b=xe.frequencyFromPitch(d),S=xe.frequencyFromPitch(y),w=p.operatorFrequencies[h.operators[l].frequency].hzOffset,M=f*b+w,k=f*S+w,x=_[5+l],F=K[5+l];let q,P;1!=x||1!=F?(q=Math.pow(2,Math.log2(M/b)*x)*b,P=Math.pow(2,Math.log2(k/S)*F)*S):(q=M,P=k),s.phaseDeltas[l]=q*g,s.phaseDeltaScales[l]=Math.pow(P/q,1/o);let I=h.operators[l].amplitude,T=h.operators[l].amplitude;l<4?this.isModActive(p.modulators.dictionary["fm slider 1"].index+l,t,s.instrumentIndex)&&(I*=this.getModValue(p.modulators.dictionary["fm slider 1"].index+l,t,s.instrumentIndex,!1)/15,T*=this.getModValue(p.modulators.dictionary["fm slider 1"].index+l,t,s.instrumentIndex,!0)/15):this.isModActive(p.modulators.dictionary["fm slider 5"].index+l-4,t,s.instrumentIndex)&&(I*=this.getModValue(p.modulators.dictionary["fm slider 5"].index+l-4,t,s.instrumentIndex,!1)/15,T*=this.getModValue(p.modulators.dictionary["fm slider 5"].index+l-4,t,s.instrumentIndex,!0)/15);const D=He.operatorAmplitudeCurve(I),z=He.operatorAmplitudeCurve(T);let E=D*p.operatorFrequencies[h.operators[l].frequency].amplitudeSign,C=z*p.operatorFrequencies[h.operators[l].frequency].amplitudeSign;if(l<r){let e;e=null!=s.prevPitchExpressions[l]?s.prevPitchExpressions[l]:Math.pow(2,-(d-G)/W);const t=Math.pow(2,-(y-G)/W);s.prevPitchExpressions[l]=t,E*=e,C*=t,i+=z}else E*=1.5*p.sineWaveLength,C*=1.5*p.sineWaveLength,e*=1-Math.min(1,h.operators[l].amplitude/15);if(E*=_[11+l],C*=K[11+l],this.isModActive(p.modulators.dictionary["note volume"].index,t,s.instrumentIndex)){const e=this.getModValue(p.modulators.dictionary["note volume"].index,t,s.instrumentIndex,!1),i=this.getModValue(p.modulators.dictionary["note volume"].index,t,s.instrumentIndex,!0);E*=e<=0?(e+p.volumeRange/2)/(p.volumeRange/2):He.instrumentVolumeToVolumeMult(e),C*=i<=0?(i+p.volumeRange/2)/(p.volumeRange/2):He.instrumentVolumeToVolumeMult(i)}s.operatorExpressions[l]=E,s.operatorExpressionDeltas[l]=(C-E)/o}e*=(Math.pow(2,2-1.4*h.feedbackAmplitude/15)-1)/3,e*=1-Math.min(1,Math.max(0,i-1)/2),e=1+3*e;const l=L*e*J*E*R*_[0],c=L*e*J*C*A*K[0];s.expression=l,s.expressionDelta=(c-l)/o;let m=h.feedbackAmplitude,d=h.feedbackAmplitude;this.isModActive(p.modulators.dictionary["fm feedback"].index,t,s.instrumentIndex)&&(m*=this.getModValue(p.modulators.dictionary["fm feedback"].index,t,s.instrumentIndex,!1)/15,d*=this.getModValue(p.modulators.dictionary["fm feedback"].index,t,s.instrumentIndex,!0)/15);let y=.3*p.sineWaveLength*m/15;const b=.3*p.sineWaveLength*d/15;let w=y*_[17],M=b*K[17];s.feedbackMult=w,s.feedbackDelta=(M-w)/o}else{const e=Math.pow(2,(O-H)*v/12),i=Math.pow(e,1/o);let n=s.pitches[0];if(s.pitchCount>1&&(f.arpeggiates||f.customInterval)){const e=Math.floor(u.arpTime/p.ticksPerArpeggio);if(f.customInterval){const t=s.pitches[1+S(s.pitchCount-1,h.fastTwoNoteArp,e)]-s.pitches[0];D=Math.pow(2,t/12),s.specialIntervalExpressionMult=Math.pow(2,-t/W)}else n=s.pitches[S(s.pitchCount,h.fastTwoNoteArp,e)]}const a=N+(n+H)*v,r=N+(n+O)*v;let l;l=null!=s.prevPitchExpressions[0]?s.prevPitchExpressions[0]:Math.pow(2,-(a-G)/W);const m=Math.pow(2,-(r-G)/W);s.prevPitchExpressions[0]=m;let y=L*J;if(2==h.type&&(y*=p.chipNoises[h.chipNoise].expression),0==h.type&&(y*=p.chipWaves[h.chipWave].expression),6==h.type){const e=d(h.pulseWidth);let i=e,n=e;this.isModActive(p.modulators.dictionary["pulse width"].index,t,s.instrumentIndex)&&(i=this.getModValue(p.modulators.dictionary["pulse width"].index,t,s.instrumentIndex,!1)/(2*p.pulseWidthRange),n=this.getModValue(p.modulators.dictionary["pulse width"].index,t,s.instrumentIndex,!0)/(2*p.pulseWidthRange));const a=i*_[2],r=n*K[2];s.pulseWidth=a,s.pulseWidthDelta=(r-a)/o;let l=h.decimalOffset;this.isModActive(p.modulators.dictionary["decimal offset"].index,t,s.instrumentIndex)&&(l=this.getModValue(p.modulators.dictionary["decimal offset"].index,t,s.instrumentIndex,!1));const u=l*_[37];s.decimalOffset=u,s.pulseWidth-=s.decimalOffset/1e4}if(7==h.type){let e=h.stringSustain,i=h.stringSustain;this.isModActive(p.modulators.dictionary.sustain.index,t,s.instrumentIndex)&&(e=this.getModValue(p.modulators.dictionary.sustain.index,t,s.instrumentIndex,!1),i=this.getModValue(p.modulators.dictionary.sustain.index,t,s.instrumentIndex,!0)),s.stringSustainStart=e,s.stringSustainEnd=i,y*=Math.pow(2,.7*(1-e/(p.stringSustainRange-1)))}const b=xe.frequencyFromPitch(a);if(0==h.type||9==h.type||5==h.type||7==h.type||3==h.type||6==h.type||2==h.type){const e=h.unisonVoices,t=h.unisonSpread,n=h.unisonOffset;y*=h.unisonExpression*(7==h.type?1:e/2);const a=_[4],r=K[4],l=Math.pow(2,(n+t)*a/12),p=Math.pow(2,(n+t)*r/12),u=Math.pow(2,(n-t)*a/12)*D,c=Math.pow(2,(n-t)*r/12)*D;s.phaseDeltas[0]=b*g*l,s.phaseDeltas[1]=b*g*u,s.phaseDeltaScales[0]=i*Math.pow(p/l,1/o),s.phaseDeltaScales[1]=i*Math.pow(c/u,1/o)}else s.phaseDeltas[0]=b*g,s.phaseDeltaScales[0]=i;let w=1,M=1;if(8==h.type){const i=1/Math.sqrt(p.supersawVoiceCount);let n=h.supersawDynamism/p.supersawDynamismMax,a=h.supersawDynamism/p.supersawDynamismMax;this.isModActive(p.modulators.dictionary.dynamism.index,t,s.instrumentIndex)&&(n=this.getModValue(p.modulators.dictionary.dynamism.index,t,s.instrumentIndex,!1)/p.supersawDynamismMax,a=this.getModValue(p.modulators.dictionary.dynamism.index,t,s.instrumentIndex,!0)/p.supersawDynamismMax);const r=1-Math.pow(Math.max(0,1-n*_[38]),.2),l=1-Math.pow(Math.max(0,1-a*K[38]),.2),u=Math.pow(2,Math.log2(i)*r),c=Math.pow(2,Math.log2(i)*l),f=Math.sqrt((1/Math.pow(u,2)-1)/(p.supersawVoiceCount-1)),m=Math.sqrt((1/Math.pow(c,2)-1)/(p.supersawVoiceCount-1));s.supersawDynamism=f,s.supersawDynamismDelta=(m-f)/o;const y=-1==s.supersawDelayIndex;if(y){let e=0;for(let t=0;t<p.supersawVoiceCount;t++)s.phases[t]=e,e+=-Math.log(Math.random());const t=1+(p.supersawVoiceCount-1)*f;let i=0;for(let t=0;t<p.supersawVoiceCount;t++){const n=0==t?1:f,a=s.phases[t]/e;s.phases[t]=a,i+=(a-.5)*n}let n=1,a=0;for(let e=p.supersawVoiceCount-1;e>=0;e--){const o=1-s.phases[e],r=o-a;if(i<0){const e=-i/t;if(e<r){n=a+e;break}}i+=r*t-(0==e?1:f),a=o}for(let e=0;e<p.supersawVoiceCount;e++)s.phases[e]+=n;for(let e=1;e<p.supersawVoiceCount-1;e++){const t=e+Math.floor(Math.random()*(p.supersawVoiceCount-e)),i=s.phases[e];s.phases[e]=s.phases[t],s.phases[t]=i}}const v=h.supersawSpread/p.supersawSpreadMax;let S=v,k=v;this.isModActive(p.modulators.dictionary.spread.index,t,s.instrumentIndex)&&(S=this.getModValue(p.modulators.dictionary.spread.index,t,s.instrumentIndex,!1)/p.supersawSpreadMax,k=this.getModValue(p.modulators.dictionary.spread.index,t,s.instrumentIndex,!0)/p.supersawSpreadMax);const x=.5*(S*_[39]+k*K[39]),F=Math.pow(1-Math.sqrt(Math.max(0,1-x)),1.75);for(let e=0;e<p.supersawVoiceCount;e++){const t=0==e?0:Math.pow(((e+1>>1)-.5+.025*((2&e)-1))/(p.supersawVoiceCount>>1),1.1)*(2*(1&e)-1);s.supersawUnisonDetunes[e]=Math.pow(2,F*t/12)}const q=h.supersawShape/p.supersawShapeMax;let P=q*_[40],I=q*K[40];this.isModActive(p.modulators.dictionary["saw shape"].index,t,s.instrumentIndex)&&(P=this.getModValue(p.modulators.dictionary["saw shape"].index,t,s.instrumentIndex,!1)/p.supersawShapeMax,I=this.getModValue(p.modulators.dictionary["saw shape"].index,t,s.instrumentIndex,!0)/p.supersawShapeMax);const T=P*_[40],D=I*K[40];s.supersawShape=T,s.supersawShapeDelta=(D-T)/o;let z=h.decimalOffset;this.isModActive(p.modulators.dictionary["decimal offset"].index,t,s.instrumentIndex)&&(z=this.getModValue(p.modulators.dictionary["decimal offset"].index,t,s.instrumentIndex,!1));const H=z*_[37];s.decimalOffset=H;const O=d(h.pulseWidth);let E=O,C=O;this.isModActive(p.modulators.dictionary["pulse width"].index,t,s.instrumentIndex)&&(E=this.getModValue(p.modulators.dictionary["pulse width"].index,t,s.instrumentIndex,!1)/(2*p.pulseWidthRange),C=this.getModValue(p.modulators.dictionary["pulse width"].index,t,s.instrumentIndex,!0)/(2*p.pulseWidthRange));let R=E*_[2],A=C*K[2];R-=H/1e4,A-=H/1e4;const G=null!=s.supersawPrevPhaseDelta?s.supersawPrevPhaseDelta:b*g,N=b*g*e;s.supersawPrevPhaseDelta=N;const L=R/G,W=A/N;s.supersawDelayLength=L,s.supersawDelayLengthDelta=(W-L)/o;const V=Math.ceil(Math.max(L,W))+2;if(null==s.supersawDelayLine||s.supersawDelayLine.length<=V){const e=Math.ceil(.5*this.samplesPerSecond/xe.frequencyFromPitch(24)),t=new Float32Array(He.fittingPowerOfTwo(Math.max(e,V)));if(!y&&null!=s.supersawDelayLine){const e=s.supersawDelayLine.length-1>>0,i=s.supersawDelayIndex;for(let n=0;n<s.supersawDelayLine.length;n++)t[n]=s.supersawDelayLine[i+n&e]}s.supersawDelayLine=t,s.supersawDelayIndex=s.supersawDelayLine.length}else y&&(s.supersawDelayLine.fill(0),s.supersawDelayIndex=s.supersawDelayLine.length);const B=p.pwmBaseExpression/p.supersawBaseExpression;w*=(1+(B-1)*T)/Math.sqrt(1+(p.supersawVoiceCount-1)*f*f),M*=(1+(B-1)*D)/Math.sqrt(1+(p.supersawVoiceCount-1)*m*m)}let k=y*E*R*l*_[0]*w,x=y*C*A*m*K[0]*M;if(this.isModActive(p.modulators.dictionary["note volume"].index,t,s.instrumentIndex)){const e=this.getModValue(p.modulators.dictionary["note volume"].index,t,s.instrumentIndex,!1),i=this.getModValue(p.modulators.dictionary["note volume"].index,t,s.instrumentIndex,!0);k*=e<=0?(e+p.volumeRange/2)/(p.volumeRange/2):He.instrumentVolumeToVolumeMult(e),x*=i<=0?(i+p.volumeRange/2)/(p.volumeRange/2):He.instrumentVolumeToVolumeMult(i)}if(s.expression=k,s.expressionDelta=(x-k)/o,7==h.type){let e;if(null!=s.prevStringDecay)e=s.prevStringDecay;else{const t=s.envelopeComputer.envelopeStarts[3];e=1-Math.min(1,t*s.stringSustainStart/(p.stringSustainRange-1))}const t=s.envelopeComputer.envelopeEnds[3];let i=1-Math.min(1,t*s.stringSustainEnd/(p.stringSustainRange-1));s.prevStringDecay=i;const n=h.unisonVoices;for(let e=s.pickedStrings.length;e<n;e++)s.pickedStrings[e]=new Pe;if(s.atNoteStart&&!c.continues&&!s.forceContinueAtStart)for(const e of s.pickedStrings)e.delayIndex=-1;for(let t=0;t<n;t++)s.pickedStrings[t].update(this,u,s,t,o,e,i,h.stringSustainType)}}}static getLFOAmplitude(e,t){let i=0;for(const s of p.vibratoTypes[e.vibratoType].periodsSeconds)i+=Math.sin(2*Math.PI*t/s);return i}static getInstrumentSynthFunction(e){if(1==e.type){const t=e.algorithm+"_"+e.feedbackType;if(null==He.fmSynthFunctionCache[t]){const i=[];for(const t of He.fmSourceTemplate)if(-1!=t.indexOf("// CARRIER OUTPUTS")){const s=[];for(let t=0;t<p.algorithms[e.algorithm].carrierCount;t++)s.push("operator"+t+"Scaled");i.push(t.replace("/*operator#Scaled*/",s.join(" + ")))}else if(-1!=t.indexOf("// INSERT OPERATOR COMPUTATION HERE"))for(let t=p.operatorCount-1;t>=0;t--)for(const s of He.operatorSourceTemplate)if(-1!=s.indexOf("/* + operator@Scaled*/")){let n="";for(const i of p.algorithms[e.algorithm].modulatedBy[t])n+=" + operator"+(i-1)+"Scaled";const a=p.feedbacks[e.feedbackType].indices[t];if(a.length>0){n+=" + feedbackMult * (";const e=[];for(const t of a)e.push("operator"+(t-1)+"Output");n+=e.join(" + ")+")"}i.push(s.replace(/\#/g,t+"").replace("/* + operator@Scaled*/",n))}else i.push(s.replace(/\#/g,t+""));else if(-1!=t.indexOf("#"))for(let e=0;e<p.operatorCount;e++)i.push(t.replace(/\#/g,e+""));else i.push(t);const s="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {"+i.join("\n")+"}";He.fmSynthFunctionCache[t]=new Function("Config","Synth",s)(p,He)}return He.fmSynthFunctionCache[t]}if(0==e.type)return e.isUsingAdvancedLoopControls?He.loopableChipSynth:He.chipSynth;if(9==e.type)return He.chipSynth;if(5==e.type)return He.harmonicsSynth;if(12==e.type)return He.additiveSynth;if(6==e.type)return He.pulseWidthSynth;if(8==e.type)return He.supersawSynth;if(7==e.type)return He.pickedStringSynth;if(2==e.type)return He.noiseSynth;if(3==e.type)return He.spectrumSynth;if(4==e.type)return He.drumsetSynth;if(10==e.type)return He.modSynth;if(11==e.type){const t=e.customAlgorithm.name+"_"+e.customFeedbackType.name;if(null==He.fm6SynthFunctionCache[t]){const i=[];for(const t of He.fmSourceTemplate)if(-1!=t.indexOf("// CARRIER OUTPUTS")){const s=[];for(let t=0;t<e.customAlgorithm.carrierCount;t++)s.push("operator"+t+"Scaled");i.push(t.replace("/*operator#Scaled*/",s.join(" + ")))}else if(-1!=t.indexOf("// INSERT OPERATOR COMPUTATION HERE"))for(let t=p.operatorCount+2-1;t>=0;t--)for(const s of He.operatorSourceTemplate)if(-1!=s.indexOf("/* + operator@Scaled*/")){let n="";for(const i of e.customAlgorithm.modulatedBy[t])n+=" + operator"+(i-1)+"Scaled";const a=e.customFeedbackType.indices[t];if(a.length>0){n+=" + feedbackMult * (";const e=[];for(const t of a)e.push("operator"+(t-1)+"Output");n+=e.join(" + ")+")"}i.push(s.replace(/\#/g,t+"").replace("/* + operator@Scaled*/",n))}else i.push(s.replace(/\#/g,t+""));else if(-1!=t.indexOf("#"))for(let e=0;e<p.operatorCount+2;e++)i.push(t.replace(/\#/g,e+""));else i.push(t);const s="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {"+i.join("\n")+"}";He.fm6SynthFunctionCache[t]=new Function("Config","Synth",s)(p,He)}return He.fm6SynthFunctionCache[t]}throw new Error("Unrecognized instrument type: "+e.type)}static wrap(e,t){return(e%t+t)%t}static loopableChipSynth(e,t,i,s,n){const a=I(n.effects)&&n.aliases,o=e.tempMonoInstrumentSampleBuffer,r=n.wave,l=n.volumeScale,h=a&&8==n.type?r.length:r.length-1;let p=Math.max(0,Math.min(h,n.chipWaveLoopEnd)),u=Math.max(0,Math.min(p-1,n.chipWaveLoopStart)),c=p-u;c<2&&(u=0,p=h,c=h);const f=n.chipWaveLoopMode,m=n.chipWavePlayBackwards,d=s.specialIntervalExpressionMult*n.unisonSign;1!=n.unisonVoices||0!=n.unisonSpread||n.chord.customInterval||(s.phases[1]=s.phases[0]);let y=s.phaseDeltas[0]*h,v=s.phaseDeltas[1]*h,b=s.directions[0],g=s.directions[1],S=s.chipWaveCompletions[0],w=s.chipWaveCompletions[1];3!==f&&2!==f&&0!==f||(m?(b=-1,g=-1):(b=1,g=1)),0!==f&&1!==f||(S=0,w=0);let M=s.chipWaveCompletionsLastWave[0],k=s.chipWaveCompletionsLastWave[1];const x=1e3,F=+s.phaseDeltaScales[0],q=+s.phaseDeltaScales[1];let P=+s.expression;const T=+s.expressionDelta;let D=He.wrap(s.phases[0],1)*h,z=He.wrap(s.phases[1],1)*h,H=0,O=0;if(!a){const e=Math.floor(D),t=Math.floor(z),i=He.wrap(e,h),s=He.wrap(t,h),n=D-e,a=z-t;H=+r[i],O=+r[s],H+=(r[He.wrap(i+1,h)]-H)*n,O+=(r[He.wrap(s+1,h)]-O)*a}const E=s.noteFilters,C=0|s.noteFilterCount;let R=+s.initialNoteFilterInput1,A=+s.initialNoteFilterInput2;const G=He.applyFilters,N=t+i;let L=s.chipWavePrevWaves[0],W=s.chipWavePrevWaves[1];for(let e=t;e<N;e++){S>0&&S<x&&S++,w>0&&w<x&&w++;let t=0;D+=y*b,z+=v*g,2===f?(1===b?D>h&&(S<=0&&(M=L,S++),t=1):-1===b&&D<0&&(S<=0&&(M=L,S++),t=1),1===g?z>h&&(w<=0&&(k=W,w++),t=1):-1===b&&z<0&&(w<=0&&(k=W,w++),t=1)):3===f?(1===b?D>p&&(S<=0&&(M=L,S++),t=1):-1===b&&D<u&&(S<=0&&(M=L,S++),t=1),1===g?z>p&&(w<=0&&(k=W,w++),t=1):-1===b&&z<u&&(w<=0&&(k=W,w++),t=1)):0===f?(1===b?D>p&&(D=u+He.wrap(D-p,c),t=1):-1===b&&D<u&&(D=p-He.wrap(u-D,c),t=1),1===g?z>p&&(z=u+He.wrap(z-p,c),t=1):-1===g&&z<u&&(z=p-He.wrap(u-z,c),t=1)):1===f&&(1===b?D>p&&(D=p-He.wrap(D-p,c),b=-1,t=1):-1===b&&D<u&&(D=u+He.wrap(u-D,c),b=1,t=1),1===g?z>p&&(z=p-He.wrap(z-p,c),g=-1,t=1):-1===g&&z<u&&(z=u+He.wrap(u-z,c),g=1,t=1));let i=0,s=0,n=0;if(a){i=r[He.wrap(Math.floor(D),h)],s=r[He.wrap(Math.floor(z),h)],L=i,W=s;const e=S>0?(x-Math.min(S,x))/x:1,t=w>0?(x-Math.min(w,x))/x:1;n=0,n+=S>0?M*e:i,n+=w>0?k*t:s}else{const e=Math.floor(D),a=Math.floor(z),o=He.wrap(e,h),l=He.wrap(a,h);let c=r[o],m=r[l];const F=D-e,q=z-a;if(c+=(r[He.wrap(o+1,h)]-c)*F,m+=(r[He.wrap(l+1,h)]-m)*q,(0!==f||0!==u||p!==h)&&0!==t){let e=0,t=0;const i=Math.max(0,D-y*b),s=Math.max(0,z-v*g),n=Math.floor(i),a=Math.floor(s),o=He.wrap(n,h),l=He.wrap(a,h);e=r[o],t=r[l],e+=(r[He.wrap(o+1,h)]-e)*(i-n)*b,t+=(r[He.wrap(l+1,h)]-t)*(s-a)*g,H=e,O=t}1===f&&0!==t?(i=L,s=W):(i=(c-H)/(y*b),s=(m-O)/(v*g)),L=i,W=s,H=c,O=m;const P=S>0?(x-Math.min(S,x))/x:1,I=w>0?(x-Math.min(w,x))/x:1;n+=S>0?M*P:i,n+=w>0?k*I:s*d}const m=G(n*l,R,A,C,E);A=R,R=n*l,y*=F,v*=q;const I=m*P;P+=T,o[e]+=I}s.phases[0]=D/h,s.phases[1]=z/h,s.phaseDeltas[0]=y/h,s.phaseDeltas[1]=v/h,s.directions[0]=b,s.directions[1]=g,s.chipWaveCompletions[0]=S,s.chipWaveCompletions[1]=w,s.chipWavePrevWaves[0]=L,s.chipWavePrevWaves[1]=W,s.chipWaveCompletionsLastWave[0]=M,s.chipWaveCompletionsLastWave[1]=k,s.expression=P,e.sanitizeFilters(E),s.initialNoteFilterInput1=R,s.initialNoteFilterInput2=A}static chipSynth(e,t,i,s,n){const a=I(n.effects)&&n.aliases,o=e.tempMonoInstrumentSampleBuffer,r=n.wave,l=n.volumeScale,h=a&&8==n.type?r.length:r.length-1,p=s.specialIntervalExpressionMult*n.unisonSign;1!=n.unisonVoices||0!=n.unisonSpread||n.chord.customInterval||(s.phases[1]=s.phases[0]);let u=s.phaseDeltas[0]*h,c=s.phaseDeltas[1]*h;const f=+s.phaseDeltaScales[0],m=+s.phaseDeltaScales[1];let d=+s.expression;const y=+s.expressionDelta;let v=s.phases[0]%1*h,b=s.phases[1]%1*h;const g=s.noteFilters,S=0|s.noteFilterCount;let w=+s.initialNoteFilterInput1,M=+s.initialNoteFilterInput2;const k=He.applyFilters;let x=0,F=0;if(!a){const e=0|v,t=0|b,i=e%h,s=t%h,n=v-e,a=b-t;x=+r[i],F=+r[s],x+=(r[i+1]-x)*n,F+=(r[s+1]-F)*a}const q=t+i;for(let e=t;e<q;e++){let t,i,s;if(v+=u,b+=c,a)t=r[(0|v)%h],i=r[(0|b)%h],s=t+i;else{const e=0|v,n=0|b,a=e%h,o=n%h;let l=r[a],f=r[o];const m=v-e,d=b-n;l+=(r[a+1]-l)*m,f+=(r[o+1]-f)*d,t=(l-x)/u,i=(f-F)/c,x=l,F=f,s=t+i*p}const n=k(s*l,w,M,S,g);M=w,w=s*l,u*=f,c*=m;const q=n*d;d+=y,o[e]+=q}s.phases[0]=v/h,s.phases[1]=b/h,s.phaseDeltas[0]=u/h,s.phaseDeltas[1]=c/h,s.expression=d,e.sanitizeFilters(g),s.initialNoteFilterInput1=w,s.initialNoteFilterInput2=M}static harmonicsSynth(e,t,i,s,n){const a=e.tempMonoInstrumentSampleBuffer,o=n.wave,r=o.length-1,l=s.specialIntervalExpressionMult*n.unisonSign;1!=n.unisonVoices||0!=n.unisonSpread||n.chord.customInterval||(s.phases[1]=s.phases[0]);let h=s.phaseDeltas[0]*r,p=s.phaseDeltas[1]*r;const u=+s.phaseDeltaScales[0],c=+s.phaseDeltaScales[1];let f=+s.expression;const m=+s.expressionDelta;let d=s.phases[0]%1*r,y=s.phases[1]%1*r;const v=s.noteFilters,b=0|s.noteFilterCount;let g=+s.initialNoteFilterInput1,S=+s.initialNoteFilterInput2;const w=He.applyFilters,M=0|d,k=0|y,x=M%r,F=k%r,q=d-M,P=y-k;let I=+o[x],T=+o[F];I+=(o[x+1]-I)*q,T+=(o[F+1]-T)*P;const D=t+i;for(let e=t;e<D;e++){d+=h,y+=p;const t=0|d,i=0|y,s=t%r,n=i%r;let M=o[s],k=o[n];const x=d-t,F=y-i;M+=(o[s+1]-M)*x,k+=(o[n+1]-k)*F;const q=(M-I)/h,P=(k-T)/p;I=M,T=k;const D=q+P*l,z=w(D,g,S,b,v);S=g,g=D,h*=u,p*=c;const H=z*f;f+=m,a[e]+=H}s.phases[0]=d/r,s.phases[1]=y/r,s.phaseDeltas[0]=h/r,s.phaseDeltas[1]=p/r,s.expression=f,e.sanitizeFilters(v),s.initialNoteFilterInput1=g,s.initialNoteFilterInput2=S}static pickedStringSynth(e,t,i,s,n){const a=n.unisonVoices;let o=He.pickedStringFunctionCache[a];if(null==o){let e="return (synth, bufferIndex, runLength, tone, instrumentState) => {";e+="\n\t\t\t\tconst Config = beepbox.Config;\n\t\t\t\tconst Synth = beepbox.Synth;\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\n\t\t\t\tlet sustainFilterSample# = +pickedString#.sustainFilterSample;\n\t\t\t\tlet sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;\n\t\t\t\tlet sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;\n\t\t\t\tlet sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\n\t\t\t\tlet sustainFilterA1# = +pickedString#.sustainFilterA1;\n\t\t\t\tlet sustainFilterA2# = +pickedString#.sustainFilterA2;\n\t\t\t\tlet sustainFilterB0# = +pickedString#.sustainFilterB0;\n\t\t\t\tlet sustainFilterB1# = +pickedString#.sustainFilterB1;\n\t\t\t\tlet sustainFilterB2# = +pickedString#.sustainFilterB2;\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\n\t\t\t\tconst sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;\n\t\t\t\tconst sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;\n\t\t\t\tconst sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;\n\t\t\t\tconst sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;\n\t\t\t\tconst sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;\n\t\t\t\t\n\t\t\t\tlet expression = +tone.expression;\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\t\t\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\n\t\t\t\t\n\t\t\t\tconst filters = tone.noteFilters;\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tconst sustainFilterPrevOutput1# = sustainFilterSample#;\n\t\t\t\t\tsustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;\n\t\t\t\t\tsustainFilterPrevOutput2# = sustainFilterPrevOutput1#;\n\t\t\t\t\tsustainFilterPrevInput2# = sustainFilterPrevInput1#;\n\t\t\t\t\tsustainFilterPrevInput1# = allPassSample#;\n\t\t\t\t\t\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\n\t\t\t\t\tdelayIndex#++;\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = (";const t=[];for(let e=0;e<a;e++)t.push("fractionalDelaySample"+e+(1==e?" * unisonSign":""));e+=t.join(" + "),e+=") * expression;\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\tdata[sampleIndex] += sample;\n\t\t\t\t\t\n\t\t\t\t\texpression += expressionDelta;\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\n\t\t\t\t\tallPassG# += allPassGDelta#;\n\t\t\t\t\tsustainFilterA1# += sustainFilterA1Delta#;\n\t\t\t\t\tsustainFilterA2# += sustainFilterA2Delta#;\n\t\t\t\t\tsustainFilterB0# += sustainFilterB0Delta#;\n\t\t\t\t\tsustainFilterB1# += sustainFilterB1Delta#;\n\t\t\t\t\tsustainFilterB2# += sustainFilterB2Delta#;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\n\t\t\t\tpickedString#.sustainFilterSample = sustainFilterSample#;\n\t\t\t\tpickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;\n\t\t\t\tpickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;\n\t\t\t\tpickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\n\t\t\t\tpickedString#.allPassG = allPassG#;\n\t\t\t\tpickedString#.sustainFilterA1 = sustainFilterA1#;\n\t\t\t\tpickedString#.sustainFilterA2 = sustainFilterA2#;\n\t\t\t\tpickedString#.sustainFilterB0 = sustainFilterB0#;\n\t\t\t\tpickedString#.sustainFilterB1 = sustainFilterB1#;\n\t\t\t\tpickedString#.sustainFilterB2 = sustainFilterB2#;\n\t\t\t\t\n\t\t\t\ttone.expression = expression;\n\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t\t}",e=e.replace(/^.*\#.*$/gm,(e=>{const t=[];for(let i=0;i<a;i++)t.push(e.replace(/\#/g,String(i)));return t.join("\n")})),o=new Function("Config","Synth",e)(p,He),He.pickedStringFunctionCache[a]=o}o(e,t,i,s,n)}static additiveSynth(e,t,i,s,n){const a=e.tempMonoInstrumentSampleBuffer,o=n.wave,r=o.length-1;n.chord.customInterval||(s.phases[1]=s.phases[0]);let l=s.phaseDeltas[0]*r;const h=+s.phaseDeltaScales[0];let p=+s.expression;const u=+s.expressionDelta;let c=s.phases[0]%1*r;const f=s.noteFilters,m=0|s.noteFilterCount;let d=+s.initialNoteFilterInput1,y=+s.initialNoteFilterInput2;const v=He.applyFilters,b=0|c,g=b%r,S=c-b;let w=+o[g];w+=(o[g+1]-w)*S;const M=t+i;for(let e=t;e<M;e++){c+=l;const t=0|c,i=t%r;let s=o[i];const n=c-t;s+=(o[i+1]-s)*n;const b=(s-w)/l;w=s;const g=b,S=v(g,d,y,m,f);y=d,d=g,l*=h;const M=S*p;p+=u,a[e]+=M}s.phases[0]=c/r,s.phaseDeltas[0]=l/r,s.expression=p,e.sanitizeFilters(f),s.initialNoteFilterInput1=d,s.initialNoteFilterInput2=y}static effectsSynth(e,t,i,s,n,a){const o=I(a.effects),r=T(a.effects),l=a.eqFilterCount>0,h=D(a.effects),u=z(a.effects),c=H(a.effects),f=O(a.effects);let m=0;o&&(m|=1),m<<=1,r&&(m|=1),m<<=1,l&&(m|=1),m<<=1,h&&(m|=1),m<<=1,u&&(m|=1),m<<=1,c&&(m|=1),m<<=1,f&&(m|=1);let d=He.effectsFunctionCache[m];if(null==d){let e="return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {";const t=u||f||c;e+="\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;",t&&(e+="\n\t\t\t\t\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;"),o&&(e+="\n\t\t\t\t\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\n\t\t\t\tlet distortion = instrumentState.distortion;\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\n\t\t\t\tconst distortionFractionalResolution = 4.0;\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\n\t\t\t\t\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;"),r&&(e+="\n\t\t\t\t\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;"),l&&(e+="\n\t\t\t\t\n\t\t\t\tlet filters = instrumentState.eqFilters;\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;"),e+="\n\t\t\t\t\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;",h&&(e+="\n\t\t\t\t\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;"),u&&(e+="\n\t\t\t\t\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\n\t\t\t\t\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\n\t\t\t\t\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\n\t\t\t\tchorusPhase += chorusAngle * runLength;\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;"),c&&(e+="\n\t\t\t\t\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\n\t\t\t\t\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\n\t\t\t\t\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\n\t\t\t\t\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;"),f&&(e+="\n\t\t\t\t\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\n\t\t\t\t\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\n\t\t\t\t\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;"),e+="\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tlet sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n\t\t\t\t\ttempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;",o&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\n\t\t\t\t\tsample = distortionNextOutput;\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\n\t\t\t\t\tsample *= distortionOversampleCompensation;\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\n\t\t\t\t\tdistortion += distortionDelta;\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;"),r&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\n\t\t\t\t\t}\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;"),l&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = sample;\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;"),e+="\n\t\t\t\t\t\n\t\t\t\t\tsample *= eqFilterVolume;\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;",e+=h?"\n\t\t\t\t\t\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;":"\n\t\t\t\t\t\n\t\t\t\t\tlet sampleL = sample;\n\t\t\t\t\tlet sampleR = sample;",u&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;"),c&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\t\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\n\t\t\t\t\tsampleL += echoShelfSampleL;\n\t\t\t\t\tsampleR += echoShelfSampleR;\n\t\t\t\t\t\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\n\t\t\t\t\techoMult += echoMultDelta;\n                    "),f&&(e+="\n\t\t\t\t\t\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\n\t\t\t\t\treverb += reverbDelta;"),e+="\n\t\t\t\t\t\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\n\t\t\t\t\tmixVolume += mixVolumeDelta;",t&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;"),e+="\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);",t&&(e+="\n\t\t\t\t\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;"),o&&(e+="\n\t\t\t\t\n\t\t\t\tinstrumentState.distortion = distortion;\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\n\t\t\t\t\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;"),r&&(e+="\n\t\t\t\t\t\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;"),l&&(e+="\n\t\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\t// The filter input here is downstream from another filter so we\n\t\t\t\t// better make sure it's safe too.\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\n\t\t\t\t\tinitialFilterInput1 = 0.0;\n\t\t\t\t\tinitialFilterInput2 = 0.0;\n\t\t\t\t}\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;"),h&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;"),u&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;"),c&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\n\t\t\t\tinstrumentState.echoMult = echoMult;\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;"),f&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\n\t\t\t\tinstrumentState.reverbMult = reverb;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;"),e+="}",d=new Function("Config","Synth",e)(p,He),He.effectsFunctionCache[m]=d}d(e,t,i,s,n,a)}static pulseWidthSynth(e,t,i,s,n){const a=e.tempMonoInstrumentSampleBuffer,o=s.specialIntervalExpressionMult*n.unisonSign;1!=n.unisonVoices||0!=n.unisonSpread||n.chord.customInterval||(s.phases[1]=s.phases[0]);let r=s.phaseDeltas[0],l=s.phaseDeltas[1];const h=+s.phaseDeltaScales[0],p=+s.phaseDeltaScales[1];let u=+s.expression;const c=+s.expressionDelta;let f=s.phases[0]%1,m=s.phases[1]%1,d=s.pulseWidth;const y=s.pulseWidthDelta,v=s.noteFilters,b=0|s.noteFilterCount;let g=+s.initialNoteFilterInput1,S=+s.initialNoteFilterInput2;const w=He.applyFilters,M=t+i;for(let e=t;e<M;e++){const t=f%1,i=(f+d)%1,s=m%1,M=(m+d)%1;let x=i-t,F=M-s;if(!n.aliases){if(t<r)x+=.5*((k=t/r)+k-k*k-1);else if(t>1-r){x+=.5*((k=(t-1)/r)+k+k*k+1)}if(i<r)x-=.5*((k=i/r)+k-k*k-1);else if(i>1-r){x-=.5*((k=(i-1)/r)+k+k*k+1)}if(s<l)F+=.5*((k=s/l)+k-k*k-1);else if(s>1-l){F+=.5*((k=(s-1)/l)+k+k*k+1)}if(M<l)F-=.5*((k=M/l)+k-k*k-1);else if(M>1-l){var k;F-=.5*((k=(M-1)/l)+k+k*k+1)}}const q=x+F*o,P=w(q,g,S,b,v);S=g,g=q,f+=r,m+=l,r*=h,l*=p,d+=y;const I=P*u;u+=c,a[e]+=I}s.phases[0]=f,s.phases[1]=m,s.phaseDeltas[0]=r,s.phaseDeltas[1]=l,s.expression=u,s.pulseWidth=d,e.sanitizeFilters(v),s.initialNoteFilterInput1=g,s.initialNoteFilterInput2=S}static supersawSynth(e,t,i,s,n){const a=e.tempMonoInstrumentSampleBuffer,o=0|p.supersawVoiceCount;let r=s.phaseDeltas[0];const l=+s.phaseDeltaScales[0];let h=+s.expression;const u=+s.expressionDelta;let c=s.phases,f=+s.supersawDynamism;const m=+s.supersawDynamismDelta,d=s.supersawUnisonDetunes;let y=+s.supersawShape;const v=+s.supersawShapeDelta;let b=+s.supersawDelayLength;const g=+s.supersawDelayLengthDelta,S=s.supersawDelayLine,w=S.length-1>>0;let M=0|s.supersawDelayIndex;M=(M&w)+S.length;const k=s.noteFilters,x=0|s.noteFilterCount;let F=+s.initialNoteFilterInput1,q=+s.initialNoteFilterInput2;const P=He.applyFilters,I=t+i;for(let e=t;e<I;e++){let t=(c[0]+r)%1,i=t-.5*(1+(o-1)*f);if(!n.aliases)if(t<r)i-=.5*((T=t/r)+T-T*T-1);else if(t>1-r){var T;i-=.5*((T=(t-1)/r)+T+T*T+1)}c[0]=t;for(let e=1;e<o;e++){const t=r*d[e];let s=(c[e]+t)%1;if(i+=s*f,!n.aliases)if(s<t){const e=s/t;i-=.5*(e+e-e*e-1)*f}else if(s>1-t){const e=(s-1)/t;i-=.5*(e+e+e*e+1)*f}c[e]=s}S[M&w]=i;const s=M-b,p=0|s,I=p+1,D=s-p,z=S[p&w];M++;const H=i-(z+(S[I&w]-z)*D)*y,O=P(H,F,q,x,k);q=F,F=H,r*=l,f+=m,y+=v,b+=g;const E=O*h;h+=u,a[e]+=E}s.phaseDeltas[0]=r,s.expression=h,s.supersawDynamism=f,s.supersawShape=y,s.supersawDelayLength=b,s.supersawDelayIndex=M,e.sanitizeFilters(k),s.initialNoteFilterInput1=F,s.initialNoteFilterInput2=q}static noiseSynth(e,t,i,s,n){const a=e.tempMonoInstrumentSampleBuffer,o=n.wave,r=s.specialIntervalExpressionMult*n.unisonSign;1!=n.unisonVoices||0!=n.unisonSpread||n.chord.customInterval||(s.phases[1]=s.phases[0]);let l=s.phaseDeltas[0],h=s.phaseDeltas[1];const u=+s.phaseDeltaScales[0],c=+s.phaseDeltaScales[1];let f=+s.expression;const m=+s.expressionDelta;let d=s.phases[0]%1*p.chipNoiseLength,y=s.phases[1]%1*p.chipNoiseLength;0==s.phases[0]&&(d=Math.random()*p.chipNoiseLength,1!=n.unisonVoices||0!=n.unisonSpread||n.chord.customInterval||(y=d)),0!=s.phases[1]||1==n.unisonVoices&&0==n.unisonSpread&&!n.chord.customInterval||(y=Math.random()*p.chipNoiseLength);const v=p.chipNoiseLength-1;let b=+s.noiseSampleA,g=+s.noiseSampleB;const S=s.noteFilters,w=0|s.noteFilterCount;let M=+s.initialNoteFilterInput1,k=+s.initialNoteFilterInput2;const x=He.applyFilters,F=Math.min(1,l*n.noisePitchFilterMult),q=Math.min(1,h*n.noisePitchFilterMult),P=t+i;for(let e=t;e<P;e++){b+=(o[d&v]-b)*F,g+=(o[y&v]-g)*q;const t=b+g*r,i=x(t,M,k,w,S);k=M,M=t,d+=l,y+=h,l*=u,h*=c;const s=i*f;f+=m,a[e]+=s}s.phases[0]=d/p.chipNoiseLength,s.phases[1]=y/p.chipNoiseLength,s.phaseDeltas[0]=l,s.phaseDeltas[1]=h,s.expression=f,s.noiseSampleA=b,s.noiseSampleB=g,e.sanitizeFilters(S),s.initialNoteFilterInput1=M,s.initialNoteFilterInput2=k}static spectrumSynth(e,t,i,s,n){const a=e.tempMonoInstrumentSampleBuffer,o=n.wave,r=128,l=s.specialIntervalExpressionMult*n.unisonSign;1!=n.unisonVoices||0!=n.unisonSpread||n.chord.customInterval||(s.phases[1]=s.phases[0]);let h=s.phaseDeltas[0]*r,u=s.phaseDeltas[1]*r;const c=+s.phaseDeltaScales[0],f=+s.phaseDeltaScales[1];let m=+s.expression;const d=+s.expressionDelta;let y=+s.noiseSampleA,v=+s.noiseSampleB;const b=s.noteFilters,g=0|s.noteFilterCount;let S=+s.initialNoteFilterInput1,w=+s.initialNoteFilterInput2;const M=He.applyFilters;let k=s.phases[0]%1*p.spectrumNoiseLength,x=s.phases[1]%1*p.spectrumNoiseLength;0==s.phases[0]&&(k=He.findRandomZeroCrossing(o,p.spectrumNoiseLength)+h,1!=n.unisonVoices||0!=n.unisonSpread||n.chord.customInterval||(x=k)),0!=s.phases[1]||1==n.unisonVoices&&0==n.unisonSpread&&!n.chord.customInterval||(x=He.findRandomZeroCrossing(o,p.spectrumNoiseLength)+u);const F=p.spectrumNoiseLength-1,q=Math.min(1,h),P=Math.min(1,u),I=t+i;for(let e=t;e<I;e++){const t=0|k,i=0|x,s=t&F,n=i&F;let r=o[s],p=o[n];const I=k-t,T=x-i;r+=(o[s+1]-r)*I,p+=(o[n+1]-p)*T,y+=(r-y)*q,v+=(p-v)*P;const D=y+v*l,z=M(D,S,w,g,b);w=S,S=D,k+=h,x+=u,h*=c,u*=f;const H=z*m;m+=d,a[e]+=H}s.phases[0]=k/p.spectrumNoiseLength,s.phases[1]=x/p.spectrumNoiseLength,s.phaseDeltas[0]=h/r,s.phaseDeltas[1]=u/r,s.expression=m,s.noiseSampleA=y,s.noiseSampleB=v,e.sanitizeFilters(b),s.initialNoteFilterInput1=S,s.initialNoteFilterInput2=w}static drumsetSynth(e,t,i,s,n){const a=e.tempMonoInstrumentSampleBuffer;let o=n.getDrumsetWave(s.drumsetPitch);const r=De.drumsetIndexReferenceDelta(s.drumsetPitch);let l=s.phaseDeltas[0]/r;const h=+s.phaseDeltaScales[0];let u=+s.expression;const c=+s.expressionDelta,f=s.noteFilters,m=0|s.noteFilterCount;let d=+s.initialNoteFilterInput1,y=+s.initialNoteFilterInput2;const v=He.applyFilters;let b=s.phases[0]%1*p.spectrumNoiseLength;0==s.phases[0]&&(b=He.findRandomZeroCrossing(o,p.spectrumNoiseLength)+l);const g=p.spectrumNoiseLength-1,S=t+i;for(let e=t;e<S;e++){const t=0|b,i=t&g;let s=o[i];const n=b-t;s+=(o[i+1]-s)*n;const r=s,p=v(r,d,y,m,f);y=d,d=r,b+=l,l*=h;const S=p*u;u+=c,a[e]+=S}s.phases[0]=b/p.spectrumNoiseLength,s.phaseDeltas[0]=l*r,s.expression=u,e.sanitizeFilters(f),s.initialNoteFilterInput1=d,s.initialNoteFilterInput2=y}static modSynth(e,t,i,s,n){if(!e.song)return;let a=p.modCount-1-s.pitches[0];if(n.invalidModulators[a])return;let o=n.modulators[a],r=[];if(p.modulators[n.modulators[a]].forSong)r.push(0);else if(n.modInstruments[a]==e.song.channels[n.modChannels[a]].instruments.length)for(let t=0;t<e.song.channels[n.modChannels[a]].instruments.length;t++)r.push(t);else n.modInstruments[a]>e.song.channels[n.modChannels[a]].instruments.length?null!=e.song.getPattern(n.modChannels[a],e.bar)&&(r=e.song.getPattern(n.modChannels[a],e.bar).instruments):r.push(n.modInstruments[a]);for(let t=0;t<r.length;t++){e.setModValue(s.expression,s.expression+s.expressionDelta,n.modChannels[a],r[t],o);for(let i=0;i<e.heldMods.length;i++)p.modulators[n.modulators[a]].forSong?e.heldMods[i].setting==o&&e.setModValue(e.heldMods[i].volume,e.heldMods[i].volume,n.modChannels[a],r[t],o):e.heldMods[i].channelIndex==n.modChannels[a]&&e.heldMods[i].instrumentIndex==r[t]&&e.heldMods[i].setting==o&&e.setModValue(e.heldMods[i].volume,e.heldMods[i].volume,n.modChannels[a],r[t],o);if(o==p.modulators.dictionary["reset arp"].index&&0==e.tick&&s.noteStartPart==e.beat*p.partsPerBeat+e.part)e.channels[n.modChannels[a]].instruments[r[t]].arpTime=0;else if(o==p.modulators.dictionary["next bar"].index)e.wantToSkip=!0;else if(o==p.modulators.dictionary["song eq"].index){const t=e.song;let o=0|n.modFilterTypes[a];if(0==o){let n=0;const a=e.getTicksIntoBar()/p.ticksPerPart;for(;s.note.start+s.note.pins[n].time<=a;)n++;let o=(a-s.note.start+i/(e.getSamplesPerTick()*p.ticksPerPart)*p.ticksPerPart-s.note.pins[n-1].time)/(s.note.pins[n].time-s.note.pins[n-1].time);null!=t.eqSubFilters[s.note.pins[n-1].size]||null!=t.eqSubFilters[s.note.pins[n].size]?t.tmpEqFilterEnd=Me.lerpFilters(t.eqSubFilters[s.note.pins[n-1].size],t.eqSubFilters[s.note.pins[n].size],o):t.tmpEqFilterEnd=t.eqFilter}else{for(let e=0;e<p.filterMorphCount;e++)t.tmpEqFilterEnd==t.eqSubFilters[e]&&null!=t.tmpEqFilterEnd&&(t.tmpEqFilterEnd=new Me,t.tmpEqFilterEnd.fromJsonObject(t.eqSubFilters[e].toJsonObject()));null==t.tmpEqFilterEnd&&(t.tmpEqFilterEnd=new Me,t.tmpEqFilterEnd.fromJsonObject(t.eqFilter.toJsonObject())),t.tmpEqFilterEnd.controlPointCount>Math.floor((o-1)/2)&&(o%2?t.tmpEqFilterEnd.controlPoints[Math.floor((o-1)/2)].freq=s.expression+s.expressionDelta:t.tmpEqFilterEnd.controlPoints[Math.floor((o-1)/2)].gain=s.expression+s.expressionDelta)}}else if(o==p.modulators.dictionary["eq filter"].index){const o=e.song.channels[n.modChannels[a]].instruments[r[t]];if(!o.eqFilterType){let t=0|n.modFilterTypes[a];if(0==t){let t=0;const n=e.getTicksIntoBar()/p.ticksPerPart;for(;s.note.start+s.note.pins[t].time<=n;)t++;let a=(n-s.note.start+i/(e.getSamplesPerTick()*p.ticksPerPart)*p.ticksPerPart-s.note.pins[t-1].time)/(s.note.pins[t].time-s.note.pins[t-1].time);null!=o.eqSubFilters[s.note.pins[t-1].size]||null!=o.eqSubFilters[s.note.pins[t].size]?o.tmpEqFilterEnd=Me.lerpFilters(o.eqSubFilters[s.note.pins[t-1].size],o.eqSubFilters[s.note.pins[t].size],a):o.tmpEqFilterEnd=o.eqFilter}else{for(let e=0;e<p.filterMorphCount;e++)o.tmpEqFilterEnd==o.eqSubFilters[e]&&null!=o.tmpEqFilterEnd&&(o.tmpEqFilterEnd=new Me,o.tmpEqFilterEnd.fromJsonObject(o.eqSubFilters[e].toJsonObject()));null==o.tmpEqFilterEnd&&(o.tmpEqFilterEnd=new Me,o.tmpEqFilterEnd.fromJsonObject(o.eqFilter.toJsonObject())),o.tmpEqFilterEnd.controlPointCount>Math.floor((t-1)/2)&&(t%2?o.tmpEqFilterEnd.controlPoints[Math.floor((t-1)/2)].freq=s.expression+s.expressionDelta:o.tmpEqFilterEnd.controlPoints[Math.floor((t-1)/2)].gain=s.expression+s.expressionDelta)}}}else if(o==p.modulators.dictionary["note filter"].index){const o=e.song.channels[n.modChannels[a]].instruments[r[t]];if(!o.noteFilterType){let t=0|n.modFilterTypes[a];if(0==t){let t=0;const n=e.getTicksIntoBar()/p.ticksPerPart;for(;s.note.start+s.note.pins[t].time<=n;)t++;let a=(n-s.note.start+i/(e.getSamplesPerTick()*p.ticksPerPart)*p.ticksPerPart-s.note.pins[t-1].time)/(s.note.pins[t].time-s.note.pins[t-1].time);null!=o.noteSubFilters[s.note.pins[t-1].size]||null!=o.noteSubFilters[s.note.pins[t].size]?o.tmpNoteFilterEnd=Me.lerpFilters(o.noteSubFilters[s.note.pins[t-1].size],o.noteSubFilters[s.note.pins[t].size],a):o.tmpNoteFilterEnd=o.noteFilter}else{for(let e=0;e<p.filterMorphCount;e++)o.tmpNoteFilterEnd==o.noteSubFilters[e]&&null!=o.tmpNoteFilterEnd&&(o.tmpNoteFilterEnd=new Me,o.tmpNoteFilterEnd.fromJsonObject(o.noteSubFilters[e].toJsonObject()));null==o.tmpNoteFilterEnd&&(o.tmpNoteFilterEnd=new Me,o.tmpNoteFilterEnd.fromJsonObject(o.noteFilter.toJsonObject())),o.tmpNoteFilterEnd.controlPointCount>Math.floor((t-1)/2)&&(t%2?o.tmpNoteFilterEnd.controlPoints[Math.floor((t-1)/2)].freq=s.expression+s.expressionDelta:o.tmpNoteFilterEnd.controlPoints[Math.floor((t-1)/2)].gain=s.expression+s.expressionDelta)}}}else if(o==p.modulators.dictionary["individual envelope speed"].index){const i=e.song.channels[n.modChannels[a]].instruments[r[t]];let o=n.modEnvelopeNumbers[a],l=s.expression+s.expressionDelta;Number.isInteger(l)?i.envelopes[o].tempEnvelopeSpeed=p.perEnvelopeSpeedIndices[l]:(l=(1-l%1)*p.perEnvelopeSpeedIndices[Math.floor(l)]+l%1*p.perEnvelopeSpeedIndices[Math.ceil(l)],i.envelopes[o].tempEnvelopeSpeed=l)}}}static findRandomZeroCrossing(e,t){let i=Math.random()*t;const s=t-1;let n=i&s,a=e[n];for(let o=128;o>0;o--){const o=n+16&s,r=e[o];if(a*r<=0){for(let o=0;o<16;o++){const o=n+1&s,r=e[o];if(a*r<=0){const e=r-a;i=n,Math.abs(e)>1e-8&&(i+=-a/e),i=Math.max(0,i)%t;break}n=o,a=r}break}n=o,a=r}return i}static instrumentVolumeToVolumeMult(e){return e==-p.volumeRange/2?0:Math.pow(2,p.volumeLogScale*e)}static volumeMultToInstrumentVolume(e){return e<=0?-p.volumeRange/2:Math.min(p.volumeRange,Math.log(e)/Math.LN2/p.volumeLogScale)}static noteSizeToVolumeMult(e){return Math.pow(Math.max(0,e)/p.noteSizeMax,1.5)}static volumeMultToNoteSize(e){return Math.pow(Math.max(0,e),1/1.5)*p.noteSizeMax}static fadeInSettingToSeconds(e){return.0125*(.95*e+.05*e*e)}static secondsToFadeInSetting(e){return Y(0,p.fadeInRange,Math.round((-.95+Math.sqrt(.9025+.2*e/.0125))/.1))}static fadeOutSettingToTicks(e){return p.fadeOutTicks[e]}static ticksToFadeOutSetting(e){let t=p.fadeOutTicks[0];if(e<=t)return 0;for(let i=1;i<p.fadeOutTicks.length;i++){let s=p.fadeOutTicks[i];if(e<=s)return e<(t+s)/2?i-1:i;t=s}return p.fadeOutTicks.length-1}static detuneToCents(e){return e-p.detuneCenter}static centsToDetune(e){return e+p.detuneCenter}static getOperatorWave(e,t){return 2!=e?p.operatorWaves[e]:p.pwmOperatorWaves[t]}getSamplesPerTick(){if(null==this.song)return 0;let e=this.song.getBeatsPerMinute();return this.isModActive(p.modulators.dictionary.tempo.index)&&(e=this.getModValue(p.modulators.dictionary.tempo.index)),this.getSamplesPerTickSpecificBPM(e)}getSamplesPerTickSpecificBPM(e){const t=e/60,i=p.partsPerBeat*t,s=p.ticksPerPart*i;return this.samplesPerSecond/s}static fittingPowerOfTwo(e){return 1<<32-Math.clz32(Math.ceil(e)-1)}sanitizeFilters(e){let t=!1;for(const i of e){const e=Math.abs(i.output1),s=Math.abs(i.output2);if(!(e<100&&s<100)){t=!0;break}e<J&&(i.output1=0),s<J&&(i.output2=0)}if(t)for(const t of e)t.output1=0,t.output2=0}static sanitizeDelayLine(e,t,i){for(;;){const s=--t&i,n=Math.abs(e[s]);if(Number.isFinite(n)&&(0==n||n>=J))break;e[s]=0}}static applyFilters(e,t,i,s,n){for(let a=0;a<s;a++){const s=n[a],o=s.output1,r=s.output2,l=s.a1,h=s.a2,p=s.b0,u=s.b1,c=s.b2;e=p*e+u*t+c*i-l*o-h*r,s.a1=l+s.a1Delta,s.a2=h+s.a2Delta,s.useMultiplicativeInputCoefficients?(s.b0=p*s.b0Delta,s.b1=u*s.b1Delta,s.b2=c*s.b2Delta):(s.b0=p+s.b0Delta,s.b1=u+s.b1Delta,s.b2=c+s.b2Delta),s.output2=o,s.output1=e,i=r,t=o}return e}computeTicksSinceStart(){var e,t;const i=(null===(e=this.song)||void 0===e?void 0:e.beatsPerBar)?null===(t=this.song)||void 0===t?void 0:t.beatsPerBar:8;return this.tick+p.ticksPerPart*(this.part+p.partsPerBeat*(this.beat+i*this.bar))}}return He.tempFilterStartCoefficients=new L,He.tempFilterEndCoefficients=new L,He.fmSynthFunctionCache={},He.fm6SynthFunctionCache={},He.effectsFunctionCache=Array(128).fill(void 0),He.pickedStringFunctionCache=Array(3).fill(void 0),He.fmSourceTemplate=("\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\tconst sineWave = Config.sineWave;\n\t\t\t\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * "+p.sineWaveLength+";\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * "+p.sineWaveLength+";\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n        const operator#Wave      = tone.operatorWaves[#].samples;\n\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\n        let expression = +tone.expression;\n\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\n\t\tconst filters = tone.noteFilters;\n\t\tconst filterCount = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters = Synth.applyFilters;\n\t\t\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\tconst inputSample = fmOutput;\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\n\t\t\t\n\t\t\tconst output = sample * expression;\n\t\t\texpression += expressionDelta;\n\n\t\t\tdata[sampleIndex] += output;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / "+p.sineWaveLength+";\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / "+p.sineWaveLength+";\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\n\t\t    tone.feedbackOutputs[#] = operator#Output;\n\t\t    tone.feedbackMult = feedbackMult;\n\t\t    tone.expression = expression;\n\t\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t").split("\n"),He.operatorSourceTemplate=("\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\t\tconst operator#Index    = operator#PhaseInt & "+p.sineWaveMask+";\n                const operator#Sample   = operator#Wave[operator#Index];\n                operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t").split("\n"),e.AdditiveWave=ge,e.Channel=Fe,e.Config=p,e.CustomAlgorithm=fe,e.CustomFeedBack=me,e.EnvelopeSettings=ke,e.FilterControlPoint=we,e.FilterSettings=Me,e.HarmonicsWave=ve,e.Instrument=xe,e.Note=pe,e.Operator=ce,e.Pattern=ue,e.Song=qe,e.SpectrumWave=de,e.Synth=He,e.clamp=Y,e.makeNotePin=he,e.parseFloatWithDefault=Z,e.parseIntWithDefault=ee,Object.defineProperty(e,"te",{value:!0}),e}({});
//# sourceMappingURL=beepbox_synth.min.js.map